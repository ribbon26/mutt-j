  The Mutt E-Mail Client
  by Michael Elkins <me@cs.hmc.edu>
  version 1.5.6

  ``All mail clients suck.  This one just sucks less.'' -me, circa 1995
  ______________________________________________________________________

  目次


























































  1. 紹介
     1.1 ホウムペイジ
     1.2 メイリングリスト
     1.3 ソフトウェア配布サイト
     1.4 IRC
     1.5 USENET
     1.6 Copyright (著作権)

  2. 開始
     2.1 メニュー内で動きまわる
     2.2 入力領域を編集する
     2.3 メイルを読む ― インデックスとペイジャ
        2.3.1 メッセイジインデックス
           2.3.1.1 ステイタスフラグ
        2.3.2 ペイジャ
        2.3.3 スレッドモウド
        2.3.4 その他の機能
     2.4 メイルを送信する
        2.4.1 メッセイジヘッダを編集する
        2.4.2 Mutt で PGP を使う
        2.4.3 匿名メッセイジを Mixmaster 経由で送信する
     2.5 メイルを転送・中継する
     2.6 メイルを延期する

  3. 設定
     3.1 初期化ファイルの構文
     3.2 エイリアスを定義・使用する
     3.3 既定のキー割り当てを変更する
     3.4 文字セットのエイリアスを定義する
     3.5 メイルボックスに基づいて変数を設定する
     3.6 キーボードマクロ
     3.7 色と白黒の画面属性を使う
     3.8 不要なメッセイジヘッダを無視 (間引き) する
     3.9 代替アドレス
     3.10 メイリングリスト
     3.11 複数のスプールメイルボックスを使う
     3.12 メイルを受信するメイルボックスを定義する
     3.13 ユーザ定義へッダ
     3.14 メッセイジ閲覧時のヘッダの順序を定義する
     3.15 既定のセイヴファイル名を指定する
     3.16 メッセイジ作成時の既定の Fcc: メイルボックスを指定する
     3.17 既定のセイヴファイル名と既定の Fcc: メイルボックスを同時に指定する
     3.18 メッセイジの宛先によって設定を変更する
     3.19 メッセイジ整形前に設定を変更する
     3.20 宛先の人の暗号鍵を選ぶ
     3.21 キーボードバッファにキーシークウェンスを加える
     3.22 関数を実行する
     3.23 メイルの得点付け
     3.24 変数を設定する
     3.25 初期化コマンドを別のファイルから読み込む
     3.26 フックを取り除く

  4. 高度な使い方
     4.1 正規表現
     4.2 パターン
        4.2.1 パターン修飾子
        4.2.2 複雑なパターン
        4.2.3 日付で検索する
     4.3 タグを使う
     4.4 フックを使う
        4.4.1 フックにおけるメッセイジ合致条件
     4.5 アドレスの外部問い合わせ
     4.6 メイルボックスの形式
     4.7 メイルボックスの省略形
     4.8 メイリングリストを扱う
     4.9 配送状況通知 (Delivery Status Notification = DSN) サポート
     4.10 POP3 サポート (オプション)
     4.11 IMAP サポート (オプション)
        4.11.1 フォルダブラウザ
        4.11.2 認証
     4.12 複数の IMAP/POP アカウントを使う (オプション)
     4.13 URL に対して WWW ブラウザを起動する (外部コマンド)

  5. Mutt の MIME サポート
     5.1 Mutt で MIME を使う
        5.1.1 ペイジャで MIME メッセイジを閲覧する
        5.1.2 添付ファイルメニュー
        5.1.3 コンポウズメニュー
     5.2 mime.types による MIME タイプ設定
     5.3 mailcap による MIME ヴューワの設定
        5.3.1 mailcap ファイルの基本
        5.3.2 mailcap の安全な使い方
        5.3.3 一歩進んだ mailcap の使い方
           5.3.3.1 付加的な欄
           5.3.3.2 検索順序
           5.3.3.3 コマンド展開
        5.3.4 mailcap ファイルの例
     5.4 MIME 自動閲覧
     5.5 MIME Multipart/Alternative
     5.6 MIME 調査

  6. 早見表
     6.1 コマンドラインオプション
     6.2 設定コマンド
     6.3 設定変数
        6.3.1 abort_nosubject
        6.3.2 abort_unmodified
        6.3.3 alias_file
        6.3.4 alias_format
        6.3.5 allow_8bit
        6.3.6 allow_ansi
        6.3.7 arrow_cursor
        6.3.8 ascii_chars
        6.3.9 askbcc
        6.3.10 askcc
        6.3.11 attach_format
        6.3.12 attach_sep
        6.3.13 attach_split
        6.3.14 attribution
        6.3.15 autoedit
        6.3.16 auto_tag
        6.3.17 beep
        6.3.18 beep_new
        6.3.19 bounce
        6.3.20 bounce_delivered
        6.3.21 charset
        6.3.22 check_new
        6.3.23 collapse_unread
        6.3.24 uncollapse_jump
        6.3.25 compose_format
        6.3.26 config_charset
        6.3.27 confirmappend
        6.3.28 confirmcreate
        6.3.29 connect_timeout
        6.3.30 content_type
        6.3.31 copy
        6.3.32 crypt_use_gpgme
        6.3.33 crypt_autopgp
        6.3.34 crypt_autosmime
        6.3.35 date_format
        6.3.36 default_hook
        6.3.37 delete
        6.3.38 delete_untag
        6.3.39 digest_collapse
        6.3.40 display_filter
        6.3.41 dotlock_program
        6.3.42 dsn_notify
        6.3.43 dsn_return
        6.3.44 duplicate_threads
        6.3.45 edit_headers
        6.3.46 editor
        6.3.47 encode_from
        6.3.48 envelope_from
        6.3.49 escape
        6.3.50 fast_reply
        6.3.51 fcc_attach
        6.3.52 fcc_clear
        6.3.53 folder
        6.3.54 folder_format
        6.3.55 followup_to
        6.3.56 force_name
        6.3.57 forward_decode
        6.3.58 forward_edit
        6.3.59 forward_format
        6.3.60 forward_quote
        6.3.61 from
        6.3.62 gecos_mask
        6.3.63 hdrs
        6.3.64 header
        6.3.65 help
        6.3.66 hidden_host
        6.3.67 hide_limited
        6.3.68 hide_missing
        6.3.69 hide_top_limited
        6.3.70 hide_top_missing
        6.3.71 history
        6.3.72 honor_followup_to
        6.3.73 hostname
        6.3.74 ignore_list_reply_to
        6.3.75 imap_authenticators
        6.3.76 imap_delim_chars
        6.3.77 imap_force_ssl
        6.3.78 imap_home_namespace
        6.3.79 imap_keepalive
        6.3.80 imap_list_subscribed
        6.3.81 imap_pass
        6.3.82 imap_passive
        6.3.83 imap_peek
        6.3.84 imap_servernoise
        6.3.85 imap_user
        6.3.86 implicit_autoview
        6.3.87 include
        6.3.88 indent_string
        6.3.89 index_format
        6.3.90 ispell
        6.3.91 keep_flagged
        6.3.92 locale
        6.3.93 mail_check
        6.3.94 mailcap_path
        6.3.95 mailcap_sanitize
        6.3.96 maildir_trash
        6.3.97 mark_old
        6.3.98 markers
        6.3.99 mask
        6.3.100 mbox
        6.3.101 mbox_type
        6.3.102 metoo
        6.3.103 menu_scroll
        6.3.104 meta_key
        6.3.105 mh_purge
        6.3.106 mh_seq_flagged
        6.3.107 mh_seq_replied
        6.3.108 mh_seq_unseen
        6.3.109 mime_forward
        6.3.110 mime_forward_decode
        6.3.111 mime_forward_rest
        6.3.112 mix_entry_format
        6.3.113 mixmaster
        6.3.114 move
        6.3.115 message_format
        6.3.116 narrow_tree
        6.3.117 pager
        6.3.118 pager_context
        6.3.119 pager_format
        6.3.120 pager_index_lines
        6.3.121 pager_stop
        6.3.122 crypt_autosign
        6.3.123 crypt_autoencrypt
        6.3.124 pgp_ignore_subkeys
        6.3.125 crypt_replyencrypt
        6.3.126 crypt_replysign
        6.3.127 crypt_replysignencrypted
        6.3.128 crypt_timestamp
        6.3.129 pgp_use_gpg_agent
        6.3.130 crypt_verify_sig
        6.3.131 smime_is_default
        6.3.132 smime_ask_cert_label
        6.3.133 smime_decrypt_use_default_key
        6.3.134 pgp_entry_format
        6.3.135 pgp_good_sign
        6.3.136 pgp_check_exit
        6.3.137 pgp_long_ids
        6.3.138 pgp_retainable_sigs
        6.3.139 pgp_autoinline
        6.3.140 pgp_replyinline
        6.3.141 pgp_show_unusable
        6.3.142 pgp_sign_as
        6.3.143 pgp_strict_enc
        6.3.144 pgp_timeout
        6.3.145 pgp_sort_keys
        6.3.146 pgp_mime_auto
        6.3.147 pgp_auto_traditional
        6.3.148 pgp_decode_command
        6.3.149 pgp_getkeys_command
        6.3.150 pgp_verify_command
        6.3.151 pgp_decrypt_command
        6.3.152 pgp_clearsign_command
        6.3.153 pgp_sign_command
        6.3.154 pgp_encrypt_sign_command
        6.3.155 pgp_encrypt_only_command
        6.3.156 pgp_import_command
        6.3.157 pgp_export_command
        6.3.158 pgp_verify_key_command
        6.3.159 pgp_list_secring_command
        6.3.160 pgp_list_pubring_command
        6.3.161 forward_decrypt
        6.3.162 smime_timeout
        6.3.163 smime_encrypt_with
        6.3.164 smime_keys
        6.3.165 smime_ca_location
        6.3.166 smime_certificates
        6.3.167 smime_decrypt_command
        6.3.168 smime_verify_command
        6.3.169 smime_verify_opaque_command
        6.3.170 smime_sign_command
        6.3.171 smime_sign_opaque_command
        6.3.172 smime_encrypt_command
        6.3.173 smime_pk7out_command
        6.3.174 smime_get_cert_command
        6.3.175 smime_get_signer_cert_command
        6.3.176 smime_import_cert_command
        6.3.177 smime_get_cert_email_command
        6.3.178 smime_default_key
        6.3.179 ssl_starttls
        6.3.180 certificate_file
        6.3.181 ssl_usesystemcerts
        6.3.182 entropy_file
        6.3.183 ssl_use_sslv2
        6.3.184 ssl_use_sslv3
        6.3.185 ssl_use_tlsv1
        6.3.186 pipe_split
        6.3.187 pipe_decode
        6.3.188 pipe_sep
        6.3.189 pop_authenticators
        6.3.190 pop_auth_try_all
        6.3.191 pop_checkinterval
        6.3.192 pop_delete
        6.3.193 pop_host
        6.3.194 pop_last
        6.3.195 pop_reconnect
        6.3.196 pop_user
        6.3.197 pop_pass
        6.3.198 post_indent_string
        6.3.199 postpone
        6.3.200 postponed
        6.3.201 preconnect
        6.3.202 print
        6.3.203 print_command
        6.3.204 print_decode
        6.3.205 print_split
        6.3.206 prompt_after
        6.3.207 query_command
        6.3.208 quit
        6.3.209 quote_regexp
        6.3.210 read_inc
        6.3.211 read_only
        6.3.212 realname
        6.3.213 recall
        6.3.214 record
        6.3.215 reply_regexp
        6.3.216 reply_self
        6.3.217 reply_to
        6.3.218 resolve
        6.3.219 reverse_alias
        6.3.220 reverse_name
        6.3.221 reverse_realname
        6.3.222 rfc2047_parameters
        6.3.223 save_address
        6.3.224 save_empty
        6.3.225 save_name
        6.3.226 score
        6.3.227 score_threshold_delete
        6.3.228 score_threshold_flag
        6.3.229 score_threshold_read
        6.3.230 send_charset
        6.3.231 sendmail
        6.3.232 sendmail_wait
        6.3.233 shell
        6.3.234 sig_dashes
        6.3.235 sig_on_top
        6.3.236 signature
        6.3.237 simple_search
        6.3.238 smart_wrap
        6.3.239 smileys
        6.3.240 sleep_time
        6.3.241 sort
        6.3.242 sort_alias
        6.3.243 sort_aux
        6.3.244 sort_browser
        6.3.245 sort_re
        6.3.246 spoolfile
        6.3.247 status_chars
        6.3.248 status_format
        6.3.249 status_on_top
        6.3.250 strict_threads
        6.3.251 suspend
        6.3.252 text_flowed
        6.3.253 thread_received
        6.3.254 thorough_search
        6.3.255 tilde
        6.3.256 timeout
        6.3.257 tmpdir
        6.3.258 to_chars
        6.3.259 tunnel
        6.3.260 use_8bitmime
        6.3.261 use_domain
        6.3.262 use_from
        6.3.263 use_ipv6
        6.3.264 user_agent
        6.3.265 visual
        6.3.266 wait_key
        6.3.267 weed
        6.3.268 wrap_search
        6.3.269 wrapmargin
        6.3.270 write_inc
        6.3.271 write_bcc
     6.4 関数
        6.4.1 generic
        6.4.2 index
        6.4.3 pager
        6.4.4 alias
        6.4.5 query
        6.4.6 attach
        6.4.7 compose
        6.4.8 postpone
        6.4.9 browser
        6.4.10 pgp
        6.4.11 editor

  7. 雑録
     7.1 謝辞
     7.2 この文書について
     7.3 日本語訳について


  ______________________________________________________________________

  11..  紹紹介介

  MMuutttt は小さいながらも非常にパワフルなテキストベイス MIME メイルクライ
  アントです。その高い柔軟性に加えて、キー割り当てやキーボードマクロ、メ
  イルのスレッド表示、正規表現検索、さらにはメッセイジ選択用の強力なパタ
  ーン言語といった高度な機能により、まさしくメイルのパワーユーザにぴった
  りであると言えます。


  「メイルクライアントはぜんぶ腐ってる。こいつはそれほど腐っ
  ちゃいないってだけのことさ」 - 作者 Michael Elkins, 1995 年
  頃の発言



  11..11..  ホホウウムムペペイイジジ

  http://www.mutt.org/


  11..22..  メメイイリリンンググリリスストト

  以下のメイリングリストを講読するにはメッセイジ本文に _s_u_b_s_c_r_i_b_eと書いて
  mutt-○○_-_r_e_q_u_e_s_t@mutt.org に送ってください。


  +o  mutt-announce@mutt.org ― 流量の少ない、アナウンス用リスト

  +o  mutt-users@mutt.org ― 質問、バグ報告、要望

  +o  mutt-dev@mutt.org ― 開発メイリングリスト

  メメモモ: _m_u_t_t_-_a_n_n_o_u_n_c_e への投稿は自動的に _m_u_t_t_-_u_s_e_r_s に転送されるので、両
  方を講読する必要はありません。


  11..33..  ソソフフトトウウェェアア配配布布ササイイトト


  +o  ftp://ftp.mutt.org/mutt/

  ミラーサイトについては http://www.mutt.org/download.html をご覧くださ
  い。


  11..44..  IIRRCC

  OpenProjects.Net (www.openprojects.net) のチャンネル _#_m_u_t_t に行け
  ば、Mutt に関心のある人と会話できます。


  11..55..  UUSSEENNEETT

  ニューズグループ comp.mail.mutt を見てください。


  11..66..  CCooppyyrriigghhtt ((著著作作権権))

  Mutt is Copyright (C) 1996-2000 Michael R. Elkins <me@cs.hmc.edu> and
  others

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or (at
  your option) any later version.

  This program is distributed in the hope that it will be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111, USA.

  (参考訳)

  このプログラムはフリーソフトウェアです。Free Software Foundation によ
  る GNU General Public License のヴァージョン 2 もしくはそれ以降のヴァ
  ージョン (自由選択) のいずれかに従う限り、自由に変更および再配布できま
  す。

  このプログラムは役に立つことを願って配布されていますが、「まったく無保
  証」です。商品能力や特定の目的への適性について、暗黙の保証さえありませ
  ん。詳細は GNU General Public License を参照してください。

  GNU General Public License の文面は、このプログラムに付いてきたはずで
  す。そうでなければ、Free Software Foudation, Inc., 59 Temple Place -
  Suite 330, Boston, MA 02111, USA に手紙をください。


  22..  開開始始


  この章の目的は Mutt の使い方を概観することです。ほかにもマニュアルの別
  の場所で説明されている機能はたくさんあります。さらには Mutt FAQ や種々
  のウェブペイジで手に入る情報もあります。詳しくは Mutt Page を参照して
  ください。

  この章では、配布されているままの既定のキー割り当てで説明します。自分の
  サイトではシステム管理者が既定値を変えてしまっているかもしれません。ど
  のメニューでも "?" を押して現在のキー割り当てを表示できます。

  まず必要なのは Mutt を起動することです。コマンドラインから mutt と入力
  するだけです。コマンドラインの種々のオプションについては mutt の man
  ペイジか``「早見」の章''を参照してください。


  22..11..  メメニニュューー内内でで動動ききままわわるる


  情報はメニューの中に、ELM そっくりの形式で表示されます。以下は各メニュ
  ーでの操作に共通のキーの表です。



       j と Down       next-entry      次の項目へ移動
       k と Up         previous-entry  前の項目へ移動
       z と PageDn     page-down       次のペイジに行く
       Z と PageUp     page-up         前のペイジに行く
       = と Home       first-entry     最初の項目に飛ぶ
       * と End        last-entry      最後の項目に飛ぶ
       q               quit            現在のメニューを終了
       ?               help            現在のメニューのキー割り当てを表示





  22..22..  入入力力領領域域をを編編集集すするる

  Muttには内蔵ラインエディタがあり、これがメイルアドレスやファイル名のよ
  うな文字デイタ入力の主要な手段となっています。編集中に動きまわるための
  キーは Emacs によく似ています。







  ^A or <Home>    bol             行頭に移動
  ^B or <Left>    backward-char   一文字戻る
  Esc B           backward-word   一語戻る
  ^D or <Delete>  delete-char     カーソル位置の文字を削除
  ^E or <End>     eol             行末に移動
  ^F or <Right>   forward-char    一文字進む
  Esc F           forward-word    一語進む
  <Tab>           complete        ファイル名やエイリアスを補完
  ^T              complete-query  問い合わせでアドレスを補完
  ^K              kill-eol        行末まで削除
  ESC d           kill-eow        単語の終わりまで削除
  ^W              kill-word       カーソルの前の一語を消す
  ^U              kill-line       一行全体を削除
  ^V              quote-char      次に入力するキーに引用符を付ける
  <Up>            history-up      履歴から前の入力文字列を呼び出す
  <Down>          history-down    履歴から次の入力文字列を呼び出す
  <BackSpace>     backspace       カーソルの前の一文字を削除
  Esc u           upcase-word     単語を大文字に変換
  Esc l           downcase-word   単語を小文字に変換
  Esc c           capitalize-word 単語の最初の文字を大文字に変換
  ^G              n/a             取消
  <Return>        n/a             編集を終了




  エディタ (_e_d_i_t_o_r) の関数を割り当て直すには ``bind'' コマンドを使いま
  す。例えば、Delete キーを押したときに、カーソルの乗っている文字ではな
  くカーソルの前にある文字を消すようにするには、こうしてください。

  bind editor <delete> backspace


  22..33..  メメイイルルをを読読むむ ―― イインンデデッッククススととペペイイジジャャ


  他の多くのメイルクライアントと同様、Mutt ではメイルを読むモウドが二つ
  あります。第一のモウドはメイルボックス内のメッセイジ一覧です。これを
  Mutt では「インデックス」 (index) と呼んでいます。第二のモウドはメッセ
  イジの内容表示です。これは「ペイジャ」 (pager) といいます。

  続く数節で、これらのモウドそれぞれに提供されている関数を説明します。


  22..33..11..  メメッッセセイイジジイインンデデッッククスス





















  c               メイルボックスを変更
  ESC c           フォルダを読み出し専用モウドに変更
  C               現在のメッセイジを別のメイルボックスにコピー
  ESC C           メッセイジをデコウドしてフォルダにコピー
  ESC s           メッセイジをデコウドしてフォルダにセイヴ (移動)
  D               パターンに合致するメッセイジを削除
  d               現在のメッセイジを削除
  F               大事だとして印付け
  l               パターンに合致するメッセイジを表示
  N               新しいとして印付け
  o               現在の整列方法を変更
  O               メイルボックスを逆順に整列
  q               変更を保存して終了
  s               メッセイジをセイヴ (移動)
  T               パターンに合致するメッセイジにタグ付け
  t               メッセイジのタグを切替
  ESC t           メッセイジスレッド全体のタグを切替
  U               パターンに合致するメッセイジの削除を解除
  u               メッセイジの削除を解除
  v               添付ファイルを閲覧
  x               変更を破棄して終了
  <Return>        メッセイジを表示
  <Tab>           次の新しいメッセイジに飛ぶ
  @               差出人の完全なメイルアドレスを表示
  $               変更をメイルボックスへ保存
  /               検索
  ESC /           逆順に検索
  ^L              画面を消して再描画
  ^T              パターンに合致するメッセイジのタグをはずす





  22..33..11..11..  スステテイイタタススフフララググ


  メッセイジ送信者と題に加えて、各メッセイジの状態の短い要約がメッセイジ
  番号のそばに書かれます。次の「フラグ」の中に適合するものがあれば表示さ
  れます。意味は以下の通りです。



     DD  削除メッセイジである (削除予定の印が付いている)

     dd  メッセイジ中に、削除予定の添付ファイルがある

     KK  PGP 公開鍵を含んでいる

     NN  メッセイジが新しい

     OO  メッセイジが古い

     PP  メッセイジが暗号化されている

     rr  メッセイジが返信済み

     SS  メッセイジが署名されており、その署名が検証済み

     ss  メッセイジが署名されている

     !!  メッセイジが重要フラグ付き

     **  メッセイジがタグ付き


  ステイタスフラグの一部は、次のコマンドを使ってオン／オフできます。

  +o  sseett--ffllaagg (既定では w)

  +o  cclleeaarr--ffllaagg (既定では W)


  さらに、次のフラグはメッセイジが誰にあてられたものなのかを反映するもの
  です。これは ``$to_chars'' 変数によって変更できます。



     ++  メッセイジが To で自分だけに宛てられている

     TT  メッセイジが To で自分に宛てられているが、他の人にも To か Cc さ
        れている

     CC  メッセイジが自分に Cc されている

     FF  メッセイジが自分発

     LL  メッセイジが購読しているメイリングリストに送られている


  22..33..22..  ペペイイジジャャ


  既定では、Mutt は内蔵ペイジャを使ってメッセイジ本文を表示します。この
  ペイジャは Unix プログラムの _l_e_s_s によく似ていますが、 _l_e_s_s ほど多機能
  ではありません。



       <Return>        一行下に移動
       <Space>         次のペイジ (メッセイジの終わりでは次のメッセイジ) を表示
       -               前のペイジに戻る
       n               次の合致部分を検索
       S               引用文を飛ばす
       T               引用文の表示を切替
       ?               キー割り当てを表示
       /               正規表現 (パターン) を検索
       ESC /           正規表現を逆順に検索
       \               検索パターン着色を切替
       ^               メッセイジの一番上に飛ぶ
       $               メッセイジの一番下に飛ぶ




  上記に加えて、インデックスの関数の多くがペイジャでも使えます。例えば
  _d_e_l_e_t_e_-_m_e_s_s_a_g_e (削除) や _c_o_p_y_-_m_e_s_s_a_g_e (コピー) などです (これは、外部
  ペイジャでメッセイジ閲覧するよりも便利な点の一つです)。

  また、内部ペイジャはさらに二つの優れた機能をサポートしています。第一
  に、nroff の「標準」シークウェンスを受け付け、太字や下線を解釈します。
  シーケンスは連続で「文字、バックスペイス (^H)、同じ文字」なら太字、
  「文字、バックスペイス、"_"」なら下線付き文字です。端末がサポートして
  いれば、これを Mutt はそれぞれ太字と下線付き文字として表示しようとしま
  す。サポートしていなければ bold (太字) と underline (下線) という
  ``color'' のオブジェクトを使って色属性か白黒属性を指定できます。

  さらに、内部ペイジャは ANSI エスケイプシークウェンスの文字属性をサポー
  トしています。 Mutt がそのシークウェンスを正しい色や文字設定に解釈して
  くれるのです。 Mutt がサポートしているシークウェンスは以下の通りです。


       ESC [ Ps;Ps;Ps;...;Ps m
       Ps は
       0    全属性解除
       1    太字あり
       4    下線付き
       5    点滅あり
       7    反転表示
       3x   文字色を x に
       4x   背景色を x に

       色は
       0    黒
       1    赤
       2    緑
       3    黄
       4    青
       5    赤紫 (マゼンタ)
       6    青緑 (シアン)
       7    白




  Mutt はこれらの属性を text/enriched メッセイジの取り扱いに使いますし、
  外部の ``自動閲覧'' スクリプトから着色の目的で使うこともあります。注注
  意意:: 画面の色を変更すると、上記と違う色になります。例えば xterm で
  color2 に対応する色を変更すると、緑色のはずの部分に xterm ではその変更
  した色が使われます。


  22..33..33..  ススレレッッドドモモウウドド

  メイルボックスがスレッドで``整列''されているときは、さらにいくつかの関
  数がインデックスモウドとペイジャモウドで利用できます。



       ^D      delete-thread        現在のスレッドのメッセイジをすべて削除
       ^U      undelete-thread      現在のスレッドのメッセイジの削除をすべて解除
       ^N      next-thread          次のスレッドの始点に飛ぶ
       ^P      previous-thread      前のスレッドの始点に飛ぶ
       ^R      read-thread          現在のスレッドを既読にする
       ESC d   delete-subthread     現在のサブスレッドのメッセイジをすべて削除
       ESC u   undelete-subthread   現在のサブスレッドのメッセイジの削除予定をすべて解除
       ESC n   next-subthread       次のサブスレッドの始点に移動
       ESC p   previous-subthread   前のサブスレッドの始点に移動
       ESC r   read-subthread       現在のサブスレッドを既読にする
       ESC t   tag-thread           現在のスレッドのタグを切替
       ESC v   collapse-thread      現在のスレッドの折りたたみを切替
       ESC V   collapse-all         すべてのスレッドの折りたたみを切替
       P       parent-message       スレッド中の親メッセイジに飛ぶ




  メメモモ: スレッドを折りたたむと、スレッドの最初のメッセイジだけが表示され
  て、他は隠れます。これは、一つのスレッドにメッセイジがたくさん含まれて
  いて、画面にほんの一握りのスレッドしか見えないというときに便利です。
  ``$index_format'' の %M を見てください。例えば ``$index_format'' に
  "%?M?(#%03M)&(%4l)?" という設定を使って、スレッドが折りたたまれている
  時に隠れているメイルの数を表示するようにできます。

  参照: ``$strict_threads''



  22..33..44..  そそのの他他のの機機能能

  エエイイリリアアススのの作作成成 / ccrreeaattee--aalliiaass (既定値: a)

  現在のメッセイジをもとに (あるいは新規プロンプトで) 新しいエイリアスを
  作成します。編集を終えると、 ``$alias_file'' で指定したファイルに
  ``alias'' コマンドが追加されて、あとから使えるようになります。注注意意::
  ``$alias_file'' を指定しただけでは、中の alias を追加することになりま
  せん。そのファイルを ``source'' する必要もあります。


  伝伝統統的的 PPGGPP ののチチェェッックク / cchheecckk--ttrraaddiittiioonnaall--ppggpp (既定値: ESC P)

  この関数は現在のメッセイジを調べて、「伝統的な」方法で PGP の署名・暗
  号化がなされている内容を探します。「伝統的」というのは、つまり適切な
  MIME タグのないもののことです。技術的なことを言うと、この関数は、PGP
  デイタを含むパートの MIME content type を一時的に変更します。つまり
  ``edit-type'' 関数の効果と似ています。



  へへッッダダ間間引引ききのの切切替替 / ddiissppllaayy--ttooggggllee--wweeeedd (既定値: h)

  ``ignore'' コマンドで指定されたヘッダフィールドの間引き表示を切り替え
  ます。


  編編集集 / eeddiitt (既定値: e)

  このコマンド (インデックスとペイジャで利用可) は、現在のメッセイジを
  「なま」で編集する、つまり、メイルフォルダにある姿のままで編集するコマ
  ンドです。編集を終えると、変更されたメッセイジは現在いるフォルダに追加
  され、オリジナルのメッセイジは削除のために印付けられます。

  ccoonntteenntt--ttyyppee のの編編集集 / eeddiitt--ttyyppee
  (既定値: 添付ファイルメニュー、ぺイジャ、およびインデックスメニューで
  は ^E, コンポウズメニューでは ^T)

  このコマンドは添付ファイルの content type を一時的に編集するために使
  い、たとえば偽装してある文字セットのパラメータを修正したりします。イン
  デックスやペイジャから使うと最上位の添付ファイルの content type を編集
  できます。``添付ファイルメニュー''から使えば、どの添付ファイルの
  content type でも変更できます。この変更は永続的なものではなく、フォル
  ダ変更によって消えてしまいます。

  このコマンドは``コンポウズメニュー''でも使えるということを覚えておいて
  ください。このメニューでは、送信する添付ファイルの性質を調整するために
  使います。 (訳注：この場合は永続的な変更)


  ココママンンドドのの入入力力 / eenntteerr--ccoommmmaanndd (既定値: ":")

  このコマンドは、通常だと設定ファイルの中に入れるようなコマンドを動作中
  の Mutt 上で実行するために使います。一般的な使い方としては、変数の設定
  をチェック (訳注：":set ?変数名") したり、 ``macro'' と組み合わせて動
  作中に設定を変更するために使ったりします。


  公公開開鍵鍵のの抽抽出出 / eexxttrraacctt--kkeeyyss (既定値: ^K)

  このコマンドは PGP 公開鍵を現在のメッセイジやタグ付きメッセイジから抽
  出して自分の PGP 公開鍵束に追加します。


  パパススフフレレイイズズのの忘忘却却 / ffoorrggeett--ppaasssspphhrraassee (既定値: ^F)

  このコマンドはパスフレイズをメモリ上から消去します。パスフレイズを誤入
  力した時に使います。


  メメイイリリンンググリリスストトへへのの返返信信 / lliisstt--rreeppllyy (既定値: L)

  現在のメッセイジやタグ付きメッセイジから ``lists や subscribe'' コマン
  ドで指定されている正規表現に合致するアドレスを抽出して、そこに返信する
  コマンドです。それだけではなく、もし ``$honor_followup_to'' 変数が設定
  されていると Mail-Followup-To へッダを信用します。メイリングリストに投
  稿されたメッセイジに返信するときにこれを使えば、返信する元メッセイジの
  差出人とメイリングリストへ二重に送信するのを避ける助けになります。

  メメッッセセイイジジののパパイイププ / ppiippee--mmeessssaaggee (既定値: |)

  外部 Unix コマンドの入力を要求して、現在のメッセイジやタグ付きメッセイ
  ジをそこにパイプします。 ``$pipe_decode'', ``$pipe_split'',
  ``$pipe_sep'', ``$wait_key'' 変数がこの関数の動作を精密に制御します。

  メメッッセセイイジジのの再再送送 / rreesseenndd--mmeessssaaggee (既定値: ESC e)

  resend-message を使うと、Mutt は現在のメッセイジを雛型として新しいメッ
  セイジを作成します。この関数は「任意のフォルダの復元」と説明するのが最
  適でしょう。 MIME メッセイジを、もともとのメイル構造を保ったまま転送す
  るのに便利です。このときに含まれるへッダは ``$weed'' 変数に依存してい
  るということに注意してください。 (訳注：ただ添付ファイルごと転送したい
  だけであれば、添付ファイルメニューからすべてのファイルにタグを付けて
  「;f」、すなわち tag-prefix, forward-message をする方が、余計なヘッダ
  が付かなくて良いかもしれない。)

  この関数は添付ファイルメニューからも利用できます。これを使えば
  message/rfc822 パートとして転送されてきたメッセイジを簡単に再送できま
  す。

  シシェェルルココママンンドドのの実実行行 / sshheellll--eessccaappee (既定値: !)

  外部 UNIX コマンドの入力を要求し、それを実行します。``$wait_key'' を
  使って、コマンドが終了したときに (おそらくコマンドの出力をユーザが読め
  るようにするため) 何かキーが押されるまで待つかどうかをコマンドの戻り値
  で制御するようにできます。 (訳注：$wait_key が no だと、戻り値が 0 以
  外のときのみキー入力を待つ。)

  引引用用文文表表示示のの切切替替 / ttooggggllee--qquuootteedd (既定値: T)

  メッセイジ本文の表示中に、ペイジャは ``$quote_regexp'' 変数を使って引
  用文を検出します。この関数はメッセイジ中の引用部分を表示するかどうかを
  切り替えます。特に、返事だけに興味があるのに大量の引用文があって邪魔だ
  というようなときに役に立ちます。

  引引用用文文ををととばばししてて移移動動 / sskkiipp--qquuootteedd (既定値: S)

  内部ペイジャにおいて、この関数は、引用文の行のあとの非引用文の行に移動
  します。


  22..44..  メメイイルルをを送送信信すするる


  以下のコマンドがメイル送信のためにインデックスで利用できます。







  m       compose      新規メッセイジを作成
  r       reply        差出人へ返信
  g       group-reply  受信者全員へ返信
  L       list-reply   メイリングリストのアドレスへ返信
  f       forward      メッセイジを転送
  b       bounce       メッセイジを中継 (再送)
  ESC k   mail-key     だれかに PGP 公開鍵を送信




  メッセイジの中継は、指定した宛先に「あるがまま」のメッセイジを送信しま
  す。メッセイジの転送は、転送するメッセイジにコメントを付けたり変更した
  りできます。これらに関しては次の節 ``「メイルを転送・中継する」'' で詳
  しく論じられています。

  上記のコマンドを使うと Mutt はコンポウズ (_c_o_m_p_o_s_e) メニューに入り、
  "To:" ヘッダフィールドに入れる宛先の入力を促します。次にメッセイジの
  "Subject:" フィールドを聞いてきますが、メッセイジの返信や転送のときは
  既定値が入っています。このとき Mutt がどう質問するのかを変更するには、
  ``$askcc'', ``$askbcc'', ``$autoedit'', ``$fast_reply'' を参照してくだ
  さい。

  それから Mutt はメッセイジ本文に対して ``エディタ ($editor)'' を起動し
  ます。``$edit_headers'' 変数が設定されているときは、メッセイジの上に
  ヘッダもあります。メッセイジには、返信するメッセイジが整列の順に取り込
  まれ、それぞれに適切な ``由来 ($attribution)'', ``引用文字列
  ($indent_string)'', ``引用終了文字列 ($post_indent_string)'' が付きま
  す。メッセイジ転送時、``$mime_forward'' 変数が設定されていなければ、転
  送するメッセイジのコピーも本文に取り込まれます。また、 ``署名ファイル
  ($signature)'' を指定してあれば、そのファイルも付加されます。

  送信メッセイジの本文を編集し終えると、コンポウズメニューに戻ります。以
  下の選択肢があります。



       a      attach-file          ファイルを添付
       A      attach-message       メッセイジにメッセイジを添付
       ESC k  attach-key           PGP 公開鍵を添付
       d      edit-description     添付ファイルの内容説明を編集
       D      detach-file          添付ファイルをはずす
       t      edit-to              To フィールドを編集
       ESC f  edit-from            From フィールドを編集
       r      edit-reply-to        Reply-To フィールドを編集
       c      edit-cc              Cc フィールドを編集
       b      edit-bcc             Bccフィールドを編集
       y      send-message         メッセイジを送信
       s      edit-subject         題名を編集
       S      smime-menu           S/MIME オプションを選択
       f      edit-fcc             "Fcc" メイルボックスを指定
       p      pgp-menu             PGP オプションを選択
       P      postpone-message     メッセイジを次回まで延期
       q      quit                 メッセイジ送信を中断 (または中止)
       w      write-fcc            メッセイジをフォルダに書き込む
       i      ispell               綴りを確認 (利用可能なシステムならば)
       ^F     forget-passphrase    メモリからパスフレイズを拭い去る




  注注意意:: attach-message 関数は、添付したいメッセイジのあるフォルダを入力
  するよう促します。そこのフォルダでメッセイジにタグを付ければ、そのメッ
  セイジを送信メッセイジに添付できます。(訳注：タグを付けたあとは q でコ
  ンポウズメニューに戻れる。) このフォルダにいるときは新規メッセイジ作成
  や返信、転送などの操作ができないということに注意してくださ
  い。``$status_format'' に %r があれば、それが A に変わって、メッセイジ
  添付 (attach-message) モウドにいることを示します。


  22..44..11..  メメッッセセイイジジヘヘッッダダをを編編集集すするる

  送信メッセイジのヘッダを編集するときには、いくつか特別な機能が利用でき
  ます。

  Fcc: ファイル名
  を指定すると、あたかもコンポウズメニューで _e_d_i_t_-_f_c_c 関数を使ったかのよ
  うにファイル名を扱います。

  また、
  Attach: ファイル名 [ 内容説明 ]
  を指定してメッセイジにファイルを添付することもできます。ここで ファイ
  ル名 は添付するファイルで、内容説明 は添付ファイルの説明に使う付加的な
  文字列です。

  メッセイジに返信するときにヘッダフィールドから _I_n_-_R_e_p_l_y_-_T_o_: フィールド
  を削除すると Mutt は _R_e_f_e_r_e_n_c_e_: フィールドを生成しません。このようにし
  て新規のメッセイジスレッドを作成することができます。

  ``edit_headers'' も参照してください。


  22..44..22..  MMuutttt でで PPGGPP をを使使うう

  PGP を使いたい場合は

  Pgp: [ E | S | S_<_i_d_> ]

  を指定してください。"E" は暗号化、"S" は署名、 "S<id>" は指定した鍵で
  署名します。鍵は ``$pgp_sign_as'' で恒久的に設定できます。

  メッセイジを PGP で暗号化するよう Mutt に言うと、メッセイジを送信しよ
  うとするときに鍵選択プロセスを通るよう指示されます。 Mutt は、信用でき
  るユーザ ID があってメッセイジ宛先のメイルアドレスに合致する鍵について
  は何も尋ねません。しかしながら、鍵が複数あったり、ユーザ ID フィールド
  の信用度が弱かったり、合致する鍵がひとつも見つからないという状況もあり
  えます。

  こういう場合には、鍵を選択できる一覧のメニューに行かされます。そのメ
  ニューを終了したり、合致する鍵を Mutt が見つけられなかったりすると、ユ
  ーザ ID の入力を促されます。普段どおり、このプロンプトは ^G を使って中
  止できます。そうすると Mutt はコンポウズ画面に戻ります。

  正しく鍵選択を完了すると、そのメッセイジは選択した公開鍵を使って暗号化
  され送信されます。

  鍵選択メニューの項目 (``$pgp_entry_format'' も参照) のほとんどのフィー
  ルドの意味は明白ですが、能力 (capabilities), フラグ (flags), 信用度
  (validity) のフィールドについて少し説明しておいても良いでしょう。

  フラグシークウェンス (%f) は以下のフラグのいずれかに展開されます。


       R            鍵は破棄されており、使えない
       X            鍵は期限切れになっており、使えない
       d            自分で鍵を使用不可に印付けた
       c            未知の重要な自己署名パケットがある





  能力フィールド (%c) は、鍵の能力を表わす二文字シークウェンスに展開され
  ます。第一の文字は暗号化能力です。マイナス (--) は暗号化に使えないとい
  う意味です。ドット (..) はいずれかのユーザ ID の署名鍵として印付けられ
  ているけれども暗号化にも使えるという意味です。"ee" の文字は暗号化
  (encryption) に使えるという意味です。

  第二の文字は鍵の署名能力を表しています。こちらもやはり、 "--" は「署名
  用ではない」という意味で、".."  はあるユーザ ID の暗号化鍵として印付け
  られているという意味、 "ss" は署名に使えるという意味です。

  最後に、信用度フィールド (%t) はユーザ ID がどれほどしっかり確証されて
  いるかを示します。疑問符 (??) は信用度が未定義だという意味で、マイナス
  (--) は信用できない関係、スペイス文字は部分的に信用できる関係、プラス
  (++) は完全な信用度を表しています。


  22..44..33..  匿匿名名メメッッセセイイジジをを MMiixxmmaasstteerr 経経由由でで送送信信すするる

  Mutt を Mixmaster 匿名リメイラ (remailer) と共働するよう設定してあるか
  もしれません。(訳注：日本では法律に抵触するかもしれない。) Mixmaster
  はリメイラのチェインを使って匿名でメッセイジを送信できます。 Mutt の
  Mixmaster サポートは Mixmaster version 2.04 (beta 45 が最新のようです)
  と 2.03 に対するものです。これ以前のヴァージョンと、これ以降の version
  3 beta と呼ばれるヴァージョン (2.9b23 が最新のようです) はサポートして
  いません。

  Mixmaster を使うにはいくつかの制限に従わなくてはなりません。最も重要な
  のは Cc と Bcc へッダを使えないということです。 Mutt から Mixmaster を
  使うには、まずコンポウズメニューで mix 関数を使ってリメイラチェインを
  選ばなくてはなりません。

  チェイン選択画面はふたつの部分に分かれています。上の (広い方の) 部分で
  は使えるリメイラの一覧を見ることができます。下の部分では現在選択されて
  いるリメイラチェインを参照できます。

  このチェインの中を chain-prev 関数と chain-next 関数を使って渡り歩けま
  す。この関数は既定では左右の矢印キーと h と l キーに割り当てられていま
  す (vi のキーバインドを考えてください)。新しいリメイラを現在のチェイン
  位置に挿入するには insert 関数を使ってください。リメイラを現在のチェイ
  ン位置の後に追加するには select-entry か append を使ってください。
  delete 関数を使ってチェインから項目を消すこともできます。最後に、メ
  ニューをそのまま抜けて変更を破棄するか、 (既定値では) リターンキーを押
  して承認 (accept) してください。

  リメイラごとに持っている能力が違うということに注意してください。その能
  力はリメイラメニューの %c の項目で表示されています
  (``$mix_entry_format'' を参照してください)。一番重要なのは大文字の "M"
  で示される "middleman" 能力です。これは問題のリメイラが、チェインの最
  終要素にはなれないとはいえ、他の mixmaster リメイラにメッセイジを転送
  することはできるという意味です。他の能力の詳細については Mixmaster の
  文書を見てください。


  22..55..  メメイイルルをを転転送送・・中中継継すするる


  中継と転送は、既存メッセイジを自分で指定した宛先に送信できる機能です。
  メッセイジの中継とは、コピーを別のアドレスに送信することですが、その
  際、あたかもそこが元々の宛先であるかのように送信する方法で
  ``sendmail'' コマンドを使います。一方、メッセイジの転送は、再送の前に
  メッセイジを変更できます (例えばコメントを加えるなど)。

  既定では次のキーが割り当てられています。



  f       forward         メッセイジを転送
  b       bounce          メッセイジを中継 (再送)




  転送は ``$mime_forward'' 変数の値によって、オリジナルのメッセイジを新
  規メッセイジの本文に (それとわかるように示す行で囲んで) 取り込むか、も
  しくは MIME 添付ファイルとして取り込みます。添付ファイルをペイジャのよ
  うにデコウドするかどうかは、それぞれ ``$forward_decode'' 変数と
  ``$mime_forward_decode'' 変数で制御できます。どちらの転送方法が良いか
  は内容によります。そのため _$_m_i_m_e___f_o_r_w_a_r_d は四択オプション (quadoption)
  になっていて、たとえば "ask-no" にすることができます (訳注： ask-no は
  「質問の際に Return だけ入力したときは no とみなす」という意味)。

  ``$mime_forward'' が設定されていない限り、へッダの取り込みはその時点の
  ``$weed'' 変数の設定によって制御されます。

  転送のためのメッセイジ編集は、新規送信や返信と同じ手順に従います。


  22..66..  メメイイルルをを延延期期すするる


  たまに、メッセイジをすでに書き始めたものの、送信は後にしたいということ
  があります。 _p_o_s_t_p_o_n_e_-_m_e_s_s_a_g_e 関数をコンポウズメニューで使うと、メイル
  の本文と添付ファイルは ``$postponed'' 変数で指定されたメイルボックスに
  格納されます。これはつまり、Mutt を終了して次回また起動したとしても、
  そのメッセイジを呼び出せるということです。

  メッセイジを延期したあとで再開するには、いくつかの方法があります。コマ
  ンドラインからは "-p" オプションが使えますし、インデックスやペイジャか
  ら新規作成 (_c_o_m_p_o_s_e 関数) を実行すると、延期したメッセイジがあるときに
  は再開するかどうか聞かれます。延期メッセイジが複数あるときは、延期
  _(_p_o_s_t_p_o_n_e_d_) メニューが出てきて、どのメッセイジを再開したいか選択できま
  す。

  注注意意:: メッセイジに対する返信を延期したならば、返信済みフラグが更新され
  るのは返信メッセイジを実際に完成させて送信したときだけだということに注
  意してください。しかも、その親メッセイジと同じフォルダにいなければ状態
  がきちんと更新されません。

  ``$postpone'' という quadoption (四択オプション) についてもご覧下さ
  い。 (訳注： postponed とは違う。末尾の "d" に注意！)


  33..  設設定定


  既定の設定 (すなわち初期値) は、そのままでも Mutt が使えるようになって
  いますが、Mutt を自分の好みにあわせて仕立てたいということもよくありま
  す。起動したとき、``コマンドライン'' オプションの "-n" が指定されてい
  なければ Mutt は最初に「システム」設定ファイル (システム管理者が設定し
  た既定値) を読み出そうとします。この設定ファイルは多くの場合、
  /usr/local/share/mutt/Muttrc か /etc/Muttrc です (訳注：FreeBSD などで
  は /usr/local/etc/Muttrc も多いと思う)。次に Mutt はホウムディレクトリ
  の .muttrc というファイルがないか探します。もしこのファイルが存在せ
  ず、ホウムディレクトリに .mutt というサブディレクトリがあれ
  ば、.mutt/muttrc というファイルを読み込もうとします。

  .muttrc は、普段から自分用の``コマンド''を入れておいて Mutt を設定する
  ためのファイルです。

  それに加えて Mutt は、上で説明した既定のファイルの代わりに実行する、特
  定ヴァージョンの設定ファイルをサポートしています。例えばシステム設定
  ディレクトリに Muttrc-0.88 というファイルがあって Mutt のヴァージョン
  0.88 を使っていると、Muttrc ではなくそのファイルが読み込まれます。ユー
  ザ設定ファイルに関しても同じことが言えます。ホウムディレクトリに
  .muttrc-0.88.6 というファイルがあると、ヴァージョン 0.88.6 の Mutt を
  走らせたときには既定の .muttrc の代わりにこのファイルを読み込みます。
  ヴァージョン番号は、``コマンドライン''スウィッチの "-v" を使ったり、イ
  ンデックスメニューから show-version のキー (既定値: V) を使ったりして
  表示されるものと同じです。


  33..11..  初初期期化化フファァイイルルのの構構文文


  初期化ファイルは一連の「コマンド」から成っています。ファイルの各行に
  は、ひとつでも複数でもコマンドを入れられます。複数コマンドを使うときは
  セミコロン (;) で区切らなければなりません。


       set realname='Mutt ユーザ' ; ignore x-




  ハッシュマーク、別名ポンド記号 ("#") は「コメント」文字として使われま
  す。これは初期化ファイルへの注釈に使えます。コメント文字以降の文章はす
  べて無視されます。例えば



       my_hdr X-Disclaimer: Why are you listening to me? # ここはコメントです




  シングルクウォウト (') とダブルクウォウト (") を使って、スペイスその他
  の特殊な文字を含む文字列を扱えます。この二種類の引用符の違いは、多くの
  一般的なシェルプログラムに似ています。つまり、シングルクウォウトはその
  字面どおりの (シェル変数にも変換されず、バックスラッシュでの文字指定
  [次の段落を参照] も変換されないままの) 文字列を指定するために使う一
  方、ダブルクウォウトは、中の文字列を解釈すべきだということを示します。
  例えば、バックティック (`) はダブルクウォウトの中では解釈されますが、
  シングルクウォウトの中では解釈されまませせんん。

  \ は、その次の文字をそのまま指定 (原語：quote) します。ちょうど bash
  や zsh のようなシェルと同じです。例えば引用符「"」を文字列の中に入れて
  使いたいときに「\」を使って、解釈しない文字どおりの引用符にすることが
  できます。


       set realname="Michael \"MuttDude\" Elkins"




  「\\」は「\」そのものを意味します。「\n」と「\r」は通常の C での意味合
  いと同じで、それぞれ改行 (LF = linefeed) と復帰 (CR = carriage-return)
  を意味します。

  行末に \ を使えば、コマンドを複数の行に分割できます。ただし分割地点が
  コマンド名の途中であってはなりません。

  さらには初期化ファイルの中で、一部を Unix コマンドの出力に置き換えるこ
  とも可能です。これはコマンドをバッククウォウト二つ (``) ではさむことに
  よって行なえます。例えば、



  my_hdr X-Operating-System: `uname -a`




  この `uname -a` の部分は、行を実行する前に「uname -a」という Unix コマ
  ンドの出力で置き換えられます。ここで注意すべきなのは、初期化ファイルが
  行指向であるゆえ、 Unix コマンドの出力の最初の行だけにしか置換されない
  ということです。

  UNIX 環境変数には、sh や bash といったシェルでやるようにしてアクセスで
  きます。環境変数の名前の前に "$" を付けるのです。例えばこうです。


       set record=+sent_on_$HOSTNAME




  Mutt が解釈できるコマンドについては、次節以降で説明していきます。全コ
  マンド一覧は``コマンド早見表''を見てください。


  33..22..  エエイイリリアアススをを定定義義・・使使用用すするる


  使い方: alias エイリアス アドレス [ , アドレス, ... ]

  連絡を取ろうとしている人のアドレスをいちいち思い出したり入力したりする
  のは、通常とても面倒なことです。 Mutt では、アドレスに割り当てる短い文
  字列「エイリアス (alias)」を作成できます。

  注注意意:: グループに対してエイリアスを作成したい (複数のメイルアドレスを指
  定したい) 場合は、アドレスを読点 (,) で区切る必必要要があります。

  エイリアスを削除するには、こうします。 ("*" はエイリアス全部という意味
  です)

  unalias [ * | キー _._._. ]



       alias muttdude me@cs.hmc.edu (Michael Elkins)
       alias theguys manny, moe, jack




  他のメイラとは違い、Mutt はエイリアスを特別のファイルに定義する必要が
  ありません。コマンド alias は、``source'' などで読み込まれるファイルで
  あれば、どこにでも書けます。したがって、複数のエイリアスファイルを使う
  こともできますし、 muttrc の中にすべて定義してしまうこともできます。

  その一方で、``create-alias'' 関数はひとつのファイルしか使えません。
  ``$alias_file'' 変数で指定されるファイルだけ (既定では ~/.muttrc) で
  す。しかし、このファイルは特別扱いされるわけではありません。というの
  も、Mutt はどのファイルにでもエイリアスを追加できますし、このファイル
  もきちんと ``source'' しなければ新規エイリアスが有効にならないのです。

  例えばこうです。






  source /usr/local/share/Mutt.aliases
  source ~/.mail_aliases
  set alias_file=~/.mail_aliases




  エイリアスの使い方は、いつでも Mutt が _T_o_: や _C_c_: といったプロンプトで
  アドレスの入力を促すときに、エイリアスを入力するだけです。また
  ``$edit_headers'' 変数を設定してあれば、エディタでも適切なヘッダにエイ
  リアスを入力できます。

  加えて、種々のアドレス入力プロンプトにおいては、Tab を使えば一部だけ入
  力したエイリアスから完全なエイリアスに展開させることができます。合致す
  るものが複数あると、Mutt は合致したエイリアスのメニューを出します。エ
  イリアスの完全な一覧を表示させるには、書きかけのエイリアスのない状態で
  Tab を打たなくてはなりません。たとえばプロンプトの最初や、アドレスが複
  数あることを示すコンマ (",") の後です。

  エイリアスメニューでは、エイリアスを好きなだけ _s_e_l_e_c_t_-_e_n_t_r_y キー (既定
  値: RET) で選択してから _e_x_i_t キー (既定値: q) を使ってアドレスのプロン
  プトに戻れます。


  33..33..  既既定定ののキキーー割割りり当当ててをを変変更更すするる

  使い方: bind マップ キー 関数

  このコマンドで既定のキー割り当て (キーを押した時に起動する命令) を変更
  することができます。

  マップは、その割り当てがどのメニューのものなのかを指定します。複数の
  マップをコンマ (,) で区切って指定することもできます (ただし空白を入れ
  てはいけません)。現状で定義されているマップはこうなっています。



     ggeenneerriicc
        これは実際のメニュー名ではなく、ペイジャとエディタ以外の全メニュ
        ーにおける最終候補となるものです。Mutt は、キーが実際のメニュー
        で定義されていないとき、 generic の割り当てを使うのです。これに
        よって、関数を複数のメニューのキーに割り当てることができますの
        で、同じ効果を得るためにいくつも bind を書かなくて済みます。 (訳
        注：ただし、いちど bind されたキーは noop に bind しても generic
        を見てくれないので、あまり意味がない。今ではマップを複数指定でき
        るので、 alias,attach,browser,index,compose,postpone,pgp と書く
        方が確実。)

     aalliiaass
        エイリアスメニューは、muttrc に定義されている個人的エイリアスの
        一覧です。短いエイリアス名から完全なメイルアドレスへの割り当てで
        す。

     aattttaacchh
        この添付ファイルメニューを使って、受信したメッセイジの添付ファイ
        ルを扱います。

     bbrroowwsseerr
        ブラウザは、ロウカルのディレクトリ構造を閲覧するためにも使います
        し、受信メイルボックスを一覧するためにも使います。

     eeddiittoorr
        このエディタは、ユーザがテキストデイタを入力する一行エディタで
        す。


     iinnddeexx
        インデックスとは、メイルボックスに含まれているメッセイジの一覧で
        す。 (訳注：このマニュアルやソースコウドでは「メインメニュー」と
        も呼ばれる。)

     ccoommppoossee
        コンポウズメニューは、新規メッセイジを送信するときに使われる画面
        のことです。

     ppaaggeerr
        このペイジャは、メッセイジおよび添付ファイルのデイタやヘルプ一覧
        を表示するために使われるモウドのことです。

     ppggpp
        PGP メニューを使って、送信メッセイジの暗号に使う OpenPGP 鍵を選
        択します。

     ppoossttppoonnee
        延期メニューはインデックスメニューに似ていますが、作成して送信せ
        ず次回まで保存しておいたようなメッセイジを復元するときに使うもの
        です。

  キー は割り当てたいキー (またはキーシークウェンス = キーの組み合わせ)
  です。コントロウル文字を指定するには _\_C_x というキーシークウェンスを
  使ってください。この _x がコントロウル文字です (例えば Control-A を指定
  するには "\Ca" とします)。_x と _\_C が大文字であるか小文字であるかは無視
  されるので注意してください。つまり _\_C_A, _\_C_a, _\_c_A, _\_c_a はすべて等価で
  す。別の方式は、"\" に続く三桁の 8 進数としてキーを指定します (例えば
  _\_1_7_7 は _\_c_? と等価です)。

  さらに、これも キー に含められます。



       \t              タブ (Tab)
       <tab>           タブ (Tab)
       \r              キャリッジリターン
       \n              改行
       \e              エスケイプ (Esc)
       <esc>           エスケイプ (Esc)
       <up>            上矢印 (↑)
       <down>          下矢印 (↓)
       <left>          左矢印 (←)
       <right>         右矢印 (→)
       <pageup>        Page Up
       <pagedown>      Page Down
       <backspace>     Backspace
       <delete>        Delete
       <insert>        Insert
       <enter>         Enter
       <return>        Return
       <home>          Home
       <end>           End
       <space>         スペイス
       <f1>            ファンクションキー 1  (F1)
       <f10>           ファンクションキー 10 (F10)




  キー は、スペイスを含まない限り引用符でくくる必要はありません。

  関数 は キー が押されたときに取る行動を指定します。関数すべての一覧に
  ついては ``関数早見表'' を参照して下さい。また、特殊な関数 noop を指定
  すると、そのキーシークウェンスへの割り当てをなくします。 (訳注：はじめ
  から割り当てられていないキーは generic が有効だが、 noop に割り当てら
  れたキーは常に何もしない。)


  33..44..  文文字字セセッットトののエエイイリリアアススをを定定義義すするる

  使い方: charset-hook エイリアス 文字セット
  使い方: iconv-hook 文字セット 独自の文字セット

  charset-hook コマンドは文字セット (charset) へのエイリアスを定義しま
  す。これは、Mutt の知らない文字セット名が付いたメッセイジを正しく表示
  するために使えます。

  iconv-hook コマンドは文字セットに対してシステム特有の名前を定義しま
  す。これは、システムの文字変換ライブラリが、文字セットにシステム特有の
  おかしな名前を使うよう主張するときの助けになります。 (訳注：あるいは拡
  張的な文字セットを使うときに、 iconv-hook euc-jp eucjp-ms というような
  使い方も可能だろう。)



  33..55..  メメイイルルボボッッククススにに基基づづいいてて変変数数をを設設定定すするる

  使い方: folder-hook [!]パターン コマンド

  多くの場合、どのメイルボックスを読んでいるかに合わせて設定を変更できれ
  ば便利です。folder-hook コマンドは、そのようにしてどんな設定コマンドで
  も実行できる手段を提供します。パターンは、どのメイルボックスで (読み出
  す前に) コマンドを実行するかを指定する正規表現です。メイルボックスが複
  数の folder-hook に合致したときには muttrc で出て来る順番に実行されま
  す。

  注注意意:: もし ``$spoolfile'' へのショートカットの  "!" をパターンの最初に
  使うなら、正規表現の論理演算子 _n_o_t (否定) と区別するためにダブルかシン
  グルの引用符でくくらなければなりません。

  設定はメイルボックスを出るときに復帰しないので注意してください。例え
  ば、実行したいコマンド動作が、読み出すメイルボックスに合わせて整列方法
  を変更することだとします。



       folder-hook mutt set sort=threads




  このようにしたとしても、違うメイルボックスを読み出すときに整列方法が以
  前の値に復帰するわけではありません。既定 のコマンドを指定するには "."
  というパターンを使ってください。




       folder-hook . set sort=date-sent




  (訳者の蛇足：つまり、上記のふたつの folder-hook を組み合わせて使えば、
  普段は送信日付で整列するし、"mutt" というパターンに合致するメイルボッ
  クスではスレッド整列になる。 "mutt" に合致するメイルボックスから合致し
  ないメイルボックスに移るときに送信日付へ戻すために、二番目の folder-
  hook が必要だというわけ。)



  33..66..  キキーーボボーードドママククロロ

  使い方: macro メニュー キー シークウェンス [ 説明 ]

  マクロは、キーひとつで連続作業を実行したいときに便利です。そのメニュー
  でそのキーを押すと、シークウェンスを入力したのと同様に振る舞うのです。
  ですから、よく連続して入力するコマンドがあれば、マクロを作成してキーひ
  とつでそのコマンドを実行するようにできます。

  メニューは、マクロを割り当てる``マップ''です。複数のマップを指定するこ
  ともできます。複数メニューをコンマ (,) で区切れば良いのです。ただし、
  メニューとコンマの間に空白を使うことはできません。

  キーとシークウェンスは``キー割り当て''と同じルールで展開されます。た
  だ、いくつか追加があります。第一点は、シークウェンスにおけるコントロウ
  ル文字を _^_x とも指定できることです。カレット ("^") を使うには _^_^ とす
  る必要があります。第二に、_U_p などの一部のキーを指定したり、関数を直接
  起動したりするために _<キー名_> と _<関数名_> というフォーマットを使えま
  す。キー名の一覧については``キー割り当ての節''を参照してください。関数
  は``関数早見表''で一覧になっています。

  マクロに関数名を直接使う利点は、それによって動作時のキー割り当てと関係
  なくマクロが動くので、特定のキー定義をしてあるユーザでなくとも使えると
  いうことです。これでマクロは堅固かつ可搬 (ポータブル) になり、何人かで
  使うファイル (例えばシステムの Muttrc) の中でマクロを定義するのも容易
  になります。 (訳注：ここで逆に考えてみれば、関数名を直接指定しないマク
  ロは、 folder-hook 等で bind を実行するたびに違う結果を得ることができ
  るので面白いことができるかもしれない。)

  必須ではありませんが、説明文をシークウェンスの後ろに指定できます。これ
  はヘルプ画面に表示されます。

  注注意意:: ヘルプ画面に表示されるマクロ定義 (定義されていればですが) は、自
  動的に画面の幅に切り取られてしまい、折り返し表示はされません。


  33..77..  色色とと白白黒黒のの画画面面属属性性をを使使うう

  使い方: color 対象 前景 背景 [ 正規表現 ]
  使い方: color index 前景 背景 パターン
  使い方: uncolor index パターン [ パターン ...  ]

  端末がカラー表示をサポートしていれば、独自の色構成を創作して一味ちがう
  Mutt にすることができます。ある対象 (情報の型) の色を定義するには前景
  色とと背景色の両方を指定しなければなりません (前景だけや背景だけを指定す
  ることは不可能です)。

  対象は次のどれかになります。


  +o  attachment (添付ファイル情報)

  +o  body (メッセイジの本文で正規表現に合致する部分)

  +o  bold (メッセイジの本文の太字強調部分)

  +o  error (Mutt が出力するエラーメッセイジ)

  +o  header (メッセイジヘッダで正規表現に合致する部分)

  +o  hdrdefault (ペイジャにおけるメッセイジヘッダの既定の色)

  +o  index (メッセイジインデックスでパターンに合致する部分)

  +o  indicator (メニューで現在の項目を指し示す矢印もしくはバー
     [``$arrow_cursor'' 参照])
  +o  markers (ペイジャで折り返された行の行頭にある "+" マーク)

  +o  message (情報メッセイジ [訳注：エラーでない情報、という意味のように
     思われる])

  +o  normal (普通の部分)

  +o  quoted (メッセイジの本文で ``$quote_regexp'' に合致する文章)

  +o  quoted1, quoted2, ... quotedNN (何段階か重なっている引用)

  +o  search (ペイジャでの検索語句の強調)

  +o  signature (署名)

  +o  status (モウドに合わせて、メイルボックスやメッセイジに関する情報を
     表示する行)

  +o  tilde (ペイジャの空行を埋める "~" の部分)

  +o  tree (メッセイジインデックスと添付ファイルメニューで描かれるスレッ
     ドトゥリー)

  +o  underline (メッセイジ本文の下線つきパターンを強調する [訳注：カラー
     では下線を使えないのでこれで代用する] )

  前景と背景には以下のどれかを使えます。


  +o  white

  +o  black

  +o  green

  +o  magenta

  +o  blue

  +o  cyan

  +o  yellow

  +o  red

  +o  default

  +o  color_x

  前景には先頭に bright というキーワードを付けて太字にすることもできます
  (例えば brightred)。

  端末がサポートしていれば、特別なキーワードである _d_e_f_a_u_l_t を透明色とし
  て使えます。また _b_r_i_g_h_t_d_e_f_a_u_l_t という値も有効です。 Mutt が _S_-_L_a_n_g ラ
  イブラリにリンクされていれば、透明色が正しく動作するように _C_O_L_O_R_F_G_B_G
  環境変数を端末の既定色として設定しておく必要もあります。例えば (Bourne
  系シェルの場合) こうです。



       set COLORFGBG="green;black"
       export COLORFGBG




  注注意意: この変数を設定するとき、_S_-_L_a_n_g ライブラリでは _w_h_i_t_e や _y_e_l_l_o_w を
  使わず、白には _l_i_g_h_t_g_r_a_y, 黄色には _b_r_o_w_n というキーワードを使う必要が
  あります。

  注注意意: uncolor コマンドは index 対象にのみ適用できます。これは項目をリ
  ストから消去します。消去するには必必ずず color コマンドで指定したのと同じ
  パターンを指定しなければなりません。"*" というパターンは特別な印で、
  color index のリストを全項目消去することを意味します。

  Mutt は _c_o_l_o_r_0, _c_o_l_o_r_1, ..., _c_o_l_o_rNN--11 (NN は端末でサポートされている色
  の数) といったキーワードも認識できます。これは、画面の色を (例えば
  xterm の color2 に関連付けてある色を変更したりして) 割り当て直したとき
  に有用です。色名が通常の意味を失ってしまうからです。

  端末がカラー表示をサポートしていなくとも、画面属性を "mono" コマンドの
  使用によって変更することが可能です。

  使い方: mono _<対象_> _<属性_> [ 正規表現 ]
  使い方: mono index 属性 パターン
  使い方: unmono index パターン [ パターン ... ]

  属性の部分は以下のどれかです。


  +o  none

  +o  bold (太字)

  +o  underline (下線)

  +o  reverse (反転)

  +o  standout (点滅等 [語義：くっきりと見やすい])


  33..88..  不不要要ななメメッッセセイイジジヘヘッッダダをを無無視視 ((間間引引きき)) すするる

  使い方: [un]ignore パターン [ パターン ... ]

  多くのメッセイジには、自動処理システムによって付加された、すなわち、画
  面に表示させても役に立つとは思えないようなヘッダフィールドがたくさん付
  いています。このコマンドで、普段は見ないでいたいヘッダフィールドを指定
  することができます。

  ヘッダフィールド名全体を指定する必要はありません。例えば "ignore
  content-" は "content-" で始まるヘッダフィールドをすべて無視します。

  以前に追加した項目をリストから外すには "unignore" コマンドを使ってくだ
  さい。"unignore" コマンドは、指定したパターンのヘッダフィールドを表示
  させます。たとえば "ignore x-" としているとき、"unignore x-mailer" で
  x-mailer: を表示することができます。

  "unignore *" は無視リストから全項目を消去します。

  以下は一例です。


       # Sven の冷徹なヘッダ間引き設定
       ignore *
       unignore from date subject to cc
       unignore organization organisation x-mailer: x-newsreader: x-mailing-list:
       unignore posted-to:




  33..99..  代代替替アアドドレレスス

  使い方: [un]alternates 正規表現 [ 正規表現 ... ]

  Mutt は種々の関数において、自分で送信したメッセイジか他人から受信した
  メッセイジかに応じて違う扱い方をします。例えば、かつて自分が別の団体へ
  送信したメッセイジに返信を書くとき、 Mutt は自動的にその元メッセイジの
  宛先へ返事を送るよう提案します。多くの場合、自分に返事を書くなどという
  ことは意味をなさないからです。 (``$reply_to'' 参照。)

  多くのユーザは複数の異なるアドレスでメイルを受信します。この場合 Mutt
  の機能をフル活用するには、どのアドレスで自分がメイルを受信するのかを
  Mutt が理解できるようにしなくてはなりません。これこそが alternates コ
  マンドの目的とするところです。このコマンドは正規表現のリストを受け取
  り、それらを使って、自分がメイルを受信するアドレスを識別するのです。

  リストから正規表現を削除するには unalternates コマンドを使います。


  33..1100..  メメイイリリンンググリリスストト

  使い方: [un]lists 正規表現 [ 正規表現 ... ]
  使い方: [un]subscribe 正規表現 [ 正規表現 ... ]

  Mutt には``メイリングリストの扱い''に関する優れた機能が幾つかありま
  す。その益にあずかるには、どのアドレスがメイリングリストに属するのか、
  そして自分がどのメイリングリストを講読しているのかを指定しなければなり
  ません。そうすれば、``list-reply'' 関数は既知のメイリングリストすべて
  に動作します。そのうえ、購読しているリストにメッセイジを送るときには
  Mutt が Mail-Followup-To へッダを付けて、返信を自分のアドレスにも送る
  ことのないよう他の人のメイルユーザエイジェント (原語：Mail User Agents
  = MUA) に伝えてくれます。ただ、Mail-Followup-To へッダは非標準的な拡張
  であって、すべての MUA でサポートされているわけではないことに注意して
  ください。このへッダを付けても、リストのメッセイジが自分宛てに CC: で
  来るのを防ぐ防弾チョッキにはなりません。 Mail-Followup-To へッダの生成
  は設定変数 ``$followup_to'' によって制御されることも覚えておいてくださ
  い。

  さらに正確に言うと、Mutt が管理しているのは、既知および購読中のメイリ
  ングリストのアドレスを表すパターンのリストです。購読しているメイリング
  リストはすべて既知になります。あるメイリングリストを既知であるというこ
  とにするには lists コマンドを使ってください。購読中にするには
  subscribe コマンドを使います。

  どちらのコマンドにも正規表現を使えます。例えば、Mutt のバグトラッキン
  グシステムにおける各バグレポートのアドレスに送信されたメッセイジを、メ
  イリングリストのメイルであるということにするには "subscribe
  [0-9]*@bugs\.guug\.de" とすれば良いわけです。多くの場合は、単にリスト
  のメイルアドレスの一部分を指定するだけで十分です。

  十分な長さでアドレスを指定して、あいまいさをなくしてください。例え
  ば、Mutt のメイリングリストを購読していれば _m_u_t_t_-_u_s_e_r_s_@_m_u_t_t_._o_r_g に宛て
  られたメイルを受信することになります。それで、このアドレスがメイリング
  リストだということを Mutt に教えるには、初期化ファイルに "lists mutt-
  users" を追加できます。これを購読していることを Mutt に教えるには、代
  わりに "subscribe mutt-users" を追加してください。万一 _m_u_t_t_-
  _u_s_e_r_s_@_e_x_a_m_p_l_e_._c_o_m というアドレスの人からメイルを受け取ることがあるな
  ら、"lists mutt-users@mutt.org" か "subscribe mutt-users@mutt.org" を
  使って、実際にリストから来たメイルにだけ一致させることができます。

  unlists コマンドは、既知と購読中のメイリングリストのリストから項目を消
  去するために使います。項目をすべて消去するには "unlists *" を使って下
  さい。

  メイリングリストを、購読中のメイリングリストのリストからは消去しつつ、
  既知のメイリングリストのリストに残しておくためには、 "unsubscribe" を
  使ってください。


  33..1111..  複複数数ののススププーールルメメイイルルボボッッククススをを使使うう

  使い方: mbox-hook [!]パターン メイルボックス

  このコマンドは、終了時やフォルダ変更時に、既読メッセイジを特定のメイル
  ボックスから違うメイルボックスへと、自動で移動させるのに使います。パタ
  ーンは「スプール」のメイルボックスとして扱うメイルボックスを指定する正
  規表現で、メイルボックスは、既読時にメイルをどこにセイヴ (移動) すべき
  かを指定します。

  一部の _h_o_o_k コマンドと違って、最初に合致したパターンだけが使われます
  (既読メイルを一度に複数のメイルボックスへセイヴ [移動] することはでき
  ません)。


  33..1122..  メメイイルルをを受受信信すするるメメイイルルボボッッククススをを定定義義すするる

  使い方: mailboxes [!]ファイル名 [ ファイル名 ... ]

  このコマンドは、メイルを受信することがあるフォルダを指定します。指定し
  たフォルダは、新着メッセイジがあるかどうかチェックされることになりま
  す。既定では、このフォルダのうちのいくつに新着メッセイジがあるかを、メ
  インメニュー (訳注：インデックスメニュー) のステイタス行が表示します。

  フォルダ変更時にスペイスを押すと、新着メイルのあるフォルダを次々に表示
  します。

  ディレクトリブラウザで TAB キーを押すと、 mailboxes コマンドで指定した
  ファイルを表示するメニューが出ます。コマンドラインから -y オプション付
  きで起動されると、 Mutt は自動的にこのモウドに入ります。

  "unmailboxes" コマンドを使って、メイルを受信するフォルダのリストから項
  目を削除できます。すべて削除するには "unmailboxes *" を使います。


  注注意意:: 新着メイルは、最終変更時刻と最終アクセス時刻との比較によって検出
  されます。biff や frm のようなユーティリティや、メイルボックスにアクセ
  スするその他のプログラムがアクセス時刻を適切に再設定しなければ、そのメ
  イルボックスでは Mutt が新着メイルを検出できなくなってしまいます。バッ
  クアップツールもまた、アクセス時刻を更新してしまう一般的な原因です。


  注注意意:: mailboxes コマンド中のファイル名はコマンド実行時に解決されますの
  で、``ショートカット文字'' ("=" や "!" など) を含んでいるなら、その文
  字に影響する変数 (``$folder'' や ``$spoolfile''など) の定義は
  mailboxes コマンドの前に実行すべきです。


  33..1133..  ユユーーザザ定定義義へへッッダダ

  使い方:
  my_hdr 文字列
  unmy_hdr フィールド [ フィールド ... ]

  "my_hdr" コマンドで自分独自のヘッダフィールドを創作できます。このヘッ
  ダフィールドは送信するメッセイジすべてに付加されます。

  例えば送信メッセイジすべてに "Organization:" ヘッダフィールドを付加し
  たいのであれば、


       my_hdr Organization: 大会社 (株)

  というコマンドを .muttrc に入れればいいのです。

  注注意意:: キーワードとコロン (":") の間にスペイスを入れることは許されませ
  ん。電子メイルの規格 (RFC822 [訳注：現在は 2822 か]) で、そこにスペイ
  スを入れるのは違反だと言われています。それで Mutt はその規則を強制する
  というわけです。

  単独のメッセイジにヘッダフィールドを付加したい場合は、
  ``$edit_headers'' 変数を設定しておくか、送信メニュー (訳注：コンポウズ
  メニューのことか) で _e_d_i_t_-_h_e_a_d_e_r_s 関数 (既定値: E) を使うかのいずれか
  によって、メッセイジの本文と一緒にヘッダを編集できます。

  ユーザ定義のヘッダフィールドを消去するには "unmy_hdr" コマンドを使って
  ください。アスタリスク ("*") を指定してすべてのヘッダフィールドを消去
  することもできますし、消去するフィールドを指定することもできます。例え
  ば、"To" と "Cc" ヘッダフィールドをすべて削除するには、こうすればよい
  のです。


       unmy_hdr to cc



  33..1144..  メメッッセセイイジジ閲閲覧覧時時ののヘヘッッダダのの順順序序をを定定義義すするる

  使い方: hdr_order ヘッダ_1 [ ヘッダ_2 ヘッダ_3 ... ]

  このコマンドによって、メッセイジ閲覧時に Mutt がヘッダを表示する順序を
  指定できます。

  "unhdr_order *" は以前に指定したヘッダをすべて順序リストから解除します
  から、システム全体の初期化ファイルによって設定されたヘッダ順序の効果も
  消去してしまいます。



       hdr_order From Date: From: To: Cc: Subject:





  33..1155..  既既定定ののセセイイヴヴフファァイイルル名名をを指指定定すするる

  使い方: save-hook [!]パターン ファイル名

  このコマンドは、メッセイジをセイヴ (移動) するときに使うファイル名の既
  定値を上書きするのに使います。ファイル名は、正規表現パターンに合致する
  アドレスが _F_r_o_m_: のときか、自分が差出人でメッセイジの _T_o_: が正規表現パ
  ターンに合致するときに、既定のファイル名として使われます。 (訳
  注：send-hook, save-hook, fcc-hook, fcc-save-hook には printf風シーク
  ウェンスが使えるらしい。% 記号を使った書式については ``$index_format''
  と ``$status_format'' を参照。)

  パターンの正確な書式の情報については``「フックにおけるメッセイジの合
  致」の節''を参照してください。

  例:



       save-hook me@(turing\\.)?cs\\.hmc\\.edu$ +elkins
       save-hook aol\\.com$ +spam



  ``fcc-save-hook'' コマンドも参照して下さい。


  33..1166..  メメッッセセイイジジ作作成成時時のの既既定定のの FFcccc:: メメイイルルボボッッククススをを指指定定すするる

  使い方: fcc-hook [!]パターン メイルボックス

  このコマンドは送信メッセイジを ``$record'' 以外のメイルボックスに保存
  するために使います。 Mutt はまず、メッセイジ宛先リストの中で正規表現パ
  ターンを検索して、最初に合致したもののメイルボックスを既定の Fcc: メイ
  ルボックスとして使います。合致するものが見付からなければ ``$record''
  つまり「記録」メイルボックスに保存します。

  パターンの正確な書式の情報については``「フックにおけるメッセイジの合
  致」の節''を参照してください。

  例: fcc-hook aol.com$ +spammers

  上のようにすると、aol.com ドメインに行くことになっているメッセイジはす
  べて既定で +spammers メイルボックスにコピーが保存されます (訳注：もし
  あれば some@aolicom や any@mx.maol.com なんていうのも該当してしまうけ
  れど)。 ``fcc-save-hook'' コマンドの節も参照してください。


  33..1177..  既既定定ののセセイイヴヴフファァイイルル名名とと既既定定のの FFcccc:: メメイイルルボボッッククススをを同同時時にに指指定定
  すするる

  使い方: fcc-save-hook [!]パターン メイルボックス

  このコマンドはショートカット (訳注：短縮コマンドのような意味) であり、
  同じ引数で ``fcc-hook'' と ``save-hook'' を両方とも実行するのと等価で
  す。


  33..1188..  メメッッセセイイジジのの宛宛先先にによよっってて設設定定をを変変更更すするる

  使い方: reply-hook [!]パターン コマンド
  使い方: send-hook [!]パターン コマンド

  このコマンドを使って、メッセイジの宛先に基づいて任意のコマンドを実行で
  きます。パターンは望みのアドレスに合致する正規表現です。コマンドは、パ
  ターンがメッセイジの宛先に合致するときに実行されます。

  reply-hook は送信するメッセイジの代わりに返信元元のメッセイジに対して検
  索されます。send-hook は新規メッセイジにも返信メッセイジに対しても検索
  されます。注注意意:: reply-hook はユーザの設定ファイルに指定されている順番
  に関関わわららずず send-hook より先先にに検索されます。

  send-hook および reply-hook の各タイプとも、複数の該当結果が生じたとき
  にコマンドが実行される順番は (そのタイプのフックのうちでは) muttrc に
  書かれている順です。 (訳注：それで、変数の設定は後に実行されたほうが先
  の設定を上書きする。)

  パターンの正確な書式の情報については``「フックにおけるメッセイジの合
  致」の節''を参照してください。

  例: send-hook mutt "set mime_forward signature=''"

  このコマンドの別の典型的な使い方は、署名と出典の言語を宛先に応じて変更
  するために ``$attribution'', ``$signature'', ``$locale'' 変数の値を切
  り換えることです。

  注注意意: send-hook は最初に宛先リストができた直後に《一度》実行されるだけ
  です。返信を書いたり編集したりしてから宛先を追加しても、 send-hook は
  《実行されません》。また、宛先ヘッダや題名を変える my_hdr コマンドが
  send-hook から実行されたとき、そのメッセイジには何の影響も与えないとい
  うことにも注意してください。(訳注： unmy_hdr 等で変更されなければ、次
  のメッセイジには適用される)


  33..1199..  メメッッセセイイジジ整整形形前前にに設設定定をを変変更更すするる

  使い方： message-hook [!]パターン コマンド

  このコマンドを使って、メッセイジの閲覧や整形の前に、そのメッセイジに関
  する情報に基づいて任意の設定コマンドを実行できます。表示しようとしてい
  るメッセイジにパターンが合致していればコマンドが実行されます。(訳注：
  無限ループに入らないよう注意！) 複数の合致が生じるときは、muttrc にあ
  る順番でコマンドが実行されます。

  パターンの正確な書式の情報については``「フックにおけるメッセイジの合
  致」の節''を参照してください。

  例：


       message-hook ~A 'set pager=builtin'
       message-hook '~f freshmeat-news' 'set pager="less \"+/^  subject: .*\""'





  33..2200..  宛宛先先のの人人のの暗暗号号鍵鍵をを選選ぶぶ

  使い方: crypt-hook パターン 鍵_I_D

  メッセイジを暗号化するとき、ある特定の鍵をそのメイルアドレスに自動で割
  り当てたいと思うかもしれません。それは宛先の公開鍵が目的のアドレスから
  は推測できないからであったり、 Mutt の通常の選択をなんらかの理由で上書
  きする必要があるからであったりします。 crypt-hook コマンドは、特定の宛
  先へのメッセイジを暗号化するときに使う公開鍵の ID を指定する手段を提供
  するのです。

  ここでは広い意味で「鍵 ID」と言っています。数字の鍵 ID を入れることも
  できますし、メイルアドレスも使えます。本名でも構いません。


  33..2211..  キキーーボボーードドババッッフファァににキキーーシシーーククウウェェンンススをを加加ええるる

  使い方: push 文字列

  このコマンドは、指名した文字列をキーボードバッファに入れます。この文字
  列には ``macro'' コマンドのシークウェンスのように、コントロウル文字、
  キーの名前、関数名を含められます。これを使って、起動時や特定のフォルダ
  への移動時に、複数のコマンドを連続実行することもできます。 (訳注：これ
  ぞ Mutt 最強のコマンド。修得すべし。)


  33..2222..  関関数数をを実実行行すするる

  使い方: exec 関数 [ 関数 ... ]

  このコマンドは、あらゆる関数の実行に使えます。関数は``関数早見表''で一
  覧にしてあります。 "exec 関数" は "push <関数>" と等価です。


  33..2233..  メメイイルルのの得得点点付付けけ

  使い方: score パターン 値
  使い方: unscore パターン [ パターン ... ]

  score コマンドは、パターンがメッセイジに合致するなら、指定した値をその
  メッセイジの得点に加えます。パターンは``「パターン」''の節に説明してあ
  る書式の文字列です (注意: 効率上の理由から、インデックスで扱えない情報
  を走査するパターン、例えば ~b, ~B, ~h 等は使えません)。値は正か負の整
  数です。メッセイジの最終的な得点は、合致する score コマンドすべての合
  計です。しかしながら、値の前に等号 (=) を付けて、特定の score コマンド
  に合致すればそこで計算を止めさせる (訳注：確定させる) ということもでき
  ます。負数の最終得点は 0 に丸められます。

  unscore コマンドは score コマンドのリストから項目を除去します。score
  コマンドで指定したのと同同じじパターンを指定しなければ除去できません。 "*"
  というパターンは score コマンドのリストをすべて消去するという意味の特
  殊記号です。


  33..2244..  変変数数をを設設定定すするる

  使い方: set [no|inv]変数[=値] [ 変数 ... ]
  使い方: toggle 変数 [変数 ... ]
  使い方: unset 変数 [変数 ... ]
  使い方: reset 変数 [変数 ... ]

  このコマンドは``設定変数''を設定したり解除したりするのに使います。変数
  には基本的な四つの型があります。boolean (二値), number (数値), string
  (文字列), quadoption (四値) です。 _b_o_o_l_e_a_n の変数は 設定されている
  (真) か 設定されていない (偽) かのいずれかです (訳注：訳者の気分によ
  り、設定 (yes) と解除 (no) という表現も使う)。 _n_u_m_b_e_r 変数には正の整数
  を割り当てることができます。

  _s_t_r_i_n_g 型の変数はいくつかの表示文字 (原語：printable characters, つま
  りコントロウル文字以外の文字) で構成されます。スペイスやタブを含むなら
  ば引用符で括らなければなりません。また "C" のエスケイプシークウェンス
  \\nn と \\tt を、それぞれ改行とタブの代わりに使用できます。

  _q_u_a_d_o_p_t_i_o_n 型の変数は、特定の動作について実行前に質問するかどうかを制
  御したり、既定 (訳注：リターンだけを押したとき) の動作を指定したりする
  のに使います。_y_e_s という値は、あたかも質問に yes と答えたかのような動
  作を自動で引き起こします。それと同様、_n_o という値は、no と答えたかのよ
  うな動作を引き起こします。_a_s_k_-_y_e_s という値は既定の答えを yes にして質
  問しますし、_a_s_k_-_n_o は既定の答えを no にします。

  "no" を変数の前に付けると、変数を解除します。例: set noaskbcc

  _b_o_o_l_e_a_n 型の変数に関しては、変数名の前に inv を付けて値を切り替えられ
  ます (on ⇔ off)。これはマクロを書く時に便利です。例: set
  invsmart_wrap

  toggle コマンドは、指定した変数すべての頭に自動で inv を付けます。

  unset は指定した変数すべての頭に no を付けるコマンドです。

  インデックスメニューで enter-command 関数を使えば、変数の名前の前に疑
  問符を付けることによって、変数の値を問い合わせられます。



       set ?allow_8bit




  この疑問符は、実際には boolean 変数と quadoption 変数にしか必要ありま
  せん。(訳注：ほかは set だけで値を参照できる)

  reset コマンドは与えられた変数すべてをコンパイル時の既定値 (おそらく、
  このマニュアルに書いてある値) に戻します。 set コマンドで変数の前に
  "&" を付けると reset コマンドと同じ挙動となります。

  reset コマンドには特別な変数 "all" が存在し、これですべての変数をシス
  テムの既定値に戻すことができます。


  33..2255..  初初期期化化ココママンンドドをを別別ののフファァイイルルかからら読読みみ込込むむ

  使い方: source ファイル名

  このコマンドで、初期化コマンドを他のファイルから取り込めます。例えばエ
  イリアスファイルを ~/.mail_aliases に配置すれば、 ~/.muttrc を (訳注：
  他ユーザから) 読めるようにしても、エイリアスは秘密にしておけます。

  ファイル名の最初がティルド ("~") であれば、自分のホウムディレクトリの
  パスに展開されます。

  ファイル名が縦線 (|) で終わっていれば、指定したファイル名のファイルは
  実行プログラムとみなされ、そこから入力を読み出します。(例: source
  ~/bin/myscript|/)


  33..2266..  フフッッククをを取取りり除除くく

  使い方: unhook [ * | フック ]

  このコマンドで、それまでに設定してきたフックを流し去ることができます。
  あらゆるフックを消すのも "*" を引数として与えることによってできます
  し、unhook send-hook のようにして特定のタイプのフックをすべて消すとい
  うこともできます。


  44..  高高度度なな使使いい方方

  44..11..  正正規規表表現現

  Mutt における文字列パターンは、より複雑な``パターン''における文字列パ
  ターンも含めて、すべて正規表現 (regular expressions = regexp) の
  「POSIX 拡張」文法 (egrep や GNU awk で使われている文法とほぼ同じです)
  を使って指定しなくてはなりません。便宜のため、以下にこの文法の簡単な説
  明を含めました。

  検索は、パターンに一つでも大文字があれば文字の大小を意識し、それ以外は
  大小を意識しません。"\" を初期化コマンド中の正規表現に使うには "\\" と
  する必要があるので注意してください。

  正規表現は一つのパターンで何種類かの文字列を表します。正規表現は代数表
  現と同じように、より小さな式を色々な演算子で組み合わせて構築されます。

  正規表現は、「"」や「'」で囲んだり区切ったりできます。これは正規表現が
  空白文字を含む場合に便利です。区切り記号「"」と「'」の処理に関するさら
  に詳細な情報は、``「初期化ファイルの構文」''の項を参照してください。そ
  のままの記号として「"」や「'」に合致させるには、記号の前に「\」(バック
  スラッシュ [訳注：半角「￥」が表示されるフォントもあるが、英語圏では逆
  向きスラッシュ]) をつけてください。

  基本となる単位は文字ひとつに合致する正規表現です。すべてのアルファベッ
  トと数字を含めて、ほとんどの文字は自分自身に合致する正規表現です。特殊
  な意味を持つメタ文字記号は、前にバックスラッシュを付けることによって本
  来の記号に合致します。(訳注：つまり "." に合致する正規表現は "\.")

  ピリオド "." はどんな文字にでも合致します。カレット "^" とドル記号 "$"
  はそれぞれ、行の最初と最後という、文字ではない部分に合致するメタ文字で
  す。


  文字を "[" と "]" で囲んだリストは、その中のどの文字 (一字) にでも合致
  します。そのリストの最初の文字がカレット "^" であれば、そのリストになな
  いい文字に合致します。例えば [[00112233445566778899]] は十進数の数字ひとつに合致しま
  す。ある範囲内における最初と最後の文字の間にハイフン "-" を置けば、そ
  の範囲の ASCII 文字全体を指定できます。リストの中ではほとんどのメタ文
  字から特別な意味がなくなります。 "]" という記号そのものを含めるには、
  リストの最初に置きます。同様に、"^" そのものを含めたい場合はリストの最
  初以外のどこかに置けば大丈夫です。そしてハイフン記号 "-" そのものを含
  めるにはリストの最後に置くというわけです。

  あるクラスの文字は、前もって特定の名前で定義してあります。文字クラス
  は、「[:クラスを表すキーワード:]」という構成です。以下のクラスは POSIX
  標準で定められているものです。


     [[::aallnnuumm::]]
        アルファベットと数字

     [[::aallpphhaa::]]
        アルファベット

     [[::bbllaannkk::]]
        スペイスとタブ

     [[::ccnnttrrll::]]
        コントロウル文字

     [[::ddiiggiitt::]]
        数字

     [[::ggrraapphh::]]
        表示文字であり可視文字でもある文字 (スペイスは表示文字だが不可
        視。一方で "a" は表示文字かつ可視な文字)

     [[::lloowweerr::]]
        小文字のアルファベット

     [[::pprriinntt::]]
        表示文字 (コントロウル文字でない文字のこと)

     [[::ppuunncctt::]]
        記号 (アルファベット、数字、コントロウル文字、空間文字のどれでも
        ない文字のこと)

     [[::ssppaaccee::]]
        空間文字 (幾つか挙げてみると、スペイス、タブ、改ペイジといったと
        ころ)

     [[::uuppppeerr::]]
        大文字のアルファベット

     [[::xxddiiggiitt::]]
        16 進数

  文字クラスは、文字リストの括弧内の正規表現でのみ有効です。注意してほし
  いのは、このクラス名に付いている角括弧はシンボル名の一部であり、リスト
  を囲む角括弧に加えて、さらに必要になるということです。例えば
  [[[[::ddiiggiitt::]]]] が [[00--99]] と等価です。

  さらに二つの特殊シークウェンスを文字リスト中で使えます。これは非 ASCII
  文字セットに適用されるもので、以下のように、そうした文字セットでは単一
  のシンボル (照合要素 collating elements と呼ばれる) が、照合や整列にお
  いて等価な複数の文字列や文字を象徴することがあります。



     照照合合記記号号
        照合記号は複数文字の照合要素を "[." と ".]" で括ったもの。例えば
        ch が照合要素だとすると、[[[[..cchh..]]]] がこの照合要素に合致する正規表
        現。一方、[[cchh]] だと c または h のどちらかに合致する正規表現とい
        うことになってしまう

     等等価価ククララスス
        等価クラスとは、特定の言語における一連の等価な文字を指す名前のこ
        と。その名前は "[=" と "=]" で括る。例えば e という名前で、アク
        セント記号付きのものも含めた三種類の e をすべて表わせる。この場
        合 [[=e=]] は右下がりアクセントの e (0xE8), 右上がりアクセントの
        e (0xE9), 普通の e のどれかであれば合致する正規表現である

  一字に合致する正規表現は、幾つかある繰り返し演算子のうちのいずれかを後
  に付けることができます。


     ??  この記号の前にあるアイテムは、あってもなくても良く、あっても一回
        しか合致しない (訳注：0 〜 1 回)

     **  この記号の前のアイテムは 0 回でもそれ以上でも合致する (訳注：0
        〜 ∞回)

     ++  この記号の前のアイテムは一回以上あれば合致する (訳注：1 〜 ∞回)

     {{nn}}
        この前のアイテムは、きっちり _n 回なら合致する

     {{nn,,}}
        この前のアイテムは _n 回以上で合致する (訳注：n 回も含む)

     {{,,mm}}
        この前のアイテムは _m 回まで合致する (訳注：0 〜 m 回)

     {{nn,,mm}}
        この前のアイテムは _n 回以上 _m 回までなら合致する

  二つの正規表現を連結することができます。その結果できた正規表現が合致す
  るのは、それぞれに合致する文字列をその順番に並べたものです。 (訳注：訳
  が悪いので補足すると、たとえば [A-Z][0-9] は、 A3 や B5 といった、大文
  字アルファベットの次に数字が来るような文字列に合致する一つの正規表現で
  ある、ということ。)

  二つの正規表現は中間演算子 "|" で連結することもでき、二つをこのように
  つないでできる正規表現は、いずれかの「子表現」の合致する文字列に合致し
  ます。 (訳注：たとえば [A-Z]|[0-9] だと、D2 等ではなく C や 0  や R に
  合致することになり、[A-Z0-9] と等価になる。 a1B2c3 という文字列に対し
  て、[A-Z][0-9] は B2 にのみ合致し、 [A-Z]|[0-9] は 1 にも B にも 3 に
  も合致する。)

  繰り返し演算子は単なる連結よりも優先されます。連結はというと、こちらは
  代替表現より優先されます。子表現にしたい部分を括弧で囲めば、この優先順
  位を上書きできます。 (訳注：[a-z][0-9]+ は繰り返し演算子の効力が [0-9]
  にしかなくて、 aaa777 のうち a777 の部分に合致。これを ([a-z][0-9])+
  にすると括弧内全体に効力が及ぶので、 aaa777 に対しては a7 の部分にのみ
  合致。a7a7a7 なら全体に合致。)

  メメモモ:: Mutt を GNU _r_x パッケイジと共にコンパイルしていれば、次の演算子
  も正規表現の中で使えます。


     \\\\yy
        単語が開始または終了する部分 (訳注：単語とスペイスの間の部分な
        ど) に合致する


     \\\\BB
        単語の内部 (訳注：文字と文字の間の部分) に合致する

     \\\\<<
        単語の開始部分 (訳注：単語の最初の文字とその前のスペイスの間な
        ど) に合致する

     \\\\>>
        単語の終了部分 (訳注：最後の文字とそれに続くスペイスの間など) に
        合致する

     \\\\ww
        単語要員の文字 (アルファベット、十進数字、アンダスコア [下線])
        のいずれにも合致する

     \\\\WW
        単語要員でないあらゆる文字に合致する

     \\\\``
        バッファ (文字列) の開始部分に合致する

     \\\\''
        バッファの終了部分に合致する

  とはいえご注意いただきたいのは、これらの演算子が POSIX で定められてい
  ないため、これらを普段のライブラリで使えるシステムも使えないシステムも
  あるということです。


  44..22..  パパタターーンン

  Mutt コマンドには、パターンを指定して合致したものにだけ適用することの
  できるものが多数あります (limit, tag-pattern, delete-pattern 等)。いく
  つかの方法でメッセイジを選択できます。
































  ~A              全てのメッセイジ
  ~b EXPR         メッセイジ本文 (body) に EXPR を含むメッセイジ
  ~B EXPR         メッセイジ全体のどこかに EXPR を含むメッセイジ
  ~c USER         USER に CC 送付されているメッセイジ
  ~C EXPR         To: か Cc: に EXPR のあるメッセイジ
  ~D              削除される (deleted) メッセイジ
  ~d [MIN]-[MAX]  送信日 ("date-sent") が範囲内にあるメッセイジ
  ~E              期限切れ (expired) メッセイジ
  ~e EXPR         "Sender" フィールドに EXPR を含むメッセイジ
  ~F              フラグ付き (flagged) メッセイジ
  ~f USER         USER から送られた (from USER) メッセイジ
  ~g              暗号で署名されているメッセイジ
  ~G              暗号化されているメッセイジ
  ~h EXPR         ヘッダ (header) に EXPR を含むメッセイジ
  ~k              PGP 鍵 (key) を含むメッセイジ
  ~i ID           "Message-ID" フィールドに ID が合致するメッセイジ
  ~L EXPR         EXPR が出したか受けとったか、いずれかのメッセイジ
  ~l              既知のメイリングリスト (list) へ宛てたメッセイジ
  ~m [MIN]-[MAX]  番号が MIN から MAX の範囲のメッセイジ *)
  ~n [MIN]-[MAX]  得点が MIN から MAX の範囲のメッセイジ *)
  ~N              新着 (new) メッセイジ
  ~O              古い (old) 未読メッセイジ
  ~p              自分宛てのメッセイジ (alternates を考慮する)
  ~P              自分が出したメッセイジ (alternates を考慮する)
  ~Q              返信済みのメッセイジ
  ~R              既読 (read) メッセイジ
  ~r [MIN]-[MAX]  受信日付 "date-received" が範囲内にあるメッセイジ
  ~S              置き換えられた (superseded) メッセイジ
  ~s SUBJECT      "Subject" フィールドに SUBJECT を持つメッセイジ
  ~T              タグ付き (tagged) メッセイジ
  ~t USER         USER に宛てられた (to USER) メッセイジ
  ~U              未読 (unread) メッセイジ
  ~v              折りたたんだスレッドにあるメッセイジ
  ~x EXPR         "References" フィールドに EXPR を含むメッセイジ
  ~y EXPR         "X-Label" フィールドに EXPR を含むメッセイジ
  ~z [MIN]-[MAX]  サイズが MIN から MAX までの範囲にあるメッセイジ *)
  ~=              重複しているメッセイジ ($duplicate_threads 参照)
  ~$              参照されていないメッセイジ (スレッド表示が必要)




  EXPR, USER, ID, SUBJECT の部分は``正規表現''です。

  *) <[MAX], >[MIN], [MIN]-, -[MAX] という形式も使えます。


  44..22..11..  パパタターーンン修修飾飾子子


  アドレスの「リスト」に合致させる種類のパターン (特に ~c, ~C, ~p, ~P,
  ~t) は、リストの中に一つでも合致するものがあれば合致してしまうので注意
  してください。そのリストの要素すべてに合致する場合に限るには、パターン
  の前に ^ を付ける必要があります。これはドイツの人だけに宛てられたメイ
  ルすべてに合致する例です。



       ^~C \.de$







  44..22..22..  複複雑雑ななパパタターーンン


  複数の条件を指定することによって論理積 AND が計算されます。例えば、



       ~t mutt ~f elkins




  これは、宛先のリストに "mutt" という語を含み、かかつつ "From" ヘッダフィー
  ルドに "elkins" という語のあるメッセイジを選択します。

  Mutt は以下の演算子も認識するので、さらに複雑な検索パターンを作成でき
  ます。


  +o  ! -- 論理演算子 NOT (否定)

  +o  | -- 論理演算子 OR (論理和)

  +o  () -- グループ化論理演算子

  ここに、複雑な検索パターンをよく表している例があります。このパターン
  は、メッセイジのうち、"mutt" を "To" および "Cc" フィールドに含まず、
  かつ "elkins" から来ているものすべてを選択します。



       !(~t mutt|~c mutt) ~f elkins




  次は、空白を正規表現内で使う例です (「'」と「"」に注目してください)。
  これが合致するのは、メイルの題名が "^Junk +From +Me$" に合致し、差出人
  が "Jim +Somebody" か "Ed +SomeoneElse" であるメッセイジです。 (訳注：
  「+」は一回以上の繰り返しを表すということを思い出してください。)



        '~s "^Junk +From +Me$" ~f ("Jim +Somebody"|"Ed +SomeoneElse")'




  正規表現に括弧や垂直棒 ("|") があるときは必必ずずダブルクウォウトかシング
  ルクウォウトで囲まなくてはなりません。それらの記号は Mutt のパターン言
  語において別の部分を区切るためにも使われるからです。例えば、



       ~f "me@(mutt\.org|cs\.hmc\.edu)"




  これにクウォウトがなかったら、括弧が終わらないことになります。「_~_f
  _m_e_@_(_m_u_t_t_\_._o_r_g」と「_c_s_\_._h_m_c_\_._e_d_u_)」という二つのパターンが OR されること
  になるのです。これは絶対に間違いですね。




  44..22..33..  日日付付でで検検索索すするる

  Mutt は二種類の日付、すなわち絶対日付と相対日付に対応しています。

  絶絶対対日日付付。 日付は必必ずず DD/MM/YY という形式で指定しなければなりません
  (ただし、月と年は現在の月と年が既定になっており、省略できます)。正しい
  日付範囲の例は次のとおり (訳注：limit 関数の例)。



       メッセイジの表示を制限するパターン: ~d 20/1/95-31/10




  最小値 (一番目) の日付を省略して "-DD/MM/YY" だけ指定すると、その日付
  以前のメッセイジがすべて選択されます。最大値 (二番目) の日付を省略して
  "DD/MM/YY-" と指定すると、その日付以後のメッセイジがすべて選択されま
  す。ダッシュ ("-") なしでひとつだけ日付を指定すると、その日付に送信さ
  れたメッセイジだけが選択されます。

  誤誤差差範範囲囲。 絶対日付には誤差範囲を付けられます。誤差範囲は、符号 (+ か
  -), 次に数字、その次に単位という形式で指定します。

  y       年
  m       月
  w       週
  d       日


  特例として、符号を "*" にすることができます。これは正と負に同じだけ誤
  差を与えるのと等価です。

  例: 2001 年 1 月 15 日の前後二週間ずつのメッセイジを選択するには、次の
  ようなパターンを使えます。


       メッセイジの表示を制限するパターン: ~d 15/1/2001*2w




  相相対対日日付付。 このタイプの日付は、現在の日付から相対的に見たものです。こ
  のように指定できます。

  +o  >_o_f_f_s_e_t (_o_f_f_s_e_t より長く経過したメッセイジ)

  +o  <_o_f_f_s_e_t (経過期間が _o_f_f_s_e_t より短いメッセイジ)

  +o  =_o_f_f_s_e_t (ちょうど _o_f_f_s_e_t だけ経過したメッセイジ)

  _o_f_f_s_e_t は正の数に以下の単位のいずれかを付けたものです。

  y       年
  m       月
  w       週
  d       日



  例: 生後一ヵ月未満のメッセイジを選択するには次のようにします。


       メッセイジの表示を制限するパターン: ~d <1m


  注注意意: 検索時に使う日付はすべてロロウウカカルル時間に対する相対日付ですか
  ら、``$index_format'' の設定を変更して %[...] フォーマットを含むように
  しないと、必ずしもインデックスに表示されている日付と同同じじででははあありりまませせ
  んん。


  44..33..  タタググをを使使うう


  操作を実行するときに、一通ずつ扱うよりも、ひとまとめにしたメッセイジを
  一度に扱った方が良いことがあります。例としては、あるメイリングリスト宛
  てのメッセイジを別のフォルダにセイヴ (移動) するとか、指定した題名の
  メッセイジをすべて削除するといったものがあるでしょう。パターンに合致し
  たメッセイジにタグをつけるには tag-pattern 関数を使います。これは既定
  で "shift-T" に割り当てられています。また、個々のメッセイジを手作業で
  選択するため "tag-message" 関数を使うこともできます。こちらは既定で
  "t" に割り当てられています。Mutt のパターン検索の構文については ``「パ
  ターン」''の節を参照して下さい。

  お望みのメッセイジにタグをつけたら、"tag-prefix" 演算子を使えます。こ
  れは既定値では ";" (セミコロン) キーです。 "tag-prefix" 演算子が使われ
  ると、次次のの操作は、タグの付いたメッセイジすべてに適用されます (そのよう
  な使い方のできる操作であれば、ですが)。もし ``$auto_tag'' 変数がセット
  されていれば、次の操作が自動的にタグ付きメッセイジへ適用されるので、
  "tag-prefix" 演算子は必要ありません。


  44..44..  フフッッククをを使使うう

  フックとは EMACS エディタから借りてきた概念で、ある操作の実行前に任意
  のコマンドを実行できるようにするものです。例えば、読もうとしているメイ
  ルボックスや送ろうとしているメイルのあて先に基づいて設定を調整したいと
  思うことがあります。 Mutt の世界において、フックは設定オプションやコマ
  ンドに合った ``正規表現''や``パターン'' で構成されます。利用できる各種
  フックの詳細については、以下を参照してください。

  +o  ``folder-hook''

  +o  ``send-hook''

  +o  ``message-hook''

  +o  ``save-hook''

  +o  ``mbox-hook''

  +o  ``fcc-hook''

  +o  ``fcc-save-hook''

  注注意意:: フックが設定を変更した場合、変更の効果はその mutt セッションの終
  わりまで続きます。これは一般的に望み通りの動作ではありませんので、既定
  のフックを他のフックの前に追加して設定の既定値に復帰する必要がありま
  す。次に挙げるのは send-hook と my_hdr 命令の例です。 (訳注：b@bab や
  b@b.b といったアドレスを To か Cc に含むメッセイジを送信するときにのみ
  自分のアドレスを c@c.c とする、という設定。最初の send-hook がないと、
  そのようなメッセイジを送ったあとはずっと From: c@c.c のままになる。最
  初の send-hook があるおかげで他の宛先には my_hdr が解除されて、from 変
  数の値が使用される。)



       send-hook . 'unmy_hdr From:'
       send-hook ~Cb@b.b my_hdr from: c@c.c


  44..44..11..  フフッッククににおおけけるるメメッッセセイイジジ合合致致条条件件

  メッセイジに対して働くフック (send-hook, save-hook, fcc-hook, message-
  hook) は、他とは少し違う方法で評価されます。他のタイプのフックコマンド
  には``正規表現''で十分ですが、メッセイジを扱うときには、合致に関して、
  よりきめ細かな制御が必要です。目的が異なれば、合致させたいと思う条件も
  異なるものだからです。

  Mutt では、フックコマンドにおけるメッセイジ合致条件に ``検索パター
  ン''言語を使えます。これは、演算子のうち、メッセイジのへッダ (すなわち
  from, to, cc, date, subject 等) から抽出した情報に関するものしか使えな
  い点を除けば、メイルボックスを _s_e_a_r_c_h (検索) したり _l_i_m_i_t (表示制限)
  したりするときとまったく同じように動作します。

  例えば、送信メッセイジに基づいて返信先を特定のアドレスに設定したい場
  合、次のようにすることができます。


       send-hook '~t ^me@cs\.hmc\.edu$' 'my_hdr From: Mutt User <user@host>'




  これは、_m_e_@_c_s_._h_m_c_._e_d_u 宛てにメイルを送るときに所定のコマンドを実行する
  例です。

  とはいえ、合致パターンは完全な形の検索言語で書かなければならないという
  わけではありません。他のフック同様、単なる正規表現を使っても良く、この
  場合 Mutt がそのパターンを完全な言語に翻訳してくれます。翻訳には
  ``$default_hook'' 変数によって指定されている方法を使います。パターンは
  そのフックが宣言された時点で翻訳されるので、その当時有効だった
  ``$default_hook'' の値が使われます。


  44..55..  アアドドレレススのの外外部部問問いい合合わわせせ

  Mutt は、LDAP, ph/qi, bbdb, NIS といった外部ディレクトリデイタベイスへ
  の接続をサポートしており、これは簡単なインタフェイスで Mutt に接続する
  ラッパスクリプトを通して実現します。 ``$query_command'' 変数を使って、
  利用するラッパコマンドを指定します。例えばこうです。



       set query_command = "mutt_ldap_query.pl '%s'"




  ラッパスクリプトはコマンドライン上で問い合わせを受け付けることになって
  います。一行メッセイジを返し、次に合致結果がそれぞれ一行ずつ並び、その
  各行は「アドレス、名前、その他付加情報」をこの順にタブ区切りで含んでい
  るべきです。エラー時、および合致するアドレスがない場合は 0 以外の終了
  コウドと一行のエラーメッセイジを返します。

  複数回答の出力例


       Searching database ... 20 entries ... 3 matching:
       me@cs.hmc.edu           Michael Elkins  mutt dude
       blong@fiction.net       Brandon Long    mutt and more
       roessler@guug.de        Thomas Roessler mutt pgp





  Mutt の問い合わせ機能にアクセスする仕組みは二つあります。一つは問い合
  わせをインデックスメニューから query 関数 (既定値: Q) を使って行なう仕
  組みです。問い合わせ内容を聞かれるので入力すると、問い合わせメニューが
  出て合致結果の一覧が表示されるのです。問い合わせメニューからは、選んだ
  アドレスにエイリアスを作成したりメイルしたりすることができます。タグを
  付けて複数アドレスにメイルすることや、新しく問い合わせを始める、つまり
  新規問い合わせを現在の結果内容に追加することもできます。

  問い合わせ機能にアクセスするもう一つの仕組みは、アドレス補完という、エ
  イリアス補完と同じような仕組みです。アドレス入力のプロンプトならどれで
  でも complete-query 関数 (既定値: ^T) を使って、アドレスのうちの、その
  時点までに入力済みの部分に基づいた問い合わせを実行できます。エイリアス
  のように、どこまで入力済みかについて Mutt は最後のスペイスかコンマまで
  戻って調べます。その問い合わせに結果が一つだけであれば、Mutt はその場
  でアドレスを展開します。結果が複数ならば Mutt は問い合わせメニューに移
  ります。問い合わせメニューでは、プロンプトに追加するアドレスを一つでも
  複数でも選択することができます。


  44..66..  メメイイルルボボッッククススのの形形式式

  Mutt は四種類のメイルボックス ― mbox, MMDF, MH, Maildir ― の読み書き
  をサポートしています。メイルボックスの種類は自動判定されるので、種類の
  違いを指示する必要はありません。新規メイルボックス作成時には
  ``$mbox_type'' 変数で指定される既定値を使います。

  mmbbooxx. これは UNIX でもっとも広く使われている形式です。メッセイジは一つ
  のファイルにすべて格納されます。各メッセイジには、



       From me@cs.hmc.edu Fri, 11 Apr 1997 11:44:56 PST




  という形式の行が一行あり、メッセイジの始まりを表しています (これはしば
  しば "From_" 行として言及されます)。

  MMMMDDFF. これは _m_b_o_x 形式の亜種です。それぞれのメイルが ^A^A^A^A (Ctrl-A
  四つ) という行で囲まれています。

  MMHH. _m_b_o_x と _M_M_D_F からの革新的な変形であり、メイルボックスはディレクト
  リで構成され、各メッセイジが別々のファイルに格納されています。ファイル
  名はメッセイジ番号を示します (しかし、この番号は Mutt が表示するメッセ
  イジ番号とは関係ありません)。削除されたメッセイジはファイル名が変更さ
  れて、先頭にコンマ (,) が付くだけです。注注意意:: Mutt は、.mh_sequences か
  .xmhcache がないか探すことによってこの形式を検知します (普通のディレク
  トリと MH メイルボックスを区別するために必要です [訳注：西岡・人見訳
  1.4-0 では、Mutt がこれらのファイルを更新しないことが併記されていた。
  それらのファイルは MH かどうかを調べるためにのみ使われるということ
  だ])。

  MMaaiillddiirr. メイルボックス形式の最新版で、Qmail MTA (sendmail の競合品)
  で使われています。_M_H とよく似ていますが、違うのはメイルボックスのサブ
  ディレクトリを三つ (_t_m_p, _n_e_w, _c_u_r) 追加してある点です。メッセイジの
  ファイル名は、二つのプログラムが同じメイルボックスを NFS 越しに書き込
  んでいるときでさえも重ならないような方法で選ばれています。これはつま
  り、ファイルのロックが必要ないということを意味します。


  44..77..  メメイイルルボボッッククススのの省省略略形形

  特定のメイルボックスを指す組み込みショートカット (省略形) が幾つか用意
  されています。ショートカットは、ファイルやメイルボックスの場所を入力す
  る場面ならどこででも使えます。
  +o  ! …… ``$spoolfile'' (受信用) メイルボックスを指す

  +o  > …… ``$mbox'' メイルボックスを指す

  +o  < …… ``$record'' メイルボックスを指す

  +o  - と !! …… 前にいたメイルボックスを指す

  +o  ~ …… ホウムディレクトリを指す

  +o  = と + …… ``$folder'' メイルボックスを指す

  +o  @エイリアス名 …… このエイリアスのアドレスで識別される``既定のセイ
     ヴフォルダ''を指す


  44..88..  メメイイリリンンググリリスストトをを扱扱うう


  Mutt には、大量のメイルの取り扱いを容易にする設定オプションが二、三あ
  ります。まず最初にしなければならないのは、どのアドレスをメイリングリス
  トだとみなすか (仕組みとしてはメイリングリストでなくても構いませんが、
  これがもっともよく使われる用途です)、および、どのリストを講読している
  かを Mutt に知らせることです。これは muttrc で ``lists および
  subscribe'' コマンドを使って行ないます。

  これで Mutt は何がメイリングリストかを知っているので、できることが幾つ
  か増えました。その一つ目は、どのリストを経由してメッセイジを受信したか
  (つまり、講読中のリスト名) をインデックスメニューの画面に表示できるこ
  とです。これは同じメイルボックス内にある私用メイルとリストメイルを区別
  するのに役立ちます。 ``$index_format'' 変数の中で使う "%L" というエス
  ケイプは "To" フィールドに「リスト名」があれば "To <リスト名>" という
  文字列を返し、 "Cc" フィールドなら "Cc <リスト名>" を返します (どちら
  でもなければメイルを書いた人の名前を返します)。

  メイリングリストのメッセイジには、 "To" と "Cc" のフィールドがどんどん
  膨れ上がっていってしまうということが頻繁に見られます。ほとんどの人は、
  返信しようとするメッセイジの差出人をわざわざそうしたフィールドから削除
  したりせず、結果として同じものが複数その人に送られてしまうことになりま
  す。 ``list-reply'' 関数は、既定ではインデックスメニューとペイジャにお
  いて "L" キーに割り当てられていますが、宛先すべてにではなく既知のメイ
  リングリストのアドレスにのみ返信するので、こうしたゴミを減らす助けにな
  ります (Mail-Followup-Toで指定してある場合を除きます。以下参照)。

  Muttは Mail-Followup-To へッダもサポートしています。購読中のメイリング
  リストが宛先リストに一つでもあって、 ``$followup_to'' 変数が設定されて
  いれば、Mutt はそのメッセイジの送信時に、送り先すべてから自分を除いた
  Mail-Followup-To へッダを生成してくれます。このヘッダは、このメッセイ
  ジへのグループ返信 [group-reply] やリスト返信 [list-reply] (フォロウ
  アップ [followup] とも言う) が、そのメッセイジの元々の送り先にのみ送ら
  れるべきであって、それと別に自分へ送る必要はないということ ― 自分の分
  は購読しているメイリングリストを通して受け取るということ ― を示すもの
  です。

  逆に自分が Mail-Followup-To へッダのあるメッセイジに group-reply した
  り list-reply したりする場合にも、設定変数の ``$honor_followup_to'' が
  設定されていれば Mutt がこのへッダを考慮してくれます。この場合、list-
  reply を使うと Mail-Followup-To の返信先リストで指定されていなくても返
  信がメイリングリストへ行くようにしてくれます。

  へッダ編集が有効なときは自分で Mail-Followup-To へッダを作成できるとい
  うことを覚えておいてください。 Mutt は、送信時にこのへッダが存在しない
  場合にだけ、このへッダを自動生成するのです。



  一部のメイリングリスト管理者が使っている別の手法は、メッセイジの差出人
  ではなく、メイリングリストのアドレスを指す "Reply-To" フィールドを生成
  するというものです (訳注：日本ではこれが多いかも)。これは、差出人へ私
  的に直接返信しようとするときに問題を引き起こすかもしれません。なぜなら
  大半のメイルクライアントは、自動的に "Reply-To" フィールドのアドレスへ
  返信するからです。 Mutt は、``$reply_to'' 変数を使って、どちらのアドレ
  スに返信するか決めさせてくれます。(訳注：ask-yes か ask-no に) 設定さ
  れていると、"Reply-To" フィールドにあるアドレスを使うのかどうかを聞い
  てきて、使わないと答えると "From" フィールドのアドレスに直接返信しま
  す。この変数が設定されていない (訳注：yes の) 場合は、あれば "Reply-
  To" フィールドが使われます。

  "X-Label:" フィールドを使って、メイリングリストやリストで話題となって
  いる事柄をさらに特定することができます (あるいは単に、メッセイジへ個別
  に註釈を付けることも)。 ``$index_format'' 変数の "%y" および "%Y" エス
  ケイプを使えば "X-Label:" フィールドをインデックスに展開できますし、
  Mutt のパターン検索では "~y" 選択子を使って正規表現で "X-Label:" に検
  索をかけることができます。 "X-Label:" は標準的なへッダフィールドではあ
  りませんが、 procmail その他のメイルフィルタリングエイジェントで簡単に
  挿入できます。

  最後の点として、Mutt にはメイルボックスを``スレッド''で``整列''させる
  能力があります。スレッドとは、同じ話題でつながっているメッセイジの集ま
  りです。これは通常、木のような (訳注：枝分かれしている) 構造へとまとめ
  られ、あるメッセイジとそれに対する返信すべてが画像的に表現されます。ス
  レッド化されたニューズクライアントを使ったことがあれば、それと同じ概念
  だと思ってください。これによって流量の大きなメイリングリストの扱いが容
  易になります。なぜなら、興味がなければ簡単にスレッドごと削除することが
  でき、価値ある話題を素早く見つけられるからです。


  44..99..  配配送送状状況況通通知知 ((DDeelliivveerryy SSttaattuuss NNoottiiffiiccaattiioonn == DDSSNN)) ササポポーートト

  RFC1894 は、電子メイルメッセイジの状態に関する情報を伝達するための、一
  連の MIME コンテントタイプを定義しています。これは「受領証」と考えるこ
  とができます。現在 Berkeley sendmail 8.8.x には、どの種類の状況メッセ
  イジを返させれば良いかをメイルクライアントが要求できるような、幾つかの
  コマンドラインオプションがあります。

  これをサポートするための変数が二つあります。 ``$dsn_notify'' は、結果
  の違いによって証書を要求したりしなかったりするために使います (失敗メッ
  セイジ、配信済みメッセイジ、等)。 ``$dsn_return'' は、証書に付けて返す
  元メッセイジをどれだけ要求するか (ヘッダだけかメッセイジ全体か) です。
  DSN に関するさらに詳細な点については sendmailの man ペイジを参照してく
  ださい。


  44..1100..  PPOOPP33 ササポポーートト ((オオププシショョンン))


  Mutt は、POP3 サポートありで (_c_o_n_f_i_g_u_r_e スクリプト実行時に _-_-_e_n_a_b_l_e_-
  _p_o_p フラグを付けて) コンパイルしてあれば、リモウトの POP3 サーバ上にあ
  るメイルボックスを扱ったり、ロウカル閲覧用にメイルを取りに行ったりする
  ことができます。

  pop://POPサーバ/ というフォルダを選択することによって、リモウト POP3
  メイルボックスにアクセスできます。

  代替ポートの選択も、サーバと一緒に、つまり pop://POPサーバ:ポート/ と
  指定することによって可能です。

  フォルダごとに違うユーザ名を指定する、つまり pop://ユーザ名@POPサー
  バ[:ポート]/ と指定することもできます。

  POP3 経由だと、新着メイル情報の取得にロウカルより負担がかかります。こ
  のため、Mutt がリモウトでメイルチェックする頻度を
  ``$pop_checkinterval'' 変数で制御できます。既定値は 60 秒ごとです。

  Mutt が SSL サポートありで (_c_o_n_f_i_g_u_r_eスクリプト実行時に _-_-_w_i_t_h_-_s_s_l フ
  ラグを付けて) コンパイルしてあれば、 POP3 サーバとの通信は暗号化できま
  す。これには当然、そのサーバが SSL 暗号化通信をサポートしている必要が
  あります。 POP3/SSL でフォルダにアクセスするには pops: を使います。つ
  まり pops://[ユーザ名@]POPサーバ[:ポート]/ です。

  POP3 のメイルにアクセスする別の方法は _f_e_t_c_h_-_m_a_i_l 関数 (既定値: G) で
  す。 POP3 ホスト (``$pop_host'') に接続し、新着メイルをすべて取ってき
  て、ロウカルのスプール (``$spoolfile'') に置いてくれるのです。 Mutt は
  それ以降、そのメイルがまるでずっとロウカルにあったかのように動作しま
  す。

  メメモモ:: ロウカルのメイルボックスに全メッセイジを取って来るだけで良けれ
  ば、専門の、たとえば fetchmail のようなプログラムの使用を検討すべきで
  す。 (訳注：これは Mutt 開発者の「本体をできるだけ小さくして、よそに任
  せられるところは任せたい」という姿勢を反映しているようだ。訳者自身は
  _f_e_t_c_h_-_m_a_i_l を使っていて何の問題もない。開発者の意図としては macro
  index G !fetchmail\n のように設定すれば事足りるのだから無駄な機能だと
  いうことであろう。)


  44..1111..  IIMMAAPP ササポポーートト ((オオププシショョンン))


  IMAPサポートありで (_c_o_n_f_i_g_u_r_e スクリプト実行時に _-_-_e_n_a_b_l_e_-_i_m_a_p フラグ
  を付けて) コンパイルされていれば、 Mutt はリモウト IMAP サーバ上にある
  フォルダを扱うことができます。

  IMAP サーバの名前を imapserver とすると、 imap://imapserver/INBOX とい
  うフォルダを選択すればリモウトの受信箱 (inbox) にアクセスできます。こ
  の INBOX は、IMAP サーバ上でスプールメイルボックスを表す特別な名前で
  す。 IMAP サーバの別のメイルフォルダーにアクセスしたい場合は、そのフォ
  ルダのパスが path/to/folder なら imap://imapserver/path/to/folder とし
  ます。

  サーバと一緒に、つまり imap://imapserver:ポート/INBOX と指定することに
  よって代替ポートも指定できます。

  フォルダごとに違うユーザ名を指定することもできます。つまり imap://ユー
  ザ名@imapserver[:ポート]/INBOX です。

  Mutt が SSL サポートありで (_c_o_n_f_i_g_u_r_eスクリプト実行時に _-_-_e_n_a_b_l_e_-_s_s_l
  フラグをつけて) コンパイルしてあれば、 IMAP サーバへの接続を暗号化でき
  ます。これには当然、サーバが SSL 暗号化接続をサポートしていることも求
  められます。フォルダに IMAP/SSL を使ってアクセスするには、フォルダパス
  に imaps://[ユーザ名@]imapserver[:ポート]/path/to/folder と指定しま
  す。

  Pine 互換の書き方もサポートしています。つまり {[ユーザ
  名@]imapserver[:ポート][/ssl]}path/to/folder です。

  すべてのサーバが階層分離記号 (hierarchy separator) に / を使っているわ
  けではないことを覚えていてください。 Mutt はどの分離記号がサーバで使わ
  れているかを正しく認識し、それに応じてパスを変換してくれるはずです。

  IMAP サーバ上のフォルダを閲覧しているときに、自分が購読しているフォル
  ダだけを見るか、それともあらゆるフォルダを見るかを、 _t_o_g_g_l_e_-_s_u_b_s_c_r_i_b_e_d
  コマンドで切り換えられます。 ``$imap_list_subscribed'' 変数についても
  見てください。

  IMAP サーバ上の新着メイルを確認すると、動作が遅くなって気になることが
  あります。それで、``$mail_check'' および ``$timeout'' 変数は慎重に調整
  したいと思うことでしょう。私個人として使っているのは

  set mail_check=90
  set timeout=15




  ですが、遅いモデム回線にしては、結果は比較的良好です。

  v12.250 以前の UW サーバでメイルの格納に mbox を使っている場合は注意し
  てください。別のクライアントが同じフォルダを選ぶと接続が切断されてしま
  うと報告されています。


  44..1111..11..  フフォォルルダダブブララウウザザ


  ヴァージョン 1.2 から Mutt は IMAP サーバ上のメイルボックスの閲覧
  (browsing) をサポートしています。これはロウカルファイルブラウザとほと
  んど同じですが、以下のような違いがあります。

  +o  ファイルの属性の代わりに "IMAP" という文字列を表示します。これの後
     ろに "+" 記号がつく場合がありますが、これはその中にメッセイジとサブ
     フォルダの両方が含まれていることを意味します。 Cyrus 系サーバの場合
     にはしばしばフォルダの中にメッセイジとサブフォルダが入っています。

  +o  メッセイジとサブフォルダの両方が含まれている場合、select-entry (既
     定では enter に割り当てられている) のキーを押すとそのサブフォルダの
     中に下りていってしまいます。もしそのフォルダ自体のメッセイジを見た
     い場合には (既定ではスペイス に割り当てられている) view-file を使わ
     なければなりません。

  +o  メイルボックスを消すには delete-mailbox コマンド (既定では d) を使
     います。また、メイルボックスの購読 subscribe と、購読解除
     unsubscribe もできます (通常は s と u に割り当てられています)。


  44..1111..22..  認認証証


  Mutt は IMAP サーバに関して四つの認証方法をサポートしています。 SASL,
  GSSAPI, CRAM-MD5, LOGIN です (かわいそうな exchange ユーザのために
  NTLM 認証を追加する、Grant Edwards によるパッチがありますが、まだメイ
  ントゥリーには統合されていません)。また疑似プロトコル ANONYMOUS のサポ
  ートもあります。これは公開 IMAP サーバにアカウントなしでログインするた
  めのものです。ANONYMOUS を使うには、単にユーザ名を入れないでおくか、ま
  たは "anonymous" にします。

  SASL は特殊な、包括的認証方法です。自分のホストとサーバ両方で利用可能
  かつ最も堅牢な方法を、いくつかのプロトコル (GSSAPI, CRAM-MD5,
  ANONYMOUS, DIGEST-MD5 を含む) の中から、選びます。これらのうちのいくつ
  かの方法 (DIGEST-MD5 や、多分 GSSAPI も) を使うと、セッション全体が暗
  号化され、そこかしこにいるネットワーク覗きの目から見えなくなります。利
  用可能なら、これが最善の選択肢です。 SASL を使うには、システムに Cyrus
  SASL ライブラリがインストールされていて、かつ、_-_-_w_i_t_h_-_s_a_s_l 付きで mutt
  をコンパイルする必要があります。

  Mutt は、コンパイル時に組み込まれ、かつサーバ側の利用可能な方法をすべ
  て試していきます。順番は SASL, ANONYMOUS, GSSAPI, CRAM-MD5, LOGIN で
  す。

  認証を制御する変数がいくつかあります。

  +o  ``$imap_user'' ― IMAP サーバへ認証を要求するユーザ名です。すべての
     認証方法に使われます。これはメイルボックスのパスに明示的に含まれる
     ユーザ名 (つまり {ユーザ@ホスト} の形のメイルボックスを使うこと) に
     よって上書きされます。
  +o  ``$imap_pass'' ― パスワードです。パスワードを必要とするすべての認
     証方法に使います。

  +o  ``$imap_authenticators'' ― 試行順序にコロンで区切った、 IMAP 認証
     方法リストです。設定されていると、この変数が mutt の既定値 (あらゆ
     る方法を上記の順に試す) を上書きします。


  44..1122..  複複数数のの IIMMAAPP//PPOOPP アアカカウウンントトをを使使うう ((オオププシショョンン))


  いくつもの IMAP や POP サーバにアカウントを持っていると、認証の設定
  は、面倒くさくて間違いやすいものですよね。そんなあなたに account-hook
  コマンドが役に立ちます。このフックは folder-hook コマンドと同じような
  働きをするものですが、開くときだけではなく、リモウトのメイルボックスに
  アクセスするたびに呼び出されます (フォルダブラウザ内も含みます)。

  例:



       account-hook . 'unset imap_user; unset imap_pass; unset tunnel'
       account-hook imap://host1/ 'set imap_user=me1 imap_pass=foo'
       account-hook imap://host2/ 'set tunnel="ssh host2 /usr/libexec/imapd"'





  44..1133..  UURRLL にに対対ししてて WWWWWW ブブララウウザザをを起起動動すするる ((外外部部ココママンンドド))

  メイルに URL (_u_n_i_f_i_e_d _r_e_s_o_u_r_c_e _l_o_c_a_t_o_r = WWW 空間における住所。たとえ
  ば _h_t_t_p_:_/_/_w_w_w_._m_u_t_t_._o_r_g_/) が含まれているとき、そうした URL をすべて含む
  メニューが出てきて、一つ選ぶと WWW ブラウザが起動すると効率が良いです
  よね。この機能は外部プログラムの urlview と以下の設定コマンドによって
  提供されています。 urlview は ftp://ftp.mutt.org/mutt/contrib/で手に入
  ります。


       macro index \cb |urlview\n
       macro pager \cb |urlview\n





  55..  MMuutttt のの MMIIMMEE ササポポーートト

  Mutt をテキストモウド MIME MUA として最上のものとするため、これまで多
  大な努力が払われてきました。眼識ある MIME ユーザの要求する機能と標準へ
  の準拠のために、可能な限りのあらゆる努力が払われてきました。 Mutt の
  MIME 設定に際しては、二つの外部ファイルがあります。一つは mime.types
  ファイルで、これにはファイル拡張子と IANA MIME タイプとの対応が書いて
  あります。もう一つは mailcap ファイルで、それぞれの MIME タイプを扱う
  ために使う外部コマンドが指定されています。


  55..11..  MMuutttt でで MMIIMMEE をを使使うう

  Mutt は三つの場面において、すなわちペイジャ (メイルを閲覧するとき)、
  ファイル添付メニュー、コンポウズメニューで MIME を扱います。





  55..11..11..  ペペイイジジャャでで MMIIMMEE メメッッセセイイジジをを閲閲覧覧すするる

  インデックスでメイルを選択してペイジャで閲覧するとき、 Mutt はメイルを
  テキスト表現へとデコウドします。Mutt には、 text/plain, text/enriched,
  message/rfc822, message/news といった、数々の MIME タイプのサポート機
  能が内蔵されています。輸出制限ヴァージョンの Mutt では、それに加えて
  PGP/MIME や application/pgp といった PGP MIME タイプを理解することもで
  きます。 (訳注：1.5.6i のように「i」が付いていれば PGP 機能が付いてい
  るはず。)

  Mutt は添付ファイルがあることを二、三行の説明で表します。こんな形式で
  す。


       [-- Attachment #1: Description --]
       [-- Type: text/plain, Encoding: 7bit, Size: 10000 --]




  Description の部分は添付ファイルに関する説明やファイル名で、 Encoding
  は 7bit/8bit/quoted-printable/base64/binary のどれかです。

  Mutt が扱うことのできない MIME タイプであれば次のようなメッセイジを表
  示します。


       [-- image/gif is unsupported (use 'v' to view this part) --]





  55..11..22..  添添付付フファァイイルルメメニニュューー

  既定で "v" に割り当てられている view-attachments は、メッセイジの添付
  ファイルメニューを表示するものです。添付ファイルメニューにはメッセイジ
  の添付ファイル一覧が表示され、このメニューから添付ファイルを保存、印
  刷、パイプ、削除、閲覧することができます。"tag-prefix" を使えば、複数
  の添付ファイルを一度に処理することも可能です。また、このメニューから
  メッセイジに返信することもできます。その場合は、カーソルのある (もしく
  はタグ付けされている) 添付ファイルのみ返信に引用されます。添付ファイル
  は、テキストとして閲覧したり、 mailcap のヴューワ定義を使って閲覧する
  こともできます。

  また message/rfc822 タイプのファイルには、メッセイジ関連の通常の関数
  (たとえば ``resend-message'', reply, forward など) も使えます。

  さらに詳しい情報は、添付ファイルメニューでのヘルプをご覧下さい。


  55..11..33..  ココンンポポウウズズメメニニュューー

  コンポウズメニューはメッセイジを送る前に現れるメニューのことです。この
  メニューでは宛先のリストを編集できます。題名を編集できます。その他にも
  メッセイジの様々な側面を編集することができます。このメニューには、メッ
  セイジの添付ファイル (本文も含む) の一覧が表示されます。一つの添付ファ
  イル、もしくはタグ付けされた複数の添付ファイルを、印刷したり、フィルタ
  にかけたり、パイプに通したり、編集したり、作成したり、もう一度確認のた
  めに閲覧したり、名前を変更したりすることができます。また、添付ファイル
  に関する情報を変更することもできます。特に注目すべきなのは、content
  type, エンコウド方式、内容説明を変更できるという点です。

  添付ファイルは次のように表示されます。


  -   1 [text/plain, 7bit, 1K]             /tmp/mutt-euler-8082-0 <no description>
      2 [applica/x-gunzip, base64, 422K]   ~/src/mutt-0.85.tar.gz <no description>



  左端の "-" は、そのファイルがメッセイジの送信 (または延期や中止) の後
  に削除されるということを示しています。この切替は toggle-unlink コマン
  ド (既定値: u) でおこなえます。次の欄 は MIME content-type を示してお
  り、 edit-type コマンド (既定値: ^T) で変更できます。その次の欄はファ
  イルのエンコウド方式を示しています。エンコウド (つまり変換) をすること
  によって、バイナリのメッセイジを 7bit 通信で配送することができるように
  なります。変更は edit-encoding コマンド (既定値: ^E) です。次の欄は
  ファイルサイズです。キロバイトかメガバイト単位に丸めてあります。次の欄
  はファイル名で、変更には rename-file コマンド (既定値: R) を使います。
  最後の欄は添付ファイルの内容説明です。 edit-description コマンド (既定
  値: d) で変更できます。


  55..22..  mmiimmee..ttyyppeess  にによよるる MMIIMMEE タタイイププ設設定定

  メイルにファイルを添付すると、Mutt は個人用の mime.types ファイルを
  ${HOME}/.mime.types に探しに行き、該当するものがなければ、次にシステム
  の mime.types ファイルを /usr/local/share/mutt/mime.types か
  /etc/mime.types に探しに行きます。

  mime.types ファイルを構成する各行には、 MIME タイプとスペイス区切りの
  拡張子のリストが書かれています。



       application/postscript          ps eps
       application/pgp                 pgp
       audio/x-aiff                    aif aifc aiff




  サンプルの mime.types が Mutt の配布物に付いています。使いたい MIME タ
  イプはその中にほとんど含まれているはずです。

  添付されたファイルの拡張子から MIME タイプを判断できなかったとき、
  Mutt はファイルの中身を見に行きます。ファイルにバイナリ情報がなければ
  プレインテキストだとみなして text/plain にします。バイナリ情報を含んで
  いれば application/octet-stream にします。 Mutt が添付ファイルに付けた
  MIME タイプは、添付ファイルメニューから edit-type コマンド (既定値:
  ^T) を使って変更できます。さて、この MIME タイプは、メジャータイプの後
  に "/" とサブタイプの付いたものです。メジャータイプは application,
  text, image, video, audio, model の 6 種類が、インターネットでの各種議
  論の末に承認されています。mime.types ファイルに適当な項目があるなら
  ば、 Mutt はこれらすべてを認識することができます。また、その他のメジャ
  ータイプも認識でき、例えば chemical タイプという、分子モデリング業界で
  広く使われているタイプなども使うことができます。これは様々な形式の分子
  デイタを種々の分子ヴューワに渡すためのものです。ただし、未承認の MIME
  タイプを使うのは、そういう添付ファイルが来ることを相手がわかっている場
  合だけにすべきです。


  55..33..  mmaaiillccaapp  にによよるる MMIIMMEE ヴヴュューーワワのの設設定定

  Mutt は、MIME 設定に関する RFC 1524 をサポートしています。特に RFC
  1524 の Appendix A で規定されている Unix 用フォーマットをサポートして
  います。このファイルフォーマットは一般的に mailcap フォーマットと呼ば
  れます。多くの MIME 対応プログラムがこの mailcap フォーマットを利用し
  ているので、すべてのプログラムでのすべての MIME タイプの扱いを一か所で
  指定することができます。このフォーマットを利用しているプログラムには、
  Netscape, XMosaic, lynx, metamail などがあります。
  Mutt 単体では扱えない様々な MIME タイプを扱うために、 Mutt は外部の設
  定ファイルを解析して、扱うことのできる外部プログラムを探します。設定
  ファイルを検索する文字列はコロン区切りリストで、既定値はこうなっていま
  す。


       ${HOME}/.mailcap:/usr/local/share/mutt/mailcap:/etc/mailcap:/etc/mailcap:/usr/etc/mailcap:/usr/local/etc/mailcap




  $HOME はホウムディレクトリです。

  metamail が普通 mailcap ファイルを /usr/local/etc/mailcap にインストー
  ルします。これに基本的な項目がある程度含まれています。


  55..33..11..  mmaaiillccaapp フファァイイルルのの基基本本

  mailcap ファイルの各行はコメント、空行、定義のいずれかです。

  コメント行は # 文字とそれに続く任意の文字で構成されます。

  空行は空の行です。

  定義行は、content type 一つと閲覧コマンド一つ、そして任意の数の付加的
  な欄で構成されています。定義行の各欄はセミコロン記号 ";" で分けられて
  います。

  content type は MIME 標準の「タイプ/サブタイプ」方式で指定します。例え
  ば、text/plain, text/html, image/gif等です。それに加えて、mailcap フォ
  ーマットには二種類のワイルドカードもあります。一つは特殊なサブタイプ
  '*' を使う方法で、もう一つは暗にワイルドタイプを示すものとして、メジャ
  ータイプしか書かないという方法です。例えば、image/* と video は、それ
  ぞれ image タイプと video タイプの全体に相当します。

  閲覧コマンドは、特定のタイプを閲覧するための Unix コマンドです。二種類
  のコマンドがサポートされています。既定では、その MIME メッセイジの内容
  を標準入力でコマンドに渡します。この動作を変更するには、閲覧コマンドの
  引数に %s を使います。こうすると Mutt は MIME メッセイジの内容を一時
  ファイルに保存し、 %s を一時ファイルの名前に置き換えて閲覧コマンドを呼
  び出します。どちらの場合も Mutt は端末を閲覧プログラムに明け渡し、終了
  するまで待ちます。終了時、一時ファイルは (あれば) 削除されます。

  それで、最も単純な形として、text/plain のメッセイジを外部ペイジャ more
  に標準入力で渡すことができます。


       text/plain; more




  もしくは、メッセイジをファイルとして渡すこともできます。


       text/plain; more %s




  lynx を使って対話的に text/html のメッセイジを閲覧したいと思うかもしれ
  ません。



  text/html; lynx %s




  その場合、lynx は標準入力からのファイル閲覧をサポートしていないので %s
  構文を使わなければなりません。注注意意:: 古いヴァージョンの _l_y_n_x には、一
  部、「_t_e_x_t_/_h_t_m_l にまで _m_a_i_l_c_a_p ファイルをチェックしてしまう」というバ
  グを含むものがあります。その場合、ヴューワとして _l_y_n_x を呼ぶように書い
  てあってもそのまま実行してしまいます。すると、いつまでも自分が自分を呼
  び出し続けることになってしまいます。

  一方、lynx を対話的に使いたいのではなく、単に text/html を text/plain
  に変換したいということもあるでしょう。そのときはこうします。


       text/html; lynx -dump %s | more




  おそらく、text/html ファイルの閲覧には lynx を使いたいものの、ほかの
  text タイプにはすべてペイジャを使いたいということもあるでしょう。その
  場合はこういう書き方ができます。


       text/html; lynx %s
       text/*; more




  これは mailcap ファイルのもっとも単純な形式です。


  55..33..22..  mmaaiillccaapp のの安安全全なな使使いい方方

  一般的に言って、MIME パラメータに埋め込まれたメタ文字を解釈してシェル
  に渡すことには、セキュリティ上の問題を引き起こす危険性があります。
  Mutt は %s 構文の展開の際に正しくパラメータをくくろうとしますし、危険
  な文字を別のものに置き換えようとします。 ``mailcap_sanitize'' 変数を見
  てください。

  Mutt が mailcap からプログラムを呼び出す手順はおそらく安全ですが、他の
  アプリケイションも mailcap を読みますし、中にはそれほど注意を払わない
  ものもあるかも知れません。そこで、次のようなルールに注意を払うべきで
  す。

  シェルクウォウトに _%展開を入れない。 シングルクウォウト (') やダブルク
  ウォウト (") で囲ってはいけません。 (訳注：展開後にスペイスが入っても
  一つの引数として認識されるようにクウォウトしたいと思うかもしれません
  が、その必要はありません。) その辺りのことは Mutt がきちんとやってくれ
  ますし、 mailcap を使う他のプログラムも同じはずです。バッククウォウト
  を使った展開の中にも入れないでください。 eval 文には特別な注意が必要で
  す。できればまったく使わないでください。おかしな挙動をクウォウトで直そ
  うとしても、新しい別の水漏れができるだけです。クウォウトを使っている限
  り、正しい方法など最初から存在しないのです。

  どうしても %展開の値がクウォウトやバッククウォウトの中に入っていなけれ
  ばならない場合には、まずその値をシェル変数に代入して、その変数を使うよ
  うにしてください。次の例のようにです (バッククウォウト展開の中で
  $charset を使っていますが、これは安全です。そこからさらに展開されるわ
  けではないからです)。



  text/test-mailcap-bug; cat %s; copiousoutput; test=charset=%{charset} \
          && test "`echo $charset | tr '[A-Z]' '[a-z]'`" != iso-8859-1





  55..33..33..  一一歩歩進進んんだだ mmaaiillccaapp のの使使いい方方



  55..33..33..11..  付付加加的的なな欄欄

  必須である content-type と閲覧コマンドの欄のほかに、セミコロン ';' で
  区切った欄を追加して、各種フラグを付けたりオプションを設定したりするこ
  とができます。 Mutt は以下の付加的な欄をサポートしています。

     ccooppiioouussoouuttppuutt
        このフラグは、そのコマンドがテキストを標準出力へ (もしかすると大
        量に) 渡すということを Mutt に教えます。このとき Mutt はペイジャ
        (内部ペイジャ、もしくは pager 変数で決めた外部ペイジャ) を起動し
        て閲覧コマンドの出力を受け取ります。このフラグがなければ、そのコ
        マンドは対話的に操作できるものとみなされます。これを使って、「基
        本的な使い方」の lynx -dump の例における more へのパイプを書き換
        えることができます。


          text/html; lynx -dump %s ; copiousoutput




     こうすれば lynx が text/html の出力を text/plain 変換し、 Mutt が標
     準のペイジャを使ってその結果を表示することになります。

     nneeeeddsstteerrmmiinnaall
        Mutt は ``auto_view'' で添付ファイルを閲覧する時に、このフラグに
        合わせて ``$wait_key'' 変数を扱います。終了時にキーを押すよう求
        めるかどうかは、閲覧に対話的な外部プログラムを使っており、かつ該
        当する mailcap 項目に _n_e_e_d_s_t_e_r_m_i_n_a_l フラグがあるときにのみ、
        ``$wait_key'' とプログラムの終了値から決定することになります。そ
        のほかの場合はすべて、キーを催促せずに終了します。

     ccoommppoossee==<<ccoommmmaanndd>>
        このフラグは、特定の MIME タイプの添付ファイルを新規作成する時に
        使うコマンドを指定します。コンポウズメニューにおいてサポートされ
        ています。

     ccoommppoosseettyyppeedd==<<ccoommmmaanndd>>
        このフラグも、その MIME タイプの添付ファイルを新規作成するコマン
        ドを指定するものです。compose コマンドとの違いは、そのデイタ内に
        標準的な MIME ヘッダが含まれていることが期待されているという点で
        す。これを使って、パラメータ、ファイル名、内容説明などを指定でき
        ます。 Mutt はこれをコンポウズメニューでサポートしています。

     pprriinntt==<<ccoommmmaanndd>>
        特定の MIME タイプの印刷に使うコマンドを指定します。 Mutt では、
        ファイル添付メニューとコンポウズメニューでサポートされています。

     eeddiitt==<<ccoommmmaanndd>>
        このフラグは、特定の MIME タイプの編集に使うコマンドを指定しま
        す。 Mutt はこのコマンドをコンポウズメニューでサポートしており、
        新しい添付ファイルを作成する時にも使います。 Mutt は既定では
        editor 変数に定義されたエディタをテキストの添付ファイルに使用し
        ます。

     nnaammeetteemmppllaattee==<<tteemmppllaattee>>
        閲覧コマンド欄に %s で示されるファイルのファイル名を指定します。
        ある種のプログラムは、ファイル名に特定の拡張子がないと、正しく閲
        覧してくれなかったりします。例えば lynx は、ファイル名が .html
        で終わっている場合にのみ text/html であると解釈します。それ
        で、lynx を text/html ヴューワに指定するには次のように mailcap
        に書くことになるでしょう。


          text/html; lynx %s; nametemplate=%s.html




     tteesstt==<<ccoommmmaanndd>>
        その項目を使うべきなのかどうか確認するためのコマンドを指定しま
        す。そのコマンドは、次の節にあるコマンド展開ルールに沿って定義し
        ます。コマンドが 0 を返した場合にはテスト合格ですから、Mutt はそ
        の項目を使います。 0 以外の値を返した場合にはテスト失敗で、Mutt
        はさらに他の正しい項目を探し続けます。注注意意:: まず _c_o_n_t_e_n_t_-_t_y_p_e が
        合致していた場合にのみテストが実行されます。さて、例えば


          text/html; netscape -remote 'openURL(%s)' ; test=RunningX
          text/html; lynx %s




     上の例で Mutt は RunningX を実行します。このプログラムは X ウィンド
     ウマネジャが動いていれば 0 を返し、そうでなければ 0 以外を返すとい
     うものです。RunningX が 0 を返せば、Mutt は netscape を呼び出して
     text/html のファイルを表示させます。もし 0 を返さなければ、次の項目
     に移って lynx に表示させます。


  55..33..33..22..  検検索索順順序序

  ある項目について mailcap ファイルの中から検索する際、Mutt はその目的に
  最も合う項目を見付けようとします。例えば image/gif を印刷しようとして
  いるとき、次のような項目が mailcap ファイルにあれば、 print コマンドの
  あるものを探すので、


       image/*;        xv %s
       image/gif;      ; print= anytopnm %s | pnmtops | lpr; \
                       nametemplate=%s.gif




  image/* の項を飛び越して、print コマンドのある image/gifの項目を使用し
  ます。

  さて、これを ``auto_view による自動閲覧'' と組み合わせて、添付ファイル
  閲覧のコマンドを二つ指定することもできます。一つは自動的に閲覧するため
  のコマンド、もう一つは添付ファイルメニューから閲覧する対話的なコマンド
  です。そのうえ、test 機能を使えば、どのヴューワを使うかを自分の環境に
  合わせて対話的に決定できます。


       text/html;      netscape -remote 'openURL(%s)' ; test=RunningX
       text/html;      lynx %s; nametemplate=%s.html
       text/html;      lynx -dump %s; nametemplate=%s.html; copiousoutput


  Mutt は、``auto_view の自動閲覧'' には三番目の項目を選択します。copi-
  ousoutput タグがついているからです。対話的な閲覧には、まずプログラム
  RunningX を走らせて、一番目の項目を使うかどうか調べます。プログラムが
  0 以外を返せば、二番目の項目を使って対話的閲覧をおこないます。


  55..33..33..33..  ココママンンドド展展開開

  mailcap ファイルに定義されている各種のコマンドは system() 関数を通して
  /bin/sh シェルに渡されます。コマンドは、/bin/sh -c に渡される前に解析
  されて、 Mutt からの情報をもとに各種の特殊パラメータが展開されます。
  Mutt が展開するキーワードは以下の通りです。

     %%ss 「mailcap の基本」の節で見たように、この変数はファイル名に展開さ
        れます。ファイル名は、それを呼び出している側のプログラム (訳注：
        ここでは Mutt) によって指定されます。このファイルには、閲覧/印
        刷/編集するメッセイジ内容が含まれています。もしくは、ファイルを
        作成するプログラムがそこに結果を保存します。補足として言っておき
        ますが、このキーワードを使うと、 Mutt はメッセイジの内容を標準入
        力からは渡さなくなります。

     %%tt Mutt は %t をテキスト表現へ展開します。メッセイジの content type
        を、mailcap 定義における最初のパラメータと同じ形式で表現したもの
        です。つまり text/html や image/gif という形式になります。

     %%{{<<パパララメメーータタ>>}}
        Mutt はこれを、メイルの Content-Type: 行における特定のパラメータ
        の値に展開します。例えば、メイルに次のような行があるとします。


          Content-Type: text/plain; charset=iso-8859-1




     すると Mutt は %{charset} を iso-8859-1 に展開します。 metamail の
     既定 mailcap ファイルでは、この機能を使って文字セットを調べ、xterm
     を正しい文字セットで起動してメイルを閲覧できるようになっています。

     \\%% これは % に置き換えられます。

  Mutt は RFC 1524 で定義されている %F と %n キーワードを今のところサポ
  ートしていません。これらのパラメータの主にマルティパートメッセイジのた
  めのものですが、マルティパートは Mutt 内部で扱われるからです。


  55..33..44..  mmaaiillccaapp フファァイイルルのの例例

  下の mailcap ファイルはとても単純かつ標準的なものです。

  ______________________________________________________________________
  # 常に X を実行していることにします :)
  video/*;        xanim %s > /dev/null
  image/*;        xv %s > /dev/null

  # 常に Netscape を実行していることにします (今よりメモリがあればそうするでしょうから)
  text/html;      netscape -remote 'openURL(%s)'
  ______________________________________________________________________



  下の mailcap ファイルでは、たくさんの例を示しています。




  ______________________________________________________________________
  # 動画には、すべて xanim を使います
  # xanim は起動時にヘッダを出力しますが、見なくて済むように
  # /dev/null へ送ってしまいます
  video/*;        xanim %s > /dev/null

  # HTML は、実行中の netscape に remote オプションで送ります
  text/html;      netscape -remote 'openURL(%s)'; test=RunningNetscape

  # netscape を実行していなくて X を実行しているときは
  # そのファイルに対して netscape を起動します
  text/html;      netscape %s; test=RunningX

  # それ以外のときは lynx を使ってテキストで閲覧します
  text/html;      lynx %s

  # こちらは text/html を text/plain に変換するものです
  text/html;      lynx -dump %s; copiousoutput

  # enscript を使ってテキストを二段で印刷します
  text/*;         more %s; print=enscript -2Gr %s

  # netscape は、jpeg を自分で表示するためにフラグを付けます
  image/jpeg;xv %s; x-mozilla-flags=internal

  # X 実行中の画像閲覧には xv を使います
  # なお、ここでは \ を使って行をのばし、画像のエディタも設定しています
  image/*;xv %s; test=RunningX; \
          edit=xpaint %s

  # netpbm ツールを使って画像をテキストに変換します
  image/*;  (anytopnm %s | pnmscale -xysize 80 46 | ppmtopgm | pgmtopbm | pbmtoascii -1x2 ) 2>&1 ; copiousoutput

  # excel の表計算ファイルは NT マシンに送ります
  application/ms-excel; open.pl %s
  ______________________________________________________________________




  55..44..  MMIIMMEE 自自動動閲閲覧覧

  mailcap ファイルに指定されている MIME のヴューワで添付ファイルを閲覧す
  るよう Mutt に明示的に言う以外に、ペイジャの中で MIME 添付ファイルを自
  動的に閲覧する機能もあります。

  機能させるには、mailcap ファイルで copiousoutput オプションを使って
  ヴューワを指定しなくてはなりません。そのヴューワが対話的コマンドではな
  いということを指示するためです。普通は、ペイジャで閲覧できるようなテキ
  スト表現へと添付ファイルを変換するためにもこの項目を使います。

  それから auto_view という muttrc のコマンドを使って、自動的に閲覧した
  い content-type を羅列します。

  例えば次のように auto_view を指定しているとします。


       auto_view text/html application/x-gunzip application/postscript image/gif application/x-tar-gz




  以下のような mailcap 項目を使えば、こうした添付ファイルを自動的に閲覧
  できます。


  text/html;      lynx -dump %s; copiousoutput; nametemplate=%s.html
  image/*;        anytopnm %s | pnmscale -xsize 80 -ysize 50 | ppmtopgm | pgmtopbm | pbmtoascii ; copiousoutput
  application/x-gunzip;   gzcat; copiousoutput
  application/x-tar-gz;   gunzip -c %s | tar -tf - ; copiousoutput
  application/postscript; ps2ascii %s; copiousoutput




  "unauto_view" を使えば、以前に指定した項目を自動閲覧リストから削除でき
  ます。 message-hook と一緒に使うなら、サイズ等に基づいた自動閲覧もでき
  ます。 "unauto_view *" は、指定した項目をすべて削除します。


  55..55..  MMIIMMEE MMuullttiippaarrtt//AAlltteerrnnaattiivvee

  Mutt には、multipart/alternative のうち、どのタイプの添付ファイルを表
  示するか決定するための発見的手法があります。まず最初に
  alternative_order リストを調べて、選べるタイプのなかで一番望ましいとさ
  れているものがあればそれに決めます。 alternative_order リストには複数
  の MIME タイプが順に並べられます。これには明示的および暗示的なワイルド
  カードのサポートも付いています。例えばこうです。


       alternative_order text/enriched text/plain text application/postscript image/*




  次に Mutt は、いずれかのタイプが ``auto_view'' で定義されていないかど
  うかを調べ、それを使います。それでもだめなら text タイプを探します。最
  終手段としては、扱い方のわかるタイプが一つでもないかどうかと探します。

  MIME タイプを alternative_order リストから削除するには、
  unalternative_order コマンドを使います。


  55..66..  MMIIMMEE 調調査査

  Mutt の mime_lookup リストは、mailcap の項目に従って扱うべきではない
  MIME タイプを指定するものです。このオプションは、 application/octet-
  stream のようなバイナリのタイプを取り扱うように設計されています。添付
  ファイルの MIME タイプが mime_lookup に指定されているときは、そのファ
  イル名の拡張子を mime.types ファイルの拡張子のリストと見比べて、拡張子
  に対応する MIME タイプを使って、mailcap にあるルールや他の指定された設
  定オプション (たとえば auto_view) に従った処理をします。一般的な使い方
  はこうです、


       mime_lookup application/octet-stream application/X-Lotus-Manuscript




  なお、unmime_lookup コマンドを使えば、すでにシステムの muttrc 等で設定
  されている特定の MIME タイプに対してこの機能を適用しないようにすること
  もできます。


  66..  早早見見表表

  66..11..  ココママンンドドラライインンオオププシショョンン

  引数なしで mutt だけ実行すると、Mutt はスプールメイルボックスを読みに
  行きます。しかし、コマンドラインから指定してやることで、他のメイルボッ
  クスを読んだりメイルを送ったりすることも可能です。
       -A      エイリアスを展開
       -a      メッセイジにファイルを添付
       -b      ブラインドカーボンコピー (BCC) アドレスを指定
       -c      カーボンコピー (Cc) アドレスを指定
       -e      設定コマンドを指定して、初期化ファイルを読んだ後に実行
       -f      読み込むメイルボックスを指定
       -F      初期化コマンドを読むファイルとして別のものを指定
       -h      コマンドラインオプションについてのヘルプを表示
       -H      下書きファイルを指定して、そこからヘッダと本文を読み出す
       -i      作成メッセイジに含めるファイルを指定
       -m      既定のメイルボックスの種類を指定
       -n      システムの Muttrc を読まない
       -p      延期していたメッセイジを呼び出す
       -Q      設定変数を問い合わせる
       -R      メイルボックスを読み出し専用で開く
       -s      題を指定 (空白を含むときは引用符で囲むこと)
       -v      ヴァージョン番号とコンパイル時の設定を表示
       -x      mailx(1) のコンポウズモウドを真似る
       -y      mailboxes コマンドで指定されたファイルのメニューを表示
       -z      メイルボックスにメッセイジが存在しないときはすぐ終了
       -Z      新着メッセイジのある最初のフォルダを開くが、なければすぐ終了




  メイルボックス内のメッセイジを読むには、こうします。

  mutt [ -nz ] [ -F _m_u_t_t_r_c ] [ -m メイルボックスの種類 ] [ -f メイルボッ
  クス ]

  新規にメッセイジを作成するには、こうします。

  mutt [ -n ] [ -F _m_u_t_t_r_c ] [ -a 添付ファイル ] [ -c _C_Cアドレス ] [ -i
  引用ファイル ] [ -s 題名 ] アドレス [ アドレス ... ]

  Mutt は、準備しておいたメッセイジを送信する "batch" モウドもサポートし
  ています。単に、送信したいファイルから入力へリダイレクトしてください。
  例えば、

  mutt -s "data set for run #2" professor@bigschool.edu < ~/run2.dat

  このコマンドは、メッセイジを "professor@bigschool.edu" に "data set
  for run #2" という題で送信します。そのメッセイジの本文にはファイル
  "~/run2.dat" の内容が入ります。


  66..22..  設設定定ココママンンドド

  以下が、Mutt の理解するコマンドです。


  +o  ``account-hook'' パターン コマンド

  +o  ``alias'' キー アドレス [ , アドレス, ... ]

  +o  ``unalias'' [ * | キー ... ]

  +o  ``alternates'' 正規表現 [ 正規表現 ... ]

  +o  ``unalternates'' [ * | 正規表現 ... ]

  +o  ``alternative_order'' _M_I_M_E [ _M_I_M_E ... ]

  +o  ``unalternative_order'' _M_I_M_E [ _M_I_M_E ... ]


  +o  ``auto_view'' _M_I_M_E [ _M_I_M_E ... ]

  +o  ``unauto_view'' _M_I_M_E [ _M_I_M_E ... ]

  +o  ``bind'' 使う場面 キー 関数

  +o  ``charset-hook'' 別名 文字セット

  +o  ``color'' 対象 前景 背景 [ 正規表現 ]

  +o  ``uncolor'' _i_n_d_e_x パターン [ パターン ... ]

  +o  ``exec'' 関数 [ 関数 ... ]

  +o  ``fcc-hook'' パターン メイルボックス

  +o  ``fcc-save-hook'' パターン メイルボックス

  +o  ``folder-hook'' パターン コマンド

  +o  ``hdr_order'' ヘッダ [ ヘッダ ... ]

  +o  ``unhdr_order'' ヘッダ [ ヘッダ ... ]

  +o  ``iconv-hook'' 文字セット ロウカル文字セット

  +o  ``ignore'' パターン [ パターン ... ]

  +o  ``unignore'' パターン [ パターン ... ]

  +o  ``lists'' 正規表現 [ 正規表現 ... ]

  +o  ``unlists'' 正規表現 [ 正規表現 ... ]

  +o  ``macro'' メニュー キー 操作内容 [ 説明 ]

  +o  ``mailboxes'' ファイル名 [ ファイル名 ... ]

  +o  ``mbox-hook'' パターン メイルボックス

  +o  ``message-hook'' パターン コマンド

  +o  ``mime_lookup'' _M_I_M_E [ _M_I_M_E ... ]

  +o  ``unmime_lookup'' _M_I_M_E [ _M_I_M_E ... ]

  +o  ``mono'' 属性 [ 正規表現 ]

  +o  ``unmono'' _i_n_d_e_x パターン [ パターン ... ]

  +o  ``my_hdr'' 文字列

  +o  ``unmy_hdr'' フィールド [ フィールド ... ]

  +o  ``crypt-hook'' パターン 鍵_I_D

  +o  ``push'' 文字列

  +o  ``reset'' 変数 [変数 ... ]

  +o  ``save-hook'' 正規表現 ファイル名

  +o  ``score'' パターン 値

  +o  ``unscore'' パターン [ パターン ... ]

  +o  ``send-hook'' 正規表現 コマンド

  +o  ``set'' [no|inv]変数[=値] [ 変数 ... ]

  +o  ``unset'' 変数 [変数 ... ]

  +o  ``source'' ファイル名

  +o  ``subscribe'' アドレス [ アドレス ... ]

  +o  ``unsubscribe'' アドレス [ アドレス ... ]

  +o  ``toggle'' 変数 [変数 ... ]

  +o  ``unhook'' フック


  66..33..  設設定定変変数数




  66..33..11..  aabboorrtt__nnoossuubbjjeecctt

  Type: quadoption
  Default: ask-yes


  _y_e_s に設定されていると、メッセイジ作成時の題名入力に対して題が与えられ
  なかったときに、作成が中止される。 _n_o に設定されていると、題がなくても
  中止されない。



  66..33..22..  aabboorrtt__uunnmmooddiiffiieedd

  Type: quadoption
  Default: yes


  _y_e_s に設定されていると、メッセイジ本文の編集後にファイルへの変更がなけ
  れば作成を自動終了する (このチェックはそのファイルの最初の編集後にのみ
  発生する)。 _n_o に設定されていると、どんなときも作成が中止されない。



  66..33..33..  aalliiaass__ffiillee

  Type: path
  Default: "~/.muttrc"


  ``create-alias'' 関数で作成されたエイリアスを保存する既定ファイル。

  注注意意:: Mutt は自動でこのファイルを source するわけではない。明示的に
  ``source'' コマンドを使用して実行しなくてはならない。(訳注：このファイ
  ルには alias コマンドが羅列してあるだけだから「実行」するのである)



  66..33..44..  aalliiaass__ffoorrmmaatt

  Type: string
  Default: "%4n %2f %t %-10a   %r"


  エイリアスメニューに表示されるデイタの書式を指定する。次の printf(3)
  式のシークウェンスが利用できる。



     %%aa エイリアス名

     %%ff フラグ - 現時点では、削除予定のエイリアスに "d" が付くだけ

     %%nn インデックス番号

     %%rr 展開後のアドレス

     %%tt 使用するためにタグ付けされていることを表す文字



  66..33..55..  aallllooww__88bbiitt

  Type: boolean
  Default: yes


  メイル送信時に Quoted-Printable か Base64 を使って 8 ビットデイタを 7
  ビットに変換するかどうかを制御する。



  66..33..66..  aallllooww__aannssii

  Type: boolean
  Default: no


  メッセイジ中の ANSI 色コウド (と、リッチテキストメッセイジの色タグ) を
  解釈するかどうかを制御する。こうしたコウドを含むメッセイジは稀だが、こ
  のオプションが設定されていれば、相応に着色される。注意すべきなのは、自
  分の色選択を上書きしかねないという点や、セキュリティ上の問題さえ引き起
  こしかねないという点である。というのは、メッセイジに添付ファイルの色で
  "[-- PGP output follows ..."  という行を含めてあるかもしれないからだ。



  66..33..77..  aarrrrooww__ccuurrssoorr

  Type: boolean
  Default: no


  設定されているときには、行全体の反転ではなく矢印 ("->") を使って、メ
  ニューにおける現在位置を示す。これを使えば、遅いネットワークやモデム接
  続で反応を早くすることができる。なぜなら、メニューで前後の項目へ動く際
  に画面上で再描画しなければならない部分が少ないからだ。



  66..33..88..  aasscciiii__cchhaarrss

  Type: boolean
  Default: no


  設定されていると、スレッドや添付ファイルの枝分かれを表示する際に、既定
  の _A_C_S 文字ではなくプレイン ASCII 文字を使う。


  66..33..99..  aasskkbbcccc

  Type: boolean
  Default: no


  設定されていると、送信メッセイジ編集前にブラインドカーボンコピー (Bcc)
  の宛先を入力するよう Mutt が促してくる。



  66..33..1100..  aasskkcccc

  Type: boolean
  Default: no


  設定されていると、Mutt は送信メッセイジの編集前にカーボンコピー (Cc)
  の宛先を尋ねてくる。



  66..33..1111..  aattttaacchh__ffoorrmmaatt

  Type: string
  Default: "%u%D%I %t%4n %T%.40d%> [%.7m/%.10M, %.6e%?C?, %C?, %s] "


  この変数は添付ファイルメニューの書式を記述する。下記の printf 式シーク
  ウェンスが理解できる。



     %%CC 文字セット

     %%cc 文字セット変換の必要性 (n=無変換, c=変換)

     %%DD 削除予定フラグ

     %%dd 内容説明

     %%ee MIME content-transfer-encoding (通信時の符号化方法)

     %%ff ファイル名

     %%II disposition (I=inline, A=attachment)

     %%mm メジャー MIME タイプ

     %%MM MIME サブタイプ

     %%nn 添付ファイル番号

     %%ss サイズ

     %%tt タグフラグ

     %%TT 視覚的な枝分かれ文字

     %%uu アンリンク (=送信後削除) フラグ

     %%>>XX
        以降の文字列を右寄せし、余白を "X" で詰める

     %%||XX
        行の末尾まで、文字 "X" で詰める
  66..33..1122..  aattttaacchh__sseepp

  Type: string
  Default: "\n"


  複数のタグ付き添付ファイルを処理 (保存、印刷、パイプ等々) する際に、各
  添付ファイルの間に付ける区切り。



  66..33..1133..  aattttaacchh__sspplliitt

  Type: boolean
  Default: yes


  この変数が設定されていないと、複数のタグ付き添付ファイルを処理 (保存、
  印刷、パイプ等々) する時に Mutt が添付ファイルを連結して一つのファイル
  のように扱うことになる。その際 ``$attach_sep'' が各ファイルの後に追加
  される。なお、この変数が設定されている時には添付ファイルを一つずつ別々
  に処理する。



  66..33..1144..  aattttrriibbuuttiioonn

  Type: string
  Default: "On %d, %n wrote:"


  これは、返信で引用されるメッセイジの前に付く文字列である。定義されてい
  る printf() 風シークウェンスの完全な一覧は ``$index_format'' の節を見
  よ。



  66..33..1155..  aauuttooeeddiitt

  Type: boolean
  Default: no


  これと ``$edit_headers'' が設定されていると、Mutt は最初の送信メニュー
  を飛ばして、即座にメッセイジ本文を編集し始めさせてくれる。送信メニュー
  には、後でメッセイジ本文を編集し終えてから行くことができる。

  ``$fast_reply'' も参照のこと。



  66..33..1166..  aauuttoo__ttaagg

  Type: boolean
  Default: no


  設定されている時に インデックス メニューからメッセイジに影響を与える関
  数を実行すると、タグ付けされたメッセイジすべて (もしあれば) に適用され
  る。設定されていない時は、まず tag-prefix 関数 (既定値: ";") を使っ
  て、次の関数をタグ付きメッセイジに適用するようにしなくてはならない。





  66..33..1177..  bbeeeepp

  Type: boolean
  Default: yes


  この変数が設定されている時にはエラー発生時に Mutt が音を鳴らす。



  66..33..1188..  bbeeeepp__nneeww

  Type: boolean
  Default: no


  この変数が設定されている時、Mutt は新着メイルを知らせるメッセイジを表
  示するたびに音を鳴らす。これは ``$beep'' 変数の設定とは無関係である。



  66..33..1199..  bboouunnccee

  Type: quadoption
  Default: ask-yes


  メッセイジ中継で確認のための質問をするかどうかを制御する。 _y_e_s に設定
  してあると、本当に中継するかどうかを質問されない。この変数を _n_o にする
  ことは一般的に無益であり、推奨できない。なぜならメッセイジを中継できな
  くなってしまうからだ。



  66..33..2200..  bboouunnccee__ddeelliivveerreedd

  Type: boolean
  Default: yes


  この変数が設定されている時にはメッセイジ中継の際に Mutt が Delivered-
  To ヘッダを付けてくれる。 Postfix ユーザはこの変数を解除したいと思うだ
  ろう。



  66..33..2211..  cchhaarrsseett

  Type: string
  Default: ""


  テキストデイタを端末で表示したり入力したりするのに使う文字セット。



  66..33..2222..  cchheecckk__nneeww

  Type: boolean
  Default: yes


  注注意意:: このオプションが有効なのは _M_a_i_l_d_i_r と _M_H 形式メイルボックスだけ
  である。


  _y_e_s の時は、開いている最中のメイルボックスに着信する新着メイルを調べ
  る。特に MH メイルボックスについて言えることだが、この調査はかなり時間
  のかかることがある。というのも、ディレクトリ全体を走査して、各ファイル
  を既に見たものかどうか確認する必要があるからだ。もし _c_h_e_c_k___n_e_w が _n_o
  なら、開いているメイルボックスには新着メイルの確認を行わない。



  66..33..2233..  ccoollllaappssee__uunnrreeaadd

  Type: boolean
  Default: yes


  _n_o の時は、未読メッセイジが含まれるスレッドを折り畳まない。



  66..33..2244..  uunnccoollllaappssee__jjuummpp

  Type: boolean
  Default: no


  _y_e_s の時は、カーソル下の折り畳まれていたスレッドが広げられる際、未読
  メッセイジがあればそこにカーソルを移す。



  66..33..2255..  ccoommppoossee__ffoorrmmaatt

  Type: string
  Default: "-- Mutt: Compose  [Approx. msg size: %l   Atts: %a]%>-"


  コンポウズメニューで表示されるステイタス行の書式を制御する。この文字列
  は ``$status_format'' とほぼ同じだが、独自の printf() 風シークウェンス
  を持っている。



     %%aa 添付ファイルの総数

     %%hh ロウカルのホスト名

     %%ll メッセイジのおおよそのサイズ (バイト単位)

     %%vv Mutt ヴァージョン文字列


  ``$compose_format'' の設定法に関してさらに情報を得るには、
  ``$status_format'' オプションの説明文を見よ。



  66..33..2266..  ccoonnffiigg__cchhaarrsseett

  Type: string
  Default: ""


  定義されていると、設定ファイルのコマンドをこのエンコウディングから (訳
  注：``$charset'' へ) 復号する。



  66..33..2277..  ccoonnffiirrmmaappppeenndd

  Type: boolean
  Default: yes


  設定されていると、 Mutt がメッセイジを既存メイルボックスに追加する時に
  確認を促す。



  66..33..2288..  ccoonnffiirrmmccrreeaattee

  Type: boolean
  Default: yes


  設定されていると、存在しないメイルボックスにメッセイジを保存する際、メ
  イルボックスを作成する前に確認を促す。



  66..33..2299..  ccoonnnneecctt__ttiimmeeoouutt

  Type: number
  Default: 30


  この秒数でネットワーク接続 (IMAP と POP) が確立できなければ Mutt は時
  間切れとして諦める。負の数だと、接続が成功するまで永遠に待ち続ける。



  66..33..3300..  ccoonntteenntt__ttyyppee

  Type: string
  Default: "text/plain"


  新規作成メッセイジ本文における既定の Content-Type を設定する。



  66..33..3311..  ccooppyy

  Type: quadoption
  Default: yes


  この変数は、送信メッセイジのコピーを後で参照するために保存しておくかど
  うかを制御する。 ``$record'', ``$save_name'', ``$force_name'', ``fcc-
  hook'' も参照。



  66..33..3322..  ccrryypptt__uussee__ggppggmmee

  Type: boolean
  Default: no


  GPGME を使った暗号バックエンドの使用を制御する。これが設定されていて、
  かつ Mutt が gpgme サポートありで構築されていると、 S/MIME と PGP に旧
  式コウドではなく gpgme コウドが用いられる。注意が一つ。このオプション
  は .muttrc で使う必要があり、実行中に使ってもまったく効果がない。

  66..33..3333..  ccrryypptt__aauuttooppggpp

  Type: boolean
  Default: yes


  この変数は、Mutt がメッセイジに自動で PGP 暗号化/署名を有効にしても良
  いかどうかを制御する。 ``$crypt_autoencrypt'',
  ``$crypt_replyencrypt'', ``$crypt_autosign'', ``$crypt_replysign'',
  ``$smime_is_default'' も見よ。



  66..33..3344..  ccrryypptt__aauuttoossmmiimmee

  Type: boolean
  Default: yes


  この変数は、自動的な S/MIME 暗号化/署名を有効にするかどうかを制御す
  る。 ``$crypt_autoencrypt'', ``$crypt_replyencrypt'',
  ``$crypt_autosign'', ``$crypt_replysign'', ``$smime_is_default'' も見
  よ。



  66..33..3355..  ddaattee__ffoorrmmaatt

  Type: string
  Default: "!%a, %b %d, %Y at %I:%M:%S%p %Z"


  この変数は ``$index_format'' 中の "%d" シークウェンスによって表示され
  る日付の書式を制御する。これを _s_t_r_f_t_i_m_e コールに渡して日付を処理する。
  正しい文法については _s_t_r_f_t_i_m_e_(_3_) の man ペイジを参照されたい。

  文字列の最初の一字がびっくりマーク ("!") でない限り、月の名前や曜日の
  名前は変数 ``$locale'' で指定されているロカールに従って展開される。も
  し最初がびっくりマークなら、そのマーク自体は捨てられ、残りの文字列にあ
  る月や曜日名が _C ロカール (つまり合衆国英語 en_US) で展開される。



  66..33..3366..  ddeeffaauulltt__hhooookk

  Type: string
  Default: "~f %s !~P | (~P ~C %s)"


  send-hook, message-hook, save-hook, fcc-hook に合致パターンではなく単
  なる正規表現だけ指定されたときにどう解釈するかを制御する。これらのフッ
  クは宣言された時点で展開されるため、フックの解釈は宣言の時点でこの変数
  がとっていた値に従うことになる。既定値が合致するのは、メッセイジの差出
  人が正規表現に合致するか、または差出人が自分 (From のアドレスが
  "alternates" に合致する) で To か Cc の宛先が正規表現に合致する場合で
  ある。



  66..33..3377..  ddeelleettee

  Type: quadoption
  Default: ask-yes



  メイルボックスを閉じたり同期したりする時にメッセイジを本当に削除するか
  どうかを制御する。 _y_e_s に設定されていると、削除予定の印を付けたメッセ
  イジは自動的に、確認を求めることなく消去される。 _n_o に設定されている
  と、削除予定のメッセイジがメイルボックスにそのまま残ることになる。 (訳
  注：quadoption すなわち四択オプションであるから、 ask-yes や ask-no に
  して毎回確認するようにもできる。)



  66..33..3388..  ddeelleettee__uunnttaagg

  Type: boolean
  Default: yes


  このオプションが _y_e_s だと、Mutt はメッセイジに削除の印を付ける際にその
  メッセイジのタグを外す。これはメッセイジを明示的に削除する時にも適用さ
  れるし、セイヴして別のフォルダへ移動する時にも適用される。



  66..33..3399..  ddiiggeesstt__ccoollllaappssee

  Type: boolean
  Default: yes


  受信添付ファイルメニューでは、このオプションが _y_e_s なら、
  multipart/digest の中の各メッセイジについて副パートを表示しない。副パ
  ートを見るには "v" を押す必要がある。



  66..33..4400..  ddiissppllaayy__ffiilltteerr

  Type: path
  Default: ""


  設定されている時には、この変数で指定されたコマンドを使ってメッセイジを
  フィルタする。メッセイジは閲覧時に標準入力として ``$display_filter''
  に渡され、そのフィルタされたメッセイジが標準出力から読み出される。



  66..33..4411..  ddoottlloocckk__pprrooggrraamm

  Type: path
  Default: "/usr/local/bin/mutt_dotlock"


  Mutt が使用する mutt_dotlock (8) バイナリのパス。



  66..33..4422..  ddssnn__nnoottiiffyy

  Type: string
  Default: ""


  注注意意:: Sendmail 8.8.x 以降を使っていないなら有効にすべきではない。

  この変数には、どんな時に通知が返ってくるよう要求するかを設定する。文字
  列の中身はコンマ区切り (スペイスを入れないこと!) のリストで、この中か
  ら選べる: _n_e_v_e_r は通知を一切要求しない、 _f_a_i_l_u_r_e は伝達失敗の通知を要
  求する、 _d_e_l_a_y はメッセイジの遅延を通知させる、 _s_u_c_c_e_s_s は伝達成功を通
  知させるという意味である。

  例: set dsn_notify="failure,delay"



  66..33..4433..  ddssnn__rreettuurrnn

  Type: string
  Default: ""


  注注意意:: Sendmail 8.8.x 以降を使っているのでない限り、この変数を有効にす
  べきではない。

  この変数は、メッセイジがどれだけ DSN メッセイジで返ってくるかを制御す
  る。 _h_d_r_s にしてメッセイジヘッダのみ返ってくるようにするか、 _f_u_l_l で
  メッセイジ全体が返ってくるようにするかのいずれかである。

  例: set dsn_return=hdrs



  66..33..4444..  dduupplliiccaattee__tthhrreeaaddss

  Type: boolean
  Default: yes


  この変数で制御するのは、Mutt がスレッドで整列している時に、同一の
  message-id を持つメッセイジをスレッドにするかどうかである。もし設定さ
  れていると、そうしたメッセイジを重複だと考えていることを示す等号をス
  レッド図に表示する。



  66..33..4455..  eeddiitt__hheeaaddeerrss

  Type: boolean
  Default: no


  このオプションは、送信メッセイジのヘッダを本文と一緒に編集できるように
  してくれる。



  66..33..4466..  eeddiittoorr

  Type: path
  Default: ""


  Mutt が使うエディタを指定する。指定しないと、VISUAL あるいは EDITOR 環
  境変数の値になる。どれも設定されていなければ "vi" という文字列になる。



  66..33..4477..  eennccooddee__ffrroomm

  Type: boolean
  Default: no



  _y_e_s の時は、"From " という文字列を行頭に含むメッセイジを Mutt が
  quoted-printable にエンコウドする。これは、一部の MDA や MTA がメッセ
  イジに行なおうとする不法改変を避けるのに役立つ。



  66..33..4488..  eennvveellooppee__ffrroomm

  Type: boolean
  Default: no


  _y_e_s になっている時、Mutt はメッセイジのエンヴェロウプ送信者を "From:"
  ヘッダに基づいて設定しようとする。この情報が sendmail コマンドに "-f"
  スウィッチを使って渡されるということに注意せよ。このため、そのスウィッ
  チを自分で ``$sendmail'' の中に使っている場合や、マシンの sendmail が
  このコマンドラインスウィッチをサポートしていない場合には、このオプショ
  ンを設定してはならない。



  66..33..4499..  eessccaappee

  Type: string
  Default: "~"


  内蔵エディタの各種機能を使うためのエスケイプ文字。



  66..33..5500..  ffaasstt__rreeppllyy

  Type: boolean
  Default: no


  設定されている時は最初の質問が飛ばされ、メッセイジに返信する際には宛先
  と題名が質問されず、転送する際には題名が質問されない。

  メメモモ:: ``$autoedit'' が設定されている時には、この変数は意味がない。



  66..33..5511..  ffcccc__aattttaacchh

  Type: boolean
  Default: yes


  この変数は、送信メッセイジの添付ファイルを本文と共に保存しておくかどう
  かを制御する。



  66..33..5522..  ffcccc__cclleeaarr

  Type: boolean
  Default: no


  この変数が設定されている時は、実際のメッセイジが暗号化されたり署名され
  たりしていても、FCC は暗号化も署名もされずに保管される。(PGP のみ)



  66..33..5533..  ffoollddeerr

  Type: path
  Default: "~/Mail"


  メイルボックスの既定位置を指定する。先頭に "+" や "=" が付いているパス
  は、その部分がこの変数の値に展開される。ただし注意点がある。この変数を
  既定値から変更するなら、"+" や "=" を何かの変数に使う前にその変更が起
  こるようにしなくてはならない。なぜなら展開が生じるのは "set" コマンド
  の実行中だからである。



  66..33..5544..  ffoollddeerr__ffoorrmmaatt

  Type: string
  Default: "%2C %t %N %F %2l %-8.8u %-8.8g %8s %d %f"


  この変数を使って、ファイルブラウザの表示を自分好みの味わいへとカスタマ
  イズすることができる。文字列の内容は ``$index_format'' に似ているが、
  以下に示す独自の printf() 風シークウェンスがある。



     %%CC ファイル番号

     %%dd フォルダが最後に変更された日付/時刻

     %%ff ファイル名

     %%FF 許可属性

     %%gg グループ名 (なければ gid 番号)

     %%ll ハードリンクの数

     %%NN 新着メイルがあれば N で、なければ空白

     %%ss バイト数

     %%tt タグ付けられていれば * で、それ以外は空白

     %%uu 所有者名 (なければ uid 番号)

     %%>>XX
        残りの文字列を右寄せして、間を "X" で詰める

     %%||XX
        行末まで "X" で詰める



  66..33..5555..  ffoolllloowwuupp__ttoo

  Type: boolean
  Default: yes


  メイル送信時に _M_a_i_l_-_F_o_l_l_o_w_u_p_-_T_o ヘッダフィールドを生成するかどうかを制
  御する。_y_e_s だと、既知のメイリングリストに返信する際には Mutt がこの
  フィールドを生成する。既知というのは subscribe コマンドか ``lists'' コ
  マンドで指定されているということである。


  このフィールドには二つ目的がある。第一に、メイリングリストに送ったメッ
  セイジに対して、同じ返信を重複して受け取るのを避けることだ。そして第二
  に、購読していない既知のリストに送ったメッセイジへの返信を個別に受け取
  れるようにすることである。ヘッダの中には、購読しているリストに送る時は
  リストのアドレスだけが含まれ、未購読のリストにはリストのアドレスと自分
  のメイルアドレスの両方が含まれる。このヘッダを付けないで購読中のリスト
  に送信すると、そのメッセイジに対するグループ返信がリストにも自分個人の
  アドレスにも送られるため、結果として同じメイルが二通送られてくることに
  なる。



  66..33..5566..  ffoorrccee__nnaammee

  Type: boolean
  Default: no


  この変数は ``$save_name'' とほとんど同じだが、宛先アドレスのユーザ名と
  同じメイルボックスに送信メッセイジのコピーを保管しようとする際、そのメ
  イルボックスが存在していなくても (訳注：新規作成して) そこに保管すると
  いう点だけが異なる。

  ``$record'' 変数も参照せよ。



  66..33..5577..  ffoorrwwaarrdd__ddeeccooddee

  Type: boolean
  Default: yes


  複雑な MIME メッセイジの転送時における text/plain へのデコウドを制御す
  る。メッセイジヘッダも RFC2047 デコウドされる。この変数が使われるのは
  ``$mime_forward'' が _n_o の時だけであり、_y_e_s の時には
  ``$mime_forward_decode'' が使われる。



  66..33..5588..  ffoorrwwaarrdd__eeddiitt

  Type: quadoption
  Default: yes


  この quadoption (四択オプション) は、メッセイジ転送時にユーザが自動で
  エディタに行かされるかどうかを制御する。常に無変更で転送したいという人
  は "no" に設定すれば良い。



  66..33..5599..  ffoorrwwaarrdd__ffoorrmmaatt

  Type: string
  Default: "[%a: %s]"


  この変数はメッセイジを転送する時の題名の既定値を制御する。
  ``$index_format'' 変数と同じ書式シークウェンスを使う。






  66..33..6600..  ffoorrwwaarrdd__qquuoottee

  Type: boolean
  Default: no


  _y_e_s の時、メッセイジ本文中に取り込まれた転送メッセイジは
  (``$mime_forward'' が _n_o の時には) ``$indent_string'' を使って引用され
  る。



  66..33..6611..  ffrroomm

  Type: e-mail address
  Default: ""


  設定されていると、この変数の中身が既定の From アドレスになる。これは
  (send-hook などから) my_hdr を使って上書きできる。その際、
  ``$reverse_name'' も共に使うこと。なお、この変数は ``$use_from'' が設
  定されていないと無視される。

  設定されていない時は環境変数 EMAIL の内容が使われる。



  66..33..6622..  ggeeccooss__mmaasskk

  Type: regular expression
  Default: "^[^,]*"


  Mutt がエイリアスを展開する際にパスワード項目の GECOS フィールド (訳
  注：getent passwd の出力で五番目のフィールド) を読み取るための正規表
  現。既定値の正規表現は "^[^,]*" に設定されており、これは最初に "," に
  当たるまでの部分の文字列を返すことになる。もし GECOS フィールドに "姓,
  名" のような文字列が含まれているなら gecos_mask=".*" と設定すべきであ
  る。

  次のような動作に有効である。メイルを stevef というユーザ ID の人に送る
  とする。その人の本名は Steve Franklin である。Mutt が stevef を
  "Franklin" stevef@foo.bar というように展開してしまう。この場合
  は、gecos_mask を名前全体に合致するような正規表現に設定して、 Mutt が
  "Franklin" から "Franklin, Steve" へと視野を広げられるようにすべきなの
  だ。



  66..33..6633..  hhddrrss

  Type: boolean
  Default: yes


  設定されていない時には、通常だと追加される ``my_hdr'' コマンドのヘッダ
  フィールドが作成されない。この変数の効果を発揮するには、必ずその新規
  メッセイジの作成や返信の前に解除しなくてはならない。設定されている時に
  はユーザ定義ヘッダフィールドがすべての新メッセイジに追加される。



  66..33..6644..  hheeaaddeerr

  Type: boolean
  Default: no
  設定されている時には、返信元メッセイジのヘッダを Mutt が編集バッファに
  取り込むようになる。 ``$weed'' の設定が適用される。



  66..33..6655..  hheellpp

  Type: boolean
  Default: yes


  設定されていると、各メニューに備わる主な機能のキー割り当てを説明するヘ
  ルプが画面の一行目に表示される。

  メメモモ:: 操作キーが正しく表示されないことがある。これは関数が一つのキー押
  下だけでなく一連の操作に割り当てられている場合だ。さらに、Mutt 実行中
  に割り当てが変更されてもヘルプ行は更新されないことがある。ただ、この変
  数は基本的に新しいユーザのためにあるので、どちらもさほど大きな問題とは
  ならないはずだ。



  66..33..6666..  hhiiddddeenn__hhoosstt

  Type: boolean
  Default: no


  設定されている時には、Mutt がアドレスにドメイン部分を付ける際、
  ``$hostname'' 変数のホスト名部分を抜く。この変数は Message-ID の生成に
  影響しないし、最上位ドメインまで切除してしまうようなことにもならない。



  66..33..6677..  hhiiddee__lliimmiitteedd

  Type: boolean
  Default: no


  設定されていると、スレッド分岐図の中で、 limit (表示制限) によって隠れ
  ているメッセイジのある場所を Mutt が指示しなくなる。



  66..33..6688..  hhiiddee__mmiissssiinngg

  Type: boolean
  Default: yes


  設定されていると、スレッド分岐図に欠けているメッセイジの存在を示さなく
  なる。



  66..33..6699..  hhiiddee__ttoopp__lliimmiitteedd

  Type: boolean
  Default: no


  設定されていると、limit (表示制限) で隠れているメッセイジがあることを
  スレッド頂点で示さなくなる。 ``$hide_missing'' が設定されていると、こ
  のオプションがどうなっても効果がないので、覚えておくように。

  66..33..7700..  hhiiddee__ttoopp__mmiissssiinngg

  Type: boolean
  Default: yes


  設定されている時、スレッド頂点ではメッセイジが欠けているという表示をし
  なくなる。ただ、``$hide_limited'' が設定されている時にはこのオプション
  の効果がないということに注意せよ。



  66..33..7711..  hhiissttoorryy

  Type: number
  Default: 10


  この変数は文字列履歴バッファのサイズ (記憶する文字列の数 [訳注：字数で
  はない]) を制御する。このバッファは、変数が設定されるたびに消去され
  る。



  66..33..7722..  hhoonnoorr__ffoolllloowwuupp__ttoo

  Type: quadoption
  Default: yes


  この変数は、メッセイジへグループ返信する際に Mail-Followup-To ヘッダに
  敬意を払って指示に服するかどうかを制御する。



  66..33..7733..  hhoossttnnaammee

  Type: string
  Default: ""


  ロウカルメイルアドレスの "@" の後に付けるホスト名を指定する。これはコ
  ンパイル時に /etc/resolv.conf から取得した定義を上書きする。



  66..33..7744..  iiggnnoorree__lliisstt__rreeppllyy__ttoo

  Type: boolean
  Default: no


  これはメイリングリストからのメッセイジに返信する際の _r_e_p_l_y 関数の動作
  に影響する。設定されているとき、"Reply-To:" フィールドが "To:" フィー
  ルドと同じ値に設定されていると、 Mutt は "Reply-To:" フィールドがメイ
  リングリストによって (返事を自動でメイリングリストに送らせるため) 設定
  されたものとみなして、そのフィールドを無視する。このオプションが設定さ
  れているときに返事をメイリングリストに向かわせるには _l_i_s_t_-_r_e_p_l_y を使
  う。また、 _g_r_o_u_p_-_r_e_p_l_y は差出人とリストの両方に返信する。



  66..33..7755..  iimmaapp__aauutthheennttiiccaattoorrss

  Type: string
  Default: ""
  これはコロン区切りによる認証方式の一覧で、Mutt はこれらの方式を使って
  IMAP サーバにログインしようとする。並びは Mutt が試行する順になってい
  る。認証方式には、'login' か IMAP の能力文字列 'AUTH=xxx' の右辺を使う
  (例えば 'digest-md5', 'gssapi', 'cram-md5')。このパラメータは大文字と
  小文字を区別しない。なおパラメータが未設定 (既定) のときには、Mutt は
  利用できる方式をすべて、最も安全な方式から最も安全でない方式の順番に試
  行する。

  例: set imap_authenticators="gssapi:cram-md5:login"

  注注記記:: Mutt が他の認証方式へ移るのは方式が利用できない場合のみである。
  方式が利用できるが認証に失敗したというときには IMAP サーバに接続しない
  ことになる。



  66..33..7766..  iimmaapp__ddeelliimm__cchhaarrss

  Type: string
  Default: "/."


  この中には、IMAP パスを表示する際にフォルダの区切りとして扱いたい文字
  の一覧が入る。特にこれが役立つのは _f_o_l_d_e_r 変数の内容を示すために "="
  ショートカットを使うときである。 (訳注：つまり "/.=" のように設定する
  ということか?)



  66..33..7777..  iimmaapp__ffoorrccee__ssssll

  Type: boolean
  Default: no


  この変数が設定されていると、Mutt は常に SSL を使って IMAP サーバに接続
  する。



  66..33..7788..  iimmaapp__hhoommee__nnaammeessppaaccee

  Type: string
  Default: ""


  通常、IMAP ブラウザにおいては、自分の個人用フォルダが INBOX のすぐそば
  にあってほしいものだ。そのようになっていない場合、この変数を自分のフォ
  ルダへの IMAP パスに設定することができる。



  66..33..7799..  iimmaapp__kkeeeeppaalliivvee

  Type: number
  Default: 900


  この変数には Mutt が IMAP 接続の継続を主張するまで待つ最大秒数を指定す
  る。その主張をすることにより、Mutt が接続を使い終える前にサーバが接続
  を閉じてしまうのを防ぐのである。既定値は、RFC 指定によりサーバ側が接続
  を閉じるまでに待たねばならない時間の最小値 (30 分) 内にしっかりおさ
  まっているが、実際はそこかしこで RFC が破られている。接続を使用してい
  ないとみなされて IMAP サーバから切断されるようであれば、この数値を減ら
  すこと。

  66..33..8800..  iimmaapp__lliisstt__ssuubbssccrriibbeedd

  Type: boolean
  Default: no


  この変数は、IMAP フォルダ閲覧で探すのを購読フォルダのみにするか、それ
  ともフォルダすべてにするかを制御する。これは IMAP ブラウザ内で _t_o_g_g_l_e_-
  _s_u_b_s_c_r_i_b_e_d 関数を使って切り替えることもできる。



  66..33..8811..  iimmaapp__ppaassss

  Type: string
  Default: ""


  IMAP アカウントのパスワードを指定する。設定されていないと、Mutt は
  fetch-mail 関数の実行時にパスワードを求めることになる。警警告告: このオプ
  ションは十分に安全なマシン上でのみ使うべきである。なぜなら、muttrc
  ファイルを自分以外が読めないようにしたつもりでも、スーパユーザは読める
  からだ。



  66..33..8822..  iimmaapp__ppaassssiivvee

  Type: boolean
  Default: yes


  設定されているときには、新着メイル確認のために Mutt が新しく IMAP 接続
  を開くことはない。Mutt は新着メイルを既存の IMAP 接続でのみ確認するこ
  とになる。これが有用となるのは、Mutt 起動時にユーザ名とパスワードの入
  力を促されたくない場合や、接続を開くのに時間がかかる場合などである。



  66..33..8833..  iimmaapp__ppeeeekk

  Type: boolean
  Default: yes


  設定されていると Mutt は、サーバからメッセイジを取得しただけでメイルが
  既読として印付けられてしまうことのないようにする。これは一般的に良いこ
  とであるが、IMAP フォルダを閉じるのが幾らか遅くなることがある。このオ
  プションはスピード狂の人たちをなだめるためにのみ存在しているのだ。



  66..33..8844..  iimmaapp__sseerrvveerrnnooiissee

  Type: boolean
  Default: yes


  設定されているときには、IMAP サーバからの警告メッセイジを Mutt が表示
  するようになる。こうしたメッセイジはほとんど無害なことに関するもので
  あったり、サーバ側の設定ミスのためにユーザからはどうしようもないもので
  あったりすることが多いので、抑止したいと思うこともあるだろう。




  66..33..8855..  iimmaapp__uusseerr

  Type: string
  Default: ""


  IMAP サーバへのログイン名。

  この変数の既定値はロウカルマシン上のユーザ名になる。



  66..33..8866..  iimmpplliicciitt__aauuttoovviieeww

  Type: boolean
  Default: no


  これが "yes" に設定されていると、copiousoutput フラグの付いた mailcap
  項目がないかどうかを、どんな種類の添付ファイルに対しても調査する。ただ
  し、内部ヴューワが定義されていない場合である。そのように調査して項目が
  見つかったときには、そこで定義されているヴューワを使って内容をテキスト
  形式に変換する。



  66..33..8877..  iinncclluuddee

  Type: quadoption
  Default: ask-yes


  返信しようとしている元のメッセイジ内容を返信に含めるかどうかを制御す
  る。



  66..33..8888..  iinnddeenntt__ssttrriinngg

  Type: string
  Default: "> "


  指定した文字列を、相手のメッセイジから引用した文の行頭に付ける。この値
  は、変更しないことが強く推奨されている。変更すると、熱狂的なネット市民
  を激昂させてしまう傾向があるからだ。



  66..33..8899..  iinnddeexx__ffoorrmmaatt

  Type: string
  Default: "%4C %Z %{%b %d} %-15.15L (%?l?%4l&%4c?) %s"


  この変数によって、メッセイジインデックス画面を好み通りに調整することが
  できる。

  "形式文字列" は "C" の printf 関数で出力形式を指示するために使う文字列
  と似ている (詳細は man を参照)。 Mutt では以下のシークウェンスが定義さ
  れている。



     %%aa 差出人のアドレス

     %%AA (もしあれば) reply-to アドレス (なければ差出人アドレス)

     %%bb メッセイジフォルダのファイル名 (mailBox の b と考えよ) (訳注：最
        後に "/" が付いているディレクトリだと何も表示されない。
        ((strrchr(path,'/'))+1) のポインタから strfcpy しているためであ
        る。)

     %%BB 宛てられたリスト、なければフォルダ名 (%b)

     %%cc メッセイジのバイト数 (英文では文字 [characters] の数)

     %%CC メッセイジ番号

     %%dd 日付と時刻を、送信者の現地時間に変換して "date_format" の形式に
        したもの

     %%DD 日付と時刻を、自分の地域の時間に変換して "date_format" の形式に
        したもの

     %%ee スレッド内におけるメッセイジ番号

     %%EE スレッド内のメッセイジ総数

     %%ff From: 行の全体 (アドレスも本名も含む)

     %%FF 差出人の名前、自分からのメッセイジなら宛先の名前 (訳注：後者には
        To という文字列が前置される)

     %%ii Message-ID

     %%ll 行数 (Maildir と MH では使えないし、IMAP でもたぶん不可 [訳注：0
        になる])

     %%LL To または CC ヘッダフィールドが "subscribe" コマンドで定義された
        正規表現に合致すると "To <list-name>" (訳注："Cc <list-name>" の
        場合もある) と表示する。合致しなければ %F と同じ

     %%mm メイルボックス内のメッセイジ総数

     %%MM スレッドが折り畳まれているときの非表示メッセイジの数

     %%NN 得点

     %%nn 差出人の本名 (なければアドレス)

     %%OO (オリジナルセイヴフォルダの O) むかし Mutt が FCC として使ってい
        たような場所: リストアドレスの名前部分、なければ宛先アドレスの名
        前部分 (訳注：``$save_address'' が設定されていれば @ 以降も含
        み、そうでなければ @ の前までのみ)

     %%ss 題名

     %%SS メッセイジの状態 (N/D/d/!/r/*)

     %%tt To: フィールド (宛先)

     %%TT ``$to_chars'' 文字列中の適切な文字

     %%uu 送信者のユーザ (ログイン) 名

     %%vv 送信者 (自分が送信者なら宛先人) のファーストネイム (訳注：日本人
        だと姓が先なので姓)

     %%yy あれば X-Label: フィールド


     %%YY X-Label フィールドがあり、かつ (1) スレッドトゥリーの一部ではな
        い、(2) スレッドの頂点である、 (3) 前のメッセイジの X-Label と違
        う X-Label である、のいずれかであれば X-Label フィールド

     %%ZZ 3 桁の状態フラグ

     %%{{ffmmtt}}
        日付と時刻が送信者の現地時間に変換され、 "fmt" がライブラリ関数
        "strftime" により展開される。最初にびっくりマークが付いていると
        ``$locale'' が無視される。 (訳注：%{!%b-%d(%a)} のように使う)

     %%((ffmmtt))
        メッセイジが到着した日付と時刻のロウカル時間表示。 "fmt" はライ
        ブラリ関数 "strftime" により展開され、最初にびっくりマークが付い
        ていると ``$locale'' が無視される。

     %%<<ffmmtt>>
        ロウカルの現在時刻。 "fmt" はライブラリ関数 "strftime" により展
        開され、最初にびっくりマークが付いていると ``$locale'' が無視さ
        れる。

     %%>>XX
        残りの文字列を右寄せして、間を "X" 部分の文字で詰める (訳注：日
        本語文字は未対応)

     %%||XX
        行末まで "X" 部分の文字で詰める


  参照: ``$to_chars''



  66..33..9900..  iissppeellll

  Type: path
  Default: "/usr/bin/ispell"


  どう ispell (GNU スペルチェッカ) を起動するか。



  66..33..9911..  kkeeeepp__ffllaaggggeedd

  Type: boolean
  Default: no


  設定されていると、フラグ付き既読メッセイジはスプールメイルボックスから
  自分の ``$mbox'' メイルボックス (または ``mbox-hook'' コマンドの結果)
  に移さない。



  66..33..9922..  llooccaallee

  Type: string
  Default: "C"


  _s_t_r_f_t_i_m_e_(_3_) が日付などを整形するために使うロカール。使うことのできる値
  は、システムがロカール変数 _L_C___T_I_M_E として受け付ける文字列である。



  66..33..9933..  mmaaiill__cchheecckk

  Type: number
  Default: 5


  この値は、どれほどの頻度で (何秒に一度) Mutt が新着メイルを確認するか
  を制御する。



  66..33..9944..  mmaaiillccaapp__ppaatthh

  Type: string
  Default: ""


  この変数は、Mutt が直接サポートしていない MIME パートを表示しようとす
  る際に、どのファイルに問い合わせるかを指定する。



  66..33..9955..  mmaaiillccaapp__ssaanniittiizzee

  Type: boolean
  Default: yes


  設定されていると、Mutt は mailcap の %展開に現れる文字を制限して、ちょ
  うどよく定義された安全な文字に直す。これは安全な設定ではあるが、これに
  より高度な MIME 項目が動かなくなることがないとは断言できない。

  DDOONN''TT CCHHAANNGGEE TTHHIISS SSEETTTTIINNGG UUNNLLEESSSS YYOOUU AARREE RREEAALLLLYY SSUURREE WWHHAATT YYOOUU AARREE
  DDOOIINNGG!!
  ここのの設設定定はは、、完完全全にに理理解解すするるここととななくく変変更更ししててははななららなないい!!



  66..33..9966..  mmaaiillddiirr__ttrraasshh

  Type: boolean
  Default: no


  設定されていると、削除予定に印付けられたメッセイジがその後、削除される
  のではなく Maildir の T フラグ (trashed) を付けて保存される。注注意意:: こ
  れは Maildir 形式のメイルボックスにのみ適用される。他のメイルボックス
  形式にはまったく効果がない。



  66..33..9977..  mmaarrkk__oolldd

  Type: boolean
  Default: yes


  新着で未読のメッセイジを読まないままメイルボックスを出たときに、Mutt
  がそれに古いという印を付けるかどうか制御する。このオプションが設定され
  ていると、次回 Mutt を始めたときに、インデックスメニューでメッセイジの
  隣りに "O" と表示される。それが古い (old) ということを示すのである。





  66..33..9988..  mmaarrkkeerrss

  Type: boolean
  Default: yes


  内部ペイジャで折り返された行の表示を制御する。設定されていると、 "+"
  印が行頭に付いて、折り返し行を表す。 ``$smart_wrap'' 変数も見よ。



  66..33..9999..  mmaasskk

  Type: regular expression
  Default: "!^\.[^.]"


  ファイルブラウザで使われる正規表現。先頭に _N_O_T 演算子 "!" を付けること
  ができる。ファイル名がこの条件に合致するもののみ表示されることになる。
  合致条件は常に大文字と小文字を区別する。



  66..33..110000..  mmbbooxx

  Type: path
  Default: "~/mbox"


  これに指定したフォルダへ、``$spoolfile'' フォルダの既読メイルを追加す
  る。



  66..33..110011..  mmbbooxx__ttyyppee

  Type: folder magic
  Default: mbox


  新しいフォルダを作るときに使う既定のメイルボックス形式。 mbox, MMDF,
  MH, Maildir のいずれでも良い。



  66..33..110022..  mmeettoooo

  Type: boolean
  Default: no


  設定されていないと、メッセイジへの返信時に宛先リストから自分のアドレス
  (``alternates'' コマンドを参照) を除去する。



  66..33..110033..  mmeennuu__ssccrroollll

  Type: boolean
  Default: no


  これが _y_e_s に設定されているときには、画面の端を越えようとしたときにメ
  ニューが一行ずつスクロウルする。 _n_o なら、画面全体が消去されて次のペイ
  ジまたは前のペイジが表示される (こちらの方が、何度も再描画するのを避け
  られるので遅い回線に有用である)。
  66..33..110044..  mmeettaa__kkeeyy

  Type: boolean
  Default: no


  設定されていると、高位ビット (8 ビット目) との組み合わせを持つキー押下
  を、ユーザが ESC キーを押してから別のキーを押したものと判断するよう
  Mutt に強制する。ESC の後に押したキーは、高位ビットを取り除いた後に残
  る部分である。例えば、押されたキーが 0xf4 という ASCII 値を持っている
  と、これはユーザが ESC と "x" を押したものとして扱われる。なぜなら
  "0xf4" から高位ビットを除いた結果は "0x74" であり、これは ASCII 文字の
  "x" だからである。



  66..33..110055..  mmhh__ppuurrggee

  Type: boolean
  Default: no


  設定されていないときには、Mutt が mh の挙動を偽装する。削除メッセイジ
  を実際には削除せず、そのファイル名を「_,_<旧ファイル名_>」に変更するので
  ある。もし変数が設定されていれば、メッセイジファイルは単に消されてしま
  う。



  66..33..110066..  mmhh__sseeqq__ffllaaggggeedd

  Type: string
  Default: "flagged"


  フラグ付きメッセイジに使う MH シークウェンス名。



  66..33..110077..  mmhh__sseeqq__rreepplliieedd

  Type: string
  Default: "replied"


  返信済みメッセイジに使う MH シークウェンス名。



  66..33..110088..  mmhh__sseeqq__uunnsseeeenn

  Type: string
  Default: "unseen"


  未見メッセイジに使う MH シークウェンス名。



  66..33..110099..  mmiimmee__ffoorrwwaarrdd

  Type: quadoption
  Default: no



  設定されているときには、転送するメッセイジが個別の MIME パートとして添
  付される。メッセイジ本文に含めるのではないということだ。これは MIME
  メッセイジの転送に便利である。こうすれば相手も、自分に届けられたのと同
  じように正しくメッセイジを閲覧することができるのだ。もしもメイルごとに
  MIME と非 MIME を選択したいのであれば、この変数を ask-no か ask-yes に
  設定すること。

  ``$forward_decode'' および ``$mime_forward_decode'' も参照。



  66..33..111100..  mmiimmee__ffoorrwwaarrdd__ddeeccooddee

  Type: boolean
  Default: no


  ``$mime_forward'' が _y_e_s のときには、入り組んだ MIME メッセイジを転送
  時に text/plain へ復号するかどうかをこの変数が制御する。 _n_o のときには
  ``$forward_decode'' が使われる。



  66..33..111111..  mmiimmee__ffoorrwwaarrdd__rreesstt

  Type: quadoption
  Default: yes


  MIME メッセイジの添付ファイルメニューからファイルを複数 (訳注：非
  ``MIME'' で) 転送するとき、適切な復号方法のないファイルが転送メッセイ
  ジに添付されるのは、このオプションが設定された場合のみである。 (訳
  注：yes の場合と、ask-yes または ask-no で y と答えた場合のこと。な
  お、このオプションは ``$mime_forward'' が解除されているときにのみ意味
  を持つ。非 MIME 転送をしようとしているときに、 MIME でしか転送できない
  ファイルをあきらめる (no) か MIME で転送する (yes) かの設定なのだ。転
  送ファイルが一つだけのときには、あきらめるはずがないとみなされる。)



  66..33..111122..  mmiixx__eennttrryy__ffoorrmmaatt

  Type: string
  Default: "%4n %c %-16s %a"


  この変数で Mixmaster チェイン選択画面におけるリメイラ行の書式を記述す
  る。以下に挙げる printf風シークウェンスが使える。



     %%nn メニュー内での番号

     %%cc リメイラの能力

     %%ss リメイラの省略名

     %%aa リメイラのメイルアドレス



  66..33..111133..  mmiixxmmaasstteerr

  Type: path
  Default: "mixmaster"

  この変数には自分のシステムの Mixmaster バイナリへのパスを入れる。これ
  に種々のパラメータを付けて、既知のリメイラ一覧を収集する。また、最終的
  にメッセイジを Mixmaster チェイン経由で送信する際にも使う。



  66..33..111144..  mmoovvee

  Type: quadoption
  Default: ask-no


  スプールメイルボックスの既読メッセイジを ``$mbox'' メイルボックスや
  ``mbox-hook'' コマンドの結果へ移動するかどうかを制御する。 (訳注：原文
  は文字通りには「移動するかどうかを確認させるかどうかを制御する」となっ
  ているが、yes にすれば確認なしで移動されるし、no にすれば確認なしで移
  動もなしなのだから、原文直訳では不正確になってしまう。)



  66..33..111155..  mmeessssaaggee__ffoorrmmaatt

  Type: string
  Default: "%s"


  「添付ファイル」メニューで message/rfc822 タイプのファイルの部分に表示
  される文字列。定義されている printf()風シークウェンスの完全な一覧表に
  ついては ``$index_format'' の項を参照のこと。



  66..33..111166..  nnaarrrrooww__ttrreeee

  Type: boolean
  Default: no


  この変数が設定されていると、スレッドトゥリーを狭くして、深いスレッドが
  画面に収まるようにする。



  66..33..111177..  ppaaggeerr

  Type: path
  Default: "builtin"


  この変数にはメッセイジ閲覧に使いたいペイジャを指定する。 builtin は内
  蔵ペイジャを使うという意味になるが、それ以外は外部ペイジャのパス名を指
  定すべきである。

  外部ペイジャを使うことには不便な点もある: まず、キーを多く押さなくては
  ならない。ペイジャから直接 Mutt の関数を呼び出すことはできないからだ。
  さらに、画面の大きさを変更すると、ヘルプメニューで画面の幅より長い行が
  ひどいことになってしまう。



  66..33..111188..  ppaaggeerr__ccoonntteexxtt

  Type: number
  Default: 0


  この変数は、内部ペイジャで次のペイジや前のペイジを表示させる際に文脈と
  して残す行数を制御する。Mutt は既定では、現時点の画面で一番下にある行
  の次からを次ペイジとして表示する (文脈は 0 行ということ)。



  66..33..111199..  ppaaggeerr__ffoorrmmaatt

  Type: string
  Default: "-%Z- %C/%m: %-20.20n   %s"


  この変数は一行メッセイジである「ステイタス」の形式を制御する。これは内
  部ペイジャでも外部ペイジャでも各メッセイジの前に表示される (訳注：ただ
  し、外部ペイジャの場合には表示内容の前に付加されるが、内部ペイジャの場
  合にはインデックスモウドにおけるステイタス行と同じ位置に常に表示され
  る)。正しいシークウェンスは ``$index_format'' の項で一覧にされている。



  66..33..112200..  ppaaggeerr__iinnddeexx__lliinneess

  Type: number
  Default: 0


  ペイジャにいるときに表示する小インデックスの行数を決定する。ペイジャで
  表示中のメッセイジは、フォルダの上端や下端に近い場合を除き、この小イン
  デックス画面の中で上からおよそ三分の一の位置になる。これによって、メッ
  セイジを読むときに前後いくつかのメッセイジが文脈として与えられる。これ
  が便利なのは、例えば、そのスレッドにあといくつ未読メッセイジが残ってい
  るのかを見極めるという場合である。行数のうち一行はインデックスのステイ
  タス行に使われるので、 _p_a_g_e_r___i_n_d_e_x___l_i_n_e_s が 6 であっても、実際のイン
  デックスは 5 行しか表示されないことになる。 0 という値にするとインデッ
  クスが表示されない。フォルダ内のメッセイジ数が _p_a_g_e_r___i_n_d_e_x___l_i_n_e_s より
  も少ないとき、小インデックスは必要な行数だけを使うようにする。



  66..33..112211..  ppaaggeerr__ssttoopp

  Type: boolean
  Default: no


  設定されているときには、メッセイジの終わりまで来て _n_e_x_t_-_p_a_g_e 関数を実
  行しても、内部ペイジャが次のメッセイジへ移動ししなないい。



  66..33..112222..  ccrryypptt__aauuttoossiiggnn

  Type: boolean
  Default: no


  この変数を設定すると Mutt が送信メッセイジを常に暗号学的に署名しようと
  する。署名が不要なときや暗号化も要るときには、_p_g_p_-_m_e_n_u を使って上書き
  することができる。 ``$smime_is_default'' が設定されているのであれ
  ば、OpenSSL を使って S/MIME メッセイジを作成する。この場合は _s_m_i_m_e_-
  _m_e_n_u を使って設定を上書きすることができる。 (Crypto only)





  66..33..112233..  ccrryypptt__aauuttooeennccrryypptt

  Type: boolean
  Default: no


  この変数を設定すると、Mutt が、常に PGP 暗号化してメッセイジを送信しよ
  うとするようになる。これはたぶん、_s_e_n_d_-_h_o_o_k コマンドとの組み合わせでの
  み有用だろう。暗号化が不要だったり署名も必要だったりするときには、_p_g_p_-
  _m_e_n_u を使って上書きすることができる。 ``$smime_is_default'' が設定され
  ていると OpenSSL が使われて S/MIME メッセイジが作成される。その際、設
  定の上書きは _s_m_i_m_e_-_m_e_n_u を使うことにより可能である。 (Crypto only)



  66..33..112244..  ppggpp__iiggnnoorree__ssuubbkkeeyyss

  Type: boolean
  Default: yes


  この変数を設定すると Mutt が OpenPGP 副鍵を無視するようになる。主鍵が
  (訳注：画面上でのみ) 副鍵の能力を継承するのだ。鍵選択遊びを楽しみたい
  のであれば、この変数を解除すること。 (訳注：通常、主鍵は署名に使い、副
  鍵は暗号化に使う。主鍵の有効期間を長くして副鍵の期間を短くすることで安
  全性を向上させるよう推奨されている。通常、ひとつの主鍵に対して有効な副
  鍵はひとつだけなので、この変数を設定しても不便なことはないはずだ。)
  (PGP only)



  66..33..112255..  ccrryypptt__rreeppllyyeennccrryypptt

  Type: boolean
  Default: yes


  設定されていると、暗号化されたメッセイジへの返信には自動的に PGP か
  OpenSSL で暗号化する。 (Crypto only)



  66..33..112266..  ccrryypptt__rreeppllyyssiiggnn

  Type: boolean
  Default: no


  設定されていると、署名されたメッセイジへの返信には自動的に PGP か
  OpenSSL で署名する。

  注注意意:: 署名され、かかつつ暗暗号号化化ももされているメッセイジには、この変数が作用し
  ない!  (Crypto only)



  66..33..112277..  ccrryypptt__rreeppllyyssiiggnneennccrryypptteedd

  Type: boolean
  Default: no


  設定されていると、暗号化されたメッセイジへの返信には自動的に PGP か
  OpenSSL で署名する。この変数は ``$crypt_replyencrypt'' との組み合わせ
  において意味を持つ。その組み合わせによって、自動的に暗号化されるメッセ
  イジに署名することができるからだ。この変数は ``$crypt_replysign'' で注
  記されている問題の回避策となる。その問題とは、暗号化されているメッセイ
  ジに署名もされているかどうかを調べることが Mutt にはできない、というも
  のである。 (訳注：それで、replysign を設定するなら、ふつうは
  replysignencrypted も設定したいと思うだろう。ただし、暗号化かつ署名付
  きメッセイジに暗号化と署名を施しながら、署名なし暗号化メッセイジへの返
  信に暗号化のみ実行するためにはフックを使わなければならないであろう。
  ``~g および ~G'' を参照のこと。) (Crypto only)



  66..33..112288..  ccrryypptt__ttiimmeessttaammpp

  Type: boolean
  Default: yes


  設定されていると、Mutt は PGP および S/MIME の出力を囲む行に時刻表示を
  含める。これにより出力行の偽造がさらに困難になる。もし、そうした行に色
  を使って印付けており、その色を信頼するのであれば、この設定を解除しても
  構わない。 (訳注：``$allow_ansi'' 参照) (Crypto only)



  66..33..112299..  ppggpp__uussee__ggppgg__aaggeenntt

  Type: boolean
  Default: no


  設定されていると、Mutt は、既に起動してあるであろう gpg-agent プロセス
  を使おうとする。 (訳注：gpg-agent とはパスフレイズを記憶してくれるエイ
  ジェントで、 newpg および gnupg-1.9 以上に含まれている。 ssh-agent の
  ように、環境変数で通信経路を指定する。 Mutt は、GPG_TTY および
  GPG_AGENT_INFO 環境変数が設定されていれば gpg-agent が起動しているもの
  とみなし、パスフレイズを尋ねない。それら環境変数が設定されていなければ
  通常どおりパスフレイズを尋ねる。 gpg-agent を利用するのであれ
  ば、 /.gnupg/gpg.conf に use-agent と書いておくか、 $pgp_*_command 群
  に --use-agent オプションを含めておくべきだろう。) (PGP only)



  66..33..113300..  ccrryypptt__vveerriiffyy__ssiigg

  Type: quadoption
  Default: yes


  "yes" なら、常に PGP および S/MIME 署名を検証しようとする。 "ask" (訳
  注：実際には ask-yes か ask-no) なら、署名を検証するかどうか尋ねる。
  "no" なら、暗号学的署名を一切検証しようとしない。 (Crypto only)



  66..33..113311..  ssmmiimmee__iiss__ddeeffaauulltt

  Type: boolean
  Default: no


  自動での署名/暗号化に関する既定の動作は、すべて PGP を使うというもの
  だ。それを上書きして OpenSSL を使うには、この変数を設定しなくてはなら
  ない。ただし、この変数は返信には効果がない。というのも、Mutt はもとも
  とのメッセイジの署名/暗号化に使われているのと同じ方式を自動的に選択す
  るからである。 (この変数は ``$crypt_autosmime'' を解除することによって
  上書きされうるので注意。) (S/MIME only)

  66..33..113322..  ssmmiimmee__aasskk__cceerrtt__llaabbeell

  Type: boolean
  Default: yes


  このフラグは、デイタベイスに追加しようとする証明書のラベル名を入力する
  よう求めるかどうかを制御する。既定では設定されている。 (S/MIME only)



  66..33..113333..  ssmmiimmee__ddeeccrryypptt__uussee__ddeeffaauulltt__kkeeyy

  Type: boolean
  Default: yes


  設定されている (既定) なら、Mutt は復号化に既定鍵を使う。設定されてい
  ないとき、証明書と鍵のペアが複数管理されていれば、 Mutt はメイルアドレ
  スを使って鍵を決定する。それでも見付からなければ鍵を入力するよう求め
  る。 (S/MIME only)



  66..33..113344..  ppggpp__eennttrryy__ffoorrmmaatt

  Type: string
  Default: "%4n %t%f %4l/0x%k %-4a %2c %u"


  この変数を使って PGP 鍵選択メニューを自分好みに調整することができる。
  この文字列は ``$index_format'' に似ているが、独自の printf()風シーク
  ウェンスがある。 (訳注：%K, %A, %L, %F, %C も使える。副鍵にも主鍵の情
  報を表示する点が異なるが、それ以外は小文字と同じ意味だ。)



     %%nn 番号 (number)

     %%kk 鍵 ID (key id)

     %%uu ユーザ ID (user id)

     %%aa アルゴリズム (algorithm)

     %%ll 鍵の長さ (length)

     %%ff フラグ (flags) (訳注：期限切れや破棄など)

     %%cc 能力 (capabilities) (訳注：署名と暗号化)

     %%tt 信用度 (trust) / 鍵とユーザ ID の組み合わせの有効性 (訳注：本
        来、すべての鍵所有者に対して自分で決定した trust から各鍵の
        validity すなわち有効性を計算するのであり、「信用度」と「有効
        性」は違うものである。しかし GnuPG では validity という語を使わ
        ず、所有者への信用度は owner-trust, 鍵の有効性は calculated
        trust と呼ぶようだ。ここで表示されるのは後者である。)

     %%[[<<ss>>]]
        鍵の日付 (<s> は strftime(3) 表記)


  (PGP only)



  66..33..113355..  ppggpp__ggoooodd__ssiiggnn

  Type: regular expression
  Default: ""


  この変数に文章 (訳注：正しくは正規表現) を割り当てると、その文章が
  ``$pgp_verify_command'' の出力に含まれているときにのみ PGP 署名が検証
  できたとみなされる。不正な署名にもコマンドの返り値が 0 になってしまう
  なら、この変数を使うこと。 (PGP only)



  66..33..113366..  ppggpp__cchheecckk__eexxiitt

  Type: boolean
  Default: yes


  設定されていると、Mutt が署名や暗号化の際に PGP サブプロセスの返り値を
  確認するようになる。非ゼロの返り値はサブプロセスの失敗を意味する。
  (PGP only)



  66..33..113377..  ppggpp__lloonngg__iiddss

  Type: boolean
  Default: no


  設定されていると 64 ビットの PGP 鍵 ID を使う。解除時はふつうの 32
  ビット鍵 ID を使う。 (PGP only)



  66..33..113388..  ppggpp__rreettaaiinnaabbllee__ssiiggss

  Type: boolean
  Default: no


  設定されていると、署名と暗号化をしてあるメッセイジの仲間として、
  multipart/encrypted パートの中に multipart/signed パートが入っていたり
  するメッセイジも含める。

  これは暗号化された署名メイリングリストのようなアプリケイションに便利
  だ。すなわち、外層 (multipart/encrypted) が簡単に取り除けるが、内側の
  multipart/signed パートは守られているというものである。 (PGP only)



  66..33..113399..  ppggpp__aauuttooiinnlliinnee

  Type: boolean
  Default: no


  このオプションは、旧式のインライン (伝統的) PGP 暗号および署名を生成す
  るかどうかを制御する。ただし特定の状況下でのみ有効だ。さらに、インライ
  ンが必要ないときには _p_g_p_-_m_e_n_u を使って上書きすることができる。

  Mutt は複数の MIME パートを含むメッセイジには自動的に PGP/MIME を使用
  する、ということを覚えておくように。また、インライン (伝統的形式) がう
  まくいかなかったときに PGP/MIME で送信するかどうかを尋ねるように設定す
  ることができる。参照: ``$pgp_mime_auto''
  なお、旧式 PGP メッセイジ形式は強強くく否否定定さされれてていいるるという点にも注意すべ
  きである。 (PGP only)



  66..33..114400..  ppggpp__rreeppllyyiinnlliinnee

  Type: boolean
  Default: no


  この変数を設定すると、インライン (伝統的形式) で暗号化/署名されたメッ
  セイジへ返信する際は、常にインラインのメッセイジを作成しようとするよう
  になる。しかしインラインが必要ないときには _p_g_p_-_m_e_n_u で上書きすることが
  できる。このオプションは、元のメッセイジがインラインかどうかを自動で検
  知するわけではない。事前に確認しフラグが立てられたメッセイジに関する
  Mutt 内部デイタを信用するだけである。

  複数の MIME パートを含むメッセイジには自動で PGP/MIME を使用するので注
  意せよ。また、インライン (伝統的形式) がうまくいかなかったときに
  PGP/MIME にするかどうかを送信前に尋ねるよう設定することができる。参照:
  ``$pgp_mime_auto''

  なお、旧式 PGP メッセイジ形式は避避けけるるよう強強くく勧められているという点に
  も注意すべきである。 (PGP only)



  66..33..114411..  ppggpp__sshhooww__uunnuussaabbllee

  Type: boolean
  Default: yes


  設定されていると、使用不可能な鍵を PGP 鍵選択メニューに表示する。これ
  には、破棄された鍵、期限切れの鍵、またユーザによって「使用不可」とされ
  た鍵が含まれる。 (PGP only)



  66..33..114422..  ppggpp__ssiiggnn__aass

  Type: string
  Default: ""


  複数の鍵ペアがあるとき、どの秘密鍵を使うかをこのオプションで指定するこ
  とができる。指定には鍵 ID 形式を使うよう推奨されている (例
  "0x00112233")。 (PGP only)



  66..33..114433..  ppggpp__ssttrriicctt__eenncc

  Type: boolean
  Default: yes


  設定されていると PGP/MIME 署名メッセイジを自動で _q_u_o_t_e_d_-_p_r_i_n_t_a_b_l_e で符
  号化する。この変数を解除すると PGP 署名が検証できなくなるかもしれない
  ので注意せよ。この変数の意味をよく理解している場合にのみ変更するよう
  に。 (訳注：日本語環境においては QP を理解しない PGP プラグインを利用
  する MUA もあるため、この変数を設定していると、相手がメッセイジを読む
  ことすらできないかもしれない。訳者はこの問題で悩んだことがあるので、解
  除しておくことを勧める。) (PGP only)

  66..33..114444..  ppggpp__ttiimmeeoouutt

  Type: number
  Default: 300


  キャッシュされたパスフレイズが使用されない場合に期限切れになるまでの秒
  数。 (PGP only)



  66..33..114455..  ppggpp__ssoorrtt__kkeeyyss

  Type: sort order
  Default: address


  PGP 鍵メニューの項目をどう整列するか指定する。以下が有効な値である。



     aaddddrreessss
        ユーザ ID でアルファベット順に整列

     kkeeyyiidd
        鍵 ID でアルファベット順に整列

     ddaattee
        鍵の作成日付で整列

     ttrruusstt
        鍵の信用度で整列


  逆順にしたければ、上記の値の頭に "reverse-" を付加する。 (PGP only)



  66..33..114466..  ppggpp__mmiimmee__aauuttoo

  Type: quadoption
  Default: ask-yes


  インライン (伝統的形式) の署名/暗号化に (いかなる理由にせよ) 失敗した
  ときに自動的に PGP/MIME で送信するか尋ねるかを、このオプションで制御す
  る。

  旧式 PGP メッセイジ形式の使用はままっったたくく推推奨奨さされれなないいことに注意。 (PGP
  only)



  66..33..114477..  ppggpp__aauuttoo__ttrraaddiittiioonnaall

  Type: boolean
  Default: no


  旧式インライン PGP で暗号化や署名をしてあるメッセイジへ返信する際は旧
  式メッセイジを生成させ、PGP/MIME メッセイジへ返信する際は PGP/MIME に
  するオプションである。ただし、 ``$crypt_replyencrypt'',
  ``$crypt_replysign'', ``$crypt_replysignencrypted'' を使っている場合に
  のみ有効である。


  さらに注意すべきことに、us-ascii 以外の文字セットや複数 MIME パートで
  構成されたメッセイジは自動的に PGP/MIME が使われる。

  このオプションは ``$pgp_create_traditional'' を上書きする。 (PGP only)



  66..33..114488..  ppggpp__ddeeccooddee__ccoommmmaanndd

  Type: string
  Default: ""


  この形式化文字列で、application/pgp 添付ファイルを復号化するためのコマ
  ンドを指定する。

  PGP コマンドの形式には独自の printf風シークウェンスがある。



     %%pp パスフレイズが必要なときには PGPPASSFD=0 と展開され、必要ないと
        きには空文字列になる。メモ: これは %? 構造にも使うことができる。

     %%ff メッセイジの入っているファイルの名前に展開される。

     %%ss multipart/signed の検証時に、署名パートの入っているファイル名に
        展開される。

     %%aa ``$pgp_sign_as'' の値。

     %%rr 鍵 ID (複数になることもある)


  世の中に出廻っている各種ヴァージョンの PGP に合わせて設定する方法の例
  は、 pgp*.rc および gpg.rc というファイルが、文書と同じあたりの
  samples/ サブディレクトリ内にインストールされているので、参照するこ
  と。 (PGP only)



  66..33..114499..  ppggpp__ggeettkkeeyyss__ccoommmmaanndd

  Type: string
  Default: ""


  Mutt が公開鍵情報を必要とするたびに起動するコマンド。 %r が、唯一ここ
  で使われる printf風シークウェンスである。 (PGP only)



  66..33..115500..  ppggpp__vveerriiffyy__ccoommmmaanndd

  Type: string
  Default: ""


  このコマンドが PGP 署名の検証に使われる。 (PGP only)



  66..33..115511..  ppggpp__ddeeccrryypptt__ccoommmmaanndd

  Type: string
  Default: ""

  このコマンドが PGP 暗号化メッセイジの復号に使われる。 (PGP only)



  66..33..115522..  ppggpp__cclleeaarrssiiggnn__ccoommmmaanndd

  Type: string
  Default: ""


  旧式の「クリア署名」による PGP メッセイジを作成するために使われる。た
  だし、この形式を使うことはままっったたくく推推奨奨さされれなないい。 (PGP only)



  66..33..115533..  ppggpp__ssiiggnn__ccoommmmaanndd

  Type: string
  Default: ""


  このコマンドを使って分離式の PGP 署名を作り、multipart/signed の
  PGP/MIME パートに使う。 (PGP only)



  66..33..115544..  ppggpp__eennccrryypptt__ssiiggnn__ccoommmmaanndd

  Type: string
  Default: ""


  このコマンドを使って、本文に署名と暗号化を両方おこなう。 (PGP only)



  66..33..115555..  ppggpp__eennccrryypptt__oonnllyy__ccoommmmaanndd

  Type: string
  Default: ""


  このコマンドを使って本文を暗号化する。署名はしない。 (PGP only)



  66..33..115566..  ppggpp__iimmppoorrtt__ccoommmmaanndd

  Type: string
  Default: ""


  このコマンドを使って、鍵をメッセイジから公開鍵束へ取り込む。 (PGP
  only)



  66..33..115577..  ppggpp__eexxppoorrtt__ccoommmmaanndd

  Type: string
  Default: ""


  このコマンドを使って、ユーザの鍵束から公開鍵を取り出す。 (PGP only)


  66..33..115588..  ppggpp__vveerriiffyy__kkeeyy__ccoommmmaanndd

  Type: string
  Default: ""


  鍵選択メニューで鍵の情報を検証するために、このコマンドを用いる。 (PGP
  only)



  66..33..115599..  ppggpp__lliisstt__sseeccrriinngg__ccoommmmaanndd

  Type: string
  Default: ""


  このコマンドで秘密鍵束の内容を一覧出力する。出力形式は gpg --list-keys
  --with-colons と同様でなくてはならない。 (訳注：詳細は gnupg の文書
  ファイル DETAILS に書かれている。)

  この形式は、Mutt に付属する pgpring ユーティリティでも生成される。
  (PGP only)



  66..33..116600..  ppggpp__lliisstt__ppuubbrriinngg__ccoommmmaanndd

  Type: string
  Default: ""


  このコマンドで公開鍵束の内容を一覧にする。出力形式は gpg --list-keys
  --with-colons と同様でなくてはならない。

  この形式は、Mutt 付属の pgpring ユーティリティでも生成される。 (PGP
  only)



  66..33..116611..  ffoorrwwaarrdd__ddeeccrryypptt

  Type: boolean
  Default: yes


  転送時における暗号化メッセイジの扱いを制御する。設定されていると、暗号
  化という外層が除去される。この変数は、``$mime_forward'' が設定され、
  ``$mime_forward_decode'' が解除されているときにのみ用いられる。 (PGP
  only)



  66..33..116622..  ssmmiimmee__ttiimmeeoouutt

  Type: number
  Default: 300


  キャッシュされたパスフレイズが使用されない場合に期限切れになるまでの秒
  数。 (S/MIME only)





  66..33..116633..  ssmmiimmee__eennccrryypptt__wwiitthh

  Type: string
  Default: ""


  暗号化に用いるアルゴリズムを設定する。有効な選択肢は "des", "des3",
  "rc2-40", "rc2-64", "rc2-128" である。設定されていないと "des3" (トリ
  プルDES) が用いられる。 (S/MIME only)



  66..33..116644..  ssmmiimmee__kkeeyyss

  Type: path
  Default: ""


  OpenSSL には PGP における鍵束のようなものがないため、Mutt は鍵や証明書
  の格納および取得を自分で扱わなければならない。この仕組みは現在のところ
  非常に簡易的なもので、鍵と証明書を二つの異なるディレクトリに格納し、と
  もに OpenSSL で取得したハッシュ値をファイル名にしている。各ディレクト
  リには index ファイルがあって、メイルアドレスと鍵 ID の組み合わせが
  入っており、自分の手で編集することができる。この変数は、秘密鍵の場所を
  指し示すものである。 (S/MIME only)



  66..33..116655..  ssmmiimmee__ccaa__llooccaattiioonn

  Type: path
  Default: ""


  OpenSSL に使うための、信用できる証明書が入ったディレクトリかファイルの
  名前を入れる。 (S/MIME only)



  66..33..116666..  ssmmiimmee__cceerrttiiffiiccaatteess

  Type: path
  Default: ""


  OpenSSL には PGP における鍵束のようなものがないため、Mutt は鍵や証明書
  の格納および取得を自分で扱わなければならない。この仕組みは現在のところ
  非常に簡易的なもので、鍵と証明書を二つの異なるディレクトリに格納し、と
  もに OpenSSL で取得したハッシュ値をファイル名にしている。各ディレクト
  リには index ファイルがあって、メイルアドレスと鍵 ID の組み合わせが
  入っており、自分の手で編集することができる。この変数は、証明書の場所を
  指し示すものである。 (S/MIME only)



  66..33..116677..  ssmmiimmee__ddeeccrryypptt__ccoommmmaanndd

  Type: string
  Default: ""


  この形式化文字列で指定したコマンドを使って application/x-pkcs7-mime
  ファイルを復号化する。

  OpenSSL コマンドの指定形式には、PGP に似た独自の printf風シークウェン
  スがある。
     %%ff メッセイジの入っているファイルの名前に展開される。

     %%ss multipart/signed の検証時に、署名パートの入っているファイル名に
        展開される。

     %%kk ``$smime_default_key'' で指定された鍵ペア。

     %%cc 証明書 ID (複数になることもある)

     %%aa 暗号化に用いるアルゴリズム。

     %%CC CA 位置: ``$smime_ca_location'' がディレクトリを指すかファイルを
        指すかにより、"-CApath ``$smime_ca_location''" か "-CAfile
        ``$smime_ca_location''" に展開される。


  この形式の設定方法の例については、smime.rc というファイルを参照せよ。
  文書のそばの samples/ サブディレクトリにインストールされている。
  (S/MIME only)



  66..33..116688..  ssmmiimmee__vveerriiffyy__ccoommmmaanndd

  Type: string
  Default: ""


  このコマンドを使って multipart/signed タイプの S/MIME 署名を検証する。
  (S/MIME only)



  66..33..116699..  ssmmiimmee__vveerriiffyy__ooppaaqquuee__ccoommmmaanndd

  Type: string
  Default: ""


  このコマンドを使って application/x-pkcs7-mime タイプの S/MIME 署名を検
  証する。 (S/MIME only)



  66..33..117700..  ssmmiimmee__ssiiggnn__ccoommmmaanndd

  Type: string
  Default: ""


  このコマンドは multipart/signed タイプの S/MIME 署名を作成するために用
  いられる。このタイプはあらゆるメイルクライアントから読める。 (S/MIME
  only)



  66..33..117711..  ssmmiimmee__ssiiggnn__ooppaaqquuee__ccoommmmaanndd

  Type: string
  Default: ""


  このコマンドは application/x-pkcs7-signature タイプの S/MIME 署名を作
  成するために用いられる。このタイプは S/MIME 拡張に対応したメイルクライ
  アントからのみ扱える。 (S/MIME only)

  66..33..117722..  ssmmiimmee__eennccrryypptt__ccoommmmaanndd

  Type: string
  Default: ""


  このコマンドは暗号化 S/MIME メッセイジを作成するために用いられる。
  (S/MIME only)



  66..33..117733..  ssmmiimmee__ppkk77oouutt__ccoommmmaanndd

  Type: string
  Default: ""


  このコマンドを用いて S/MIME 署名の PKCS7 構造を抽出する。その目的は、
  そこからさらに X509 公開証明書を抽出することにある。 (S/MIME only)



  66..33..117744..  ssmmiimmee__ggeett__cceerrtt__ccoommmmaanndd

  Type: string
  Default: ""


  PKCS7 構造から X509 証明書を抽出するために用いるコマンド。 (S/MIME
  only)



  66..33..117755..  ssmmiimmee__ggeett__ssiiggnneerr__cceerrtt__ccoommmmaanndd

  Type: string
  Default: ""


  このコマンドで署名者の X509 証明書だけを S/MIME 署名から抽出する。そう
  して証明書の所有者とメイルの From フィールドを比較できるようにするの
  だ。 (S/MIME only)



  66..33..117766..  ssmmiimmee__iimmppoorrtt__cceerrtt__ccoommmmaanndd

  Type: string
  Default: ""


  証明書を smime_keys で取り込むために使うコマンド。 (S/MIME only)



  66..33..117777..  ssmmiimmee__ggeett__cceerrtt__eemmaaiill__ccoommmmaanndd

  Type: string
  Default: ""


  このコマンドを使って、用途の検証 (証明書がその送信者のアドレス用に発行
  されたのかどうかの確認のため) と X509 証明書の格納のために用いられるメ
  イルアドレスを抽出する。 (S/MIME only)


  66..33..117788..  ssmmiimmee__ddeeffaauulltt__kkeeyy

  Type: string
  Default: ""


  署名に使う既定の鍵ペア。鍵 ID (OpenSSL が生成するハッシュ値) に設定さ
  れていないと正常に動作しない。 (S/MIME only)



  66..33..117799..  ssssll__ssttaarrttttllss

  Type: quadoption
  Default: yes


  設定されている (既定) とき、STARTTLS 能力を公言するサーバでは Mutt が
  STARTTLS を使おうとする。解除されていると、サーバの能力に関わらず
  STARTTLS を使おうとしない。



  66..33..118800..  cceerrttiiffiiccaattee__ffiillee

  Type: path
  Default: ""


  この変数で指定したファイルに、信用する証明書を保存する。未知の証明書に
  遭遇すると、受け入れるかどうか尋ねられる。受け入れると証明書がこのファ
  イルに保存され、以後の接続では自動的に受け入れられる。

  自分の手で CA 証明書をこのファイルに追加することもできる。すると、その
  CA に署名されたサーバ証明書もすべて自動的に受け入れられる。

  例: set certificate_file=~/.mutt/certificates



  66..33..118811..  ssssll__uusseessyysstteemmcceerrttss

  Type: boolean
  Default: yes


  _y_e_s に設定されていると、信用できる CA からサーバ証明書が署名されている
  かどうかを確認する際に、システム全体用の証明書格納所にあるCA 証明書を
  使う。



  66..33..118822..  eennttrrooppyy__ffiillee

  Type: path
  Default: ""


  SSL ライブラリ関数の初期化に用いる乱数デイタの入ったファイル。



  66..33..118833..  ssssll__uussee__ssssllvv22

  Type: boolean
  Default: yes
  SSL 認証処理に SSLv2 を使おうとするかどうか指定する。



  66..33..118844..  ssssll__uussee__ssssllvv33

  Type: boolean
  Default: yes


  SSL 認証処理に SSLv3 を使おうとするかどうか指定する。



  66..33..118855..  ssssll__uussee__ttllssvv11

  Type: boolean
  Default: yes


  SSL 認証処理に TLSv1 を使おうとするかどうか指定する。



  66..33..118866..  ppiippee__sspplliitt

  Type: boolean
  Default: no


  _p_i_p_e_-_m_e_s_s_a_g_e コマンドおよび "tag-prefix" 演算子との関連で用いられる。
  この変数が解除されていると、複数のタグ付けされたメッセイジをパイプする
  際に Mutt はすべて連結させて単一ファイルとしてパイプする。設定されてい
  ると、Mutt はメッセイジごとに一つずつパイプする。どちらの場合も、その
  時点での整列方法の順にメッセイジがパイプされ、 ``$pipe_sep'' が各メッ
  セイジの後に付加される。



  66..33..118877..  ppiippee__ddeeccooddee

  Type: boolean
  Default: no


  _p_i_p_e_-_m_e_s_s_a_g_e コマンドと関連して使われる。解除されていると Mutt は何も
  前処理をせずにメッセイジをパイプする。設定されていると、まずヘッダを間
  引きしたり PGP/MIME 復号化したりしようとする。



  66..33..118888..  ppiippee__sseepp

  Type: string
  Default: "\n"


  タグ付けされた複数のメッセイジを外部 Unix コマンドへパイプする際、メッ
  セイジとメッセイジの間を区切るために付加される文字列。



  66..33..118899..  ppoopp__aauutthheennttiiccaattoorrss

  Type: string
  Default: ""
  コロン区切りで列挙された認証方法。POP サーバにログインするために、その
  順で試行する。認証方法は "user", "apop" およびいずれかの SASL 機構、た
  とえば "digest-md5" や "gssapi", "cram-md5" である。このパラメータは大
  文字と小文字を区別しない。もし設定されていなければ (既定)、Mutt はあら
  ゆる利用可能な方法を、最も安全なものから始めて、最も安全でないものまで
  試行する。

  例: set pop_authenticators="digest-md5:apop:user"



  66..33..119900..  ppoopp__aauutthh__ttrryy__aallll

  Type: boolean
  Default: yes


  設定されていると、Mutt は利用可能な方法をすべて試行する。解除されてい
  ると、前の方法が利用できなかったときにのみ他の認証方法に移る。認証方法
  は利用できるけれども認証が失敗したという場合には、 POP サーバへの接続
  をやめるのだ。



  66..33..119911..  ppoopp__cchheecckkiinntteerrvvaall

  Type: number
  Default: 60


  この変数は、何秒ごとに POP で新着メイルを探すかを調整する。



  66..33..119922..  ppoopp__ddeelleettee

  Type: quadoption
  Default: ask-no


  設定されていると、fetch-mail 関数を使って POP サーバからダウンロードす
  ることに成功したメッセイジを削除する。解除されていると、メッセイジはダ
  ウンロードするものの、 POP サーバにも残しておく。



  66..33..119933..  ppoopp__hhoosstt

  Type: string
  Default: ""


  fetch-mail 関数の POP サーバ名。次のように、代替ポート、ユーザ名、パス
  ワードも指定することができる。

  [pop[s]://][ユーザ名[:パスワード]@]サーバ[:ポート]



  66..33..119944..  ppoopp__llaasstt

  Type: boolean
  Default: no



  この変数が設定されていると、fetch-mail 関数の使用時に POP コマンド
  "LAST" を使って POP サーバから未読メッセイジのみを取得しようとする。



  66..33..119955..  ppoopp__rreeccoonnnneecctt

  Type: quadoption
  Default: ask-yes


  POP サーバとの接続が切れたときに再接続を試みるかどうかを制御する。



  66..33..119966..  ppoopp__uusseerr

  Type: string
  Default: ""


  POP サーバへのログイン名。

  既定ではロウカルマシンでのユーザ名になる。



  66..33..119977..  ppoopp__ppaassss

  Type: string
  Default: ""


  POP アカウントのパスワードを指定する。設定されていないと、 POP メイル
  ボックスを開くときにパスワードの入力を求める。警警告告: このオプションは、
  確実に安全なマシンでのみ使うべきである。自分しか読めないファイルであっ
  ても、スーパユーザは読むことができるからだ。



  66..33..119988..  ppoosstt__iinnddeenntt__ssttrriinngg

  Type: string
  Default: ""


  ``$attribution'' 変数と似ており、 Mutt はこの文字列を、返信するメッセ
  イジの引用のあとに追加する。



  66..33..119999..  ppoossttppoonnee

  Type: quadoption
  Default: ask-yes


  メッセイジをその場で送らないことにした際に ``$postponed'' メイルボック
  スへ保存するかどうかを制御する。



  66..33..220000..  ppoossttppoonneedd

  Type: path
  Default: "~/postponed"
  編集中のメッセイジは、いつまででも送信を ``延期 (postpone)'' しておく
  ことができる。延期することにした際、Mutt はこの変数で指定されたメイル
  ボックスに保存する。これに関しては ``$postpone'' も参照のこと。



  66..33..220011..  pprreeccoonnnneecctt

  Type: string
  Default: ""


  設定されていると、サーバとの接続を確立できなかったときにこのシェルコマ
  ンドが実行される。これは ssh(1) などで安全な接続経路を作るために使え
  る。もしコマンドが非ゼロの結果を返すなら、Mutt はそこでサーバを開くこ
  とをあきらめる。例:

  preconnect="ssh -f -q -L 1234:example.net:143 example.net sleep 20 <
  /dev/null > /dev/null"

  example.net のメイルボックス 'foo' は、これで '{localhost:1234}foo' と
  して扱うことができる。

  注意: この例がうまくいくためには、このリモウトマシンにパスワードなしで
  ログインできなくてはならない。



  66..33..220022..  pprriinntt

  Type: quadoption
  Default: ask-no


  印刷前に確認を求めるかどうかを制御する。 (訳注：no にすると印刷できな
  くなる。yes にすると確認せずに印刷する。 ask-yes や ask-no にすると確
  認する。) よく間違って "p" を押してしまう (私のような) 人に有用であ
  る。



  66..33..220033..  pprriinntt__ccoommmmaanndd

  Type: path
  Default: "lpr"


  これに指定したコマンドへパイプしてメッセイジを印刷する。



  66..33..220044..  pprriinntt__ddeeccooddee

  Type: boolean
  Default: yes


  print-message コマンドと関連して用いられる。このオプションが設定されて
  いるとメッセイジを復号化してから外部コマンド ``$print_command'' に渡
  す。解除されていると、何の処理もせずにメッセイジを印刷する。後者は、メ
  イルメッセイジを印刷にふさわしく整形することのできる高度なプリンタフィ
  ルタを使っている場合に有用であろう。




  66..33..220055..  pprriinntt__sspplliitt

  Type: boolean
  Default: no


  print-message コマンドとの関連で用いる。設定されていると、
  ``$print_command'' で指定されたコマンドが、印刷メッセイジごとに毎回実
  行される。解除されていると、``$print_command'' は一度だけ実行され、
  メッセイジがすべて連結される。その際、フォームフィード (訳注：0x0a や
  \f として知られるもの) がメッセイジの区切りとして使われる。

  eennssccrriipptt(1) プログラムのメイル印刷モウドを使っている人はこのオプション
  を設定したいと思うはずだ。



  66..33..220066..  pprroommpptt__aafftteerr

  Type: boolean
  Default: yes


  外部``ペイジャ''を使っている場合、この変数を設定しておくと、ペイジャ終
  了時にインデックスメニューへ戻らず、コマンド入力を求めるようになる。解
  除されていると、すぐインデックスメニューに戻る。



  66..33..220077..  qquueerryy__ccoommmmaanndd

  Type: path
  Default: ""


  この変数で指定したコマンドを使ってアドレスの外部問い合わせをおこなう。
  この文字列には %s を含むべきで、その部分がユーザの入力する問い合わせ文
  字列に置換される。より詳細な情報は ``アドレスの外部問い合わせ''を参
  照。



  66..33..220088..  qquuiitt

  Type: quadoption
  Default: yes


  この変数は、"quit" と "exit" が実際に Mutt を終了させるかどうかを制御
  する。終了させようとしたとき、 yes に設定されていると終了させ、no に設
  定されていると無効で、 ask-yes か ask-no に設定されていると確認を求め
  られる。



  66..33..220099..  qquuoottee__rreeggeexxpp

  Type: regular expression
  Default: "^([ \t]*[|>:}#])+"


  内部ペイジャで、メッセイジ本文の引用部分を見極めるために使う正規表現。

  注注意意:: 内部ペイジャで _q_u_o_t_e_dxx のような着色パターンを使うためには、引用
  行の冒頭の引用文字に正確に合致する正規表現を設定する必要がある。 (訳
  注：すなわち、引用記号全体に合致し、かつ、引用記号のみに合致する表現で
  なくてはならない。 "> > >" のような多層になった引用であっても、この正
  規表現ひとつで合致する必要があるのだ。)



  66..33..221100..  rreeaadd__iinncc

  Type: number
  Default: 10


  0 より大きな値に設定されていると、メイルボックス読み出し中に Mutt が現
  在どのメッセイジまで来たのかを表示するようになる。その表示は _r_e_a_d___i_n_c
  通のメッセイジが読み出されるたびにおこなわれる (たとえば 25 だと、25
  番目のメッセイジを読んだときに表示し、さらにまた 50 番目のときにも表示
  する)。この変数の意味は、時間のかかる大きなメイルボックスを読み出す際
  に、進行状況を示すということだ。 0 に設定されているときは、メイルボッ
  クスの読み出し前にひとつメッセイジが表示されるだけになる。

  ``$write_inc'' 変数も参照のこと。



  66..33..221111..  rreeaadd__oonnllyy

  Type: boolean
  Default: no


  設定されていると、フォルダがすべて読み出し専用モウドで開かれる。



  66..33..221122..  rreeaallnnaammee

  Type: string
  Default: ""


  メッセイジ送信時に使う「本名」すなわち「個人名」を指定する。

  既定では /etc/passwd の GECOS フィールドになる。なお、ユーザが
  ``$from'' に本名を設定しているとこの変数が使われないので注意。



  66..33..221133..  rreeccaallll

  Type: quadoption
  Default: ask-yes


  新規メッセイジを作成する際に、延期メッセイジから続けるかどうかを制御す
  る。 ``$postponed'' も参照。

  この変数を "yes" に設定することが一般的に有用であるとは言えないので、
  そのような設定は推奨されていない。 (訳注："yes" だと、ひとつでも延期さ
  れているメッセイジがあると、いつまでも新規メッセイジが作成できなくな
  る。返信はできる。)



  66..33..221144..  rreeccoorrdd

  Type: path
  Default: ""
  送信メッセイジをどのファイルに追加して保存すべきかを指定する。 (これは
  メッセイジのコピーを保存する基本的な方法であるが、ほかにも、``my_hdr''
  コマンドで自分のメイルアドレスの _B_c_c_: フィールドを作成するという方法も
  ある。)

  _`_`_$_r_e_c_o_r_d_'_' の値は、 ``$force_name'' および ``$save_name'' 変数、また
  ``fcc-hook'' コマンドにより上書きされる。 (訳注：さらに、この変数は
  Fcc ヘッダの既定値に過ぎないので、 Fcc を変更すれば上書きされる。Fcc
  と ``$record'' の両方に保存されるわけではないので注意。)



  66..33..221155..  rreeppllyy__rreeggeexxpp

  Type: regular expression
  Default: "^(re([\[0-9\]+])*|aw):[ \t]*"


  返信メッセイジを認識するための正規表現。スレッドを作ったり返信したりす
  るときに使う。既定値は英語の "Re:" とドイツ語の "Aw:" に対応してい
  る。(訳注：ただし、Re[3]: や Re3: には合致するが Aw[3]: や Aw3: には合
  致しない。)



  66..33..221166..  rreeppllyy__sseellff

  Type: boolean
  Default: no


  解除されていると、自分で送ったメッセイジに返信する際に返信したい相手
  は、そのメッセイジの宛先であって自分ではないものとみなす。



  66..33..221177..  rreeppllyy__ttoo

  Type: quadoption
  Default: ask-yes


  (訳注：ask-yes か ask-no に) 設定されていると、返信しようとする際に
  メッセイジの Reply-To: ヘッダフィールドで挙げられているアドレスを使い
  たいかどうかを聞いてくる。no と答えると From: ヘッダフィールドのアドレ
  スを代わりに用いる。このオプションは、Reply-To: ヘッダフィールドをリス
  トのアドレスに設定してくるメイリングリストを読んでいて、メッセイジの送
  信者へ個人的にメッセイジを送りたい場合に便利である。



  66..33..221188..  rreessoollvvee

  Type: boolean
  Default: yes


  設定されているときには、メッセイジを変更するコマンドが実行されるとカー
  ソルが自動で進み、(あれば) 次の未削除メッセイジへ動く。



  66..33..221199..  rreevveerrssee__aalliiaass

  Type: boolean
  Default: no
  この変数は、メッセイジの送信者に合致するエイリアスがあるときに、エイリ
  アスの「個人名」部分をインデックスメニューで表示するかどうかを制御す
  る。例として、次のエイリアスがあるとする。




       alias juser abd30425@somewhere.net (Joe User)




  そして、このようなヘッダを含むメイルを受け取ったとする。




       From: abd30425@somewhere.net




  すると、(訳注：$reverse_alias が yes のときには) インデックスメニュー
  に "abd30425@somewhere.net" ではなく "Joe User" と表示されるであろう。
  これは、その人物のメイルアドレスが人間向きでない (CompuServe のアドレ
  スのような) ときに便利である。



  66..33..222200..  rreevveerrssee__nnaammee

  Type: boolean
  Default: no


  メイルをあるマシンで受信し、別のマシンへ移して、そこから返信するという
  ことが時々あるかもしれない。この変数が設定されていると、既定の _F_r_o_m_:
  行が、返信したいメッセイジを受け取ったアドレスを使って作成される。変数
  が設定されていないと、 _F_r_o_m_: 行には返信時のマシンのアドレスが使われ
  る。



  66..33..222211..  rreevveerrssee__rreeaallnnaammee

  Type: boolean
  Default: yes


  この変数は ``reverse_name'' 機能の動作を微調整する。設定されていると
  Mutt は受信メッセイジのアドレスをそのまま使う。そこには本名も含まれて
  いるかもしれない。解除されていると、そうした本名部分を ``realname'' 変
  数の設定で上書きするようになる。



  66..33..222222..  rrffcc22004477__ppaarraammeetteerrss

  Type: boolean
  Default: no


  この変数が設定されていると、RFC-2047 で符号化された MIME パラメータを
  復号化する。Mutt が添付ファイルを
  =?iso-8859-1?Q?file=5F=E4=5F991116=2Ezip?= のようなファイル名で保存す
  るよう提案してくるときには、この変数を設定したいと思うであろう。
  この変数を実行中に設定したときには、フォルダを変更するまで望み通りの効
  果はあらわれない。

  注意すべき点がある。このような RFC 2047 符号化方式の使い方は、その規格
  によって明示的に禁止されていること、しかしながら実際にはよく見かけると
  いうことだ。加えて、このパラメータを設定しても Mutt がこのような符号化
  ファイル名を生成するという効果はないという点にも注意せよ。そうではな
  く、Mutt は常に RFC 2231 で指示されている符号化方式を用いる。



  66..33..222233..  ssaavvee__aaddddrreessss

  Type: boolean
  Default: no


  設定されていると、メイルを保存する既定フォルダに送信者のアドレス全体を
  使う。 ``$save_name'' や ``$force_name'' も設定されていると、 Fcc フォ
  ルダの選択も変わる。



  66..33..222244..  ssaavvee__eemmppttyy

  Type: boolean
  Default: yes


  解除されていると、メッセイジの保存されていないメイルボックスが、閉じる
  ときに削除される (例外は ``$spoolfile'' である。これはどんな場合にも削
  除されない)。設定されていると、どのメイルボックスも削除されない。

  注注意意:: これが適用されるのは mbox と MMDF のフォルダのみであり、 Mutt が
  MH や Maildir のディレクトリを削除することはない。



  66..33..222255..  ssaavvee__nnaammee

  Type: boolean
  Default: no


  この変数は、どのように送信メッセイジのコピーを保存するかを制御する。設
  定されているときには、宛先アドレスで指定されるメイルボックスがあるかど
  うかを確認する (これは ``$folder'' ディレクトリ内で、アドレスのユーザ
  名部分に該当するメイルボックスを検索することによる)。そのメイルボック
  スが存在していれば、送信メッセイジはそこに保存される。存在しなければ
  ``$record'' メイルボックスに保存される。

  ``$force_name'' 変数も参照。



  66..33..222266..  ssccoorree

  Type: boolean
  Default: yes


  この変数が _n_o のときには得点付けが停止される。
  ``$score_threshold_delete'' や同じような変数を使っているときに、これを
  使えばある特定のフォルダで得点付けを無効にすることができて便利かもしれ
  ない。

  66..33..222277..  ssccoorree__tthhrreesshhoolldd__ddeelleettee

  Type: number
  Default: -1


  得点がこの値以下のメッセイジは、自動的に削除予定の印が付けられる。
  Mutt のスコアは常にゼロ以上なので、既定の設定ではいかなるメッセイジも
  削除予定にされることはない。



  66..33..222288..  ssccoorree__tthhrreesshhoolldd__ffllaagg

  Type: number
  Default: 9999


  割り当てられた得点がこの変数の値以上になるメッセイジには自動的に「重
  要」フラグが付けられる。



  66..33..222299..  ssccoorree__tthhrreesshhoolldd__rreeaadd

  Type: number
  Default: -1


  メッセイジに、この変数と同じかそれより小さい得点が付いたとき、Mutt が
  既読として印付ける。Mutt では得点が常にゼロかゼロ以上なので、既定の設
  定でメッセイジを既読にしてしまうことはありえない。



  66..33..223300..  sseenndd__cchhaarrsseett

  Type: string
  Default: "us-ascii:iso-8859-1:utf-8"


  送信メッセイジの文字セットを列挙する。 Mutt は、その文字セットへ正しく
  文章を変換できた最初のものを使う。 (訳注：``$charset'' から
  $send_charset へ変換する。) もし ``$charset'' が iso-8859-1 でなく、し
  かも宛先の人が UTF-8 を理解できないのであれば、適切な、広く用いられて
  いる標準的な文字セット (iso-8859-2, koi8-r, iso-2022-jp など) を
  "iso-8859-1" の代わり、あるいはその後に含めることが推奨されている。
  (訳注：MS の似非 iso-2022-jp を送信しなくてはならないとしても、この変
  数には iso-2022-jp と指定すべきであろう。その場合には ``iconv-hook''
  で調整する。)



  66..33..223311..  sseennddmmaaiill

  Type: path
  Default: "/usr/sbin/sendmail -oem -oi"


  Mutt で送信するメイルの配送に用いられるプログラムと引数を指定する。
  Mutt は、続く引数をこのプログラムが宛先アドレスとして解釈するものと想
  定している。




  66..33..223322..  sseennddmmaaiill__wwaaiitt

  Type: number
  Default: 0


  ``$sendmail'' プロセスが終わるのをあきらめて配送をバックグラウンドへ追
  いやるまで待つ秒数。

  Mutt はこの変数の値を以下のように解釈する。


     >>00 sendmail の終了を待つ秒数

     00  sendmail の終了をいつまでも待ち続ける

     <<00 常に sendmail をバックグラウンドで実行し、待たない


  注意すべき点がある。もしも 0 以外の値を指定すると、sendmail 子プロセス
  の出力が一時ファイルへ置かれることになるのだ。何かエラーがあった場合に
  は、その出力がどこにあるかを知らされることになる。



  66..33..223333..  sshheellll

  Type: path
  Default: ""


  内部でサブシェルを実行する際に使うコマンド。既定では、/etc/passwd を見
  てユーザのログインシェルを用いる。



  66..33..223344..  ssiigg__ddaasshheess

  Type: boolean
  Default: yes


  設定されていると、"-- " という行が ``署名 ($signature)'' の前に挿入さ
  れる。署名が名前だけでない限りこの変数を解除しないことを、強強くく推奨す
  る。その理由は、多くのソフトウェアが "-- \n" を使って署名を検出するか
  らである。例えば Mutt は内蔵ペイジャで署名を別の色に目立たせる能力を
  持っている。



  66..33..223355..  ssiigg__oonn__ttoopp

  Type: boolean
  Default: no


  設定されていると署名が引用文や転送文の前に付けられる。この変数を設定す
  ることの意味をよく理解し、ネチケットの番人たちの憤りを買う準備ができて
  いるのでない限り、この変数は設定しないよう強強くく推奨されている。



  66..33..223366..  ssiiggnnaattuurree

  Type: path
  Default: "~/.signature"
  署名のファイル名を指定する。この署名はあらゆる送信メッセイジに付加され
  る。ファイル名がパイプ ("|") で終わっていると、ファイル名がシェルコマ
  ンドとみなされ、その標準出力から読み出される。



  66..33..223377..  ssiimmppllee__sseeaarrcchh

  Type: string
  Default: "~f %s | ~s %s"


  単純検索を実際の検索パターンへ展開する方法を指定する。単純検索とは ~
  演算子を含まない検索のことだ。検索パターンに関してさらに情報を得るには
  ``「パターン」''の節を参照せよ。

  たとえば、検索や表示制限の入力時にただ joe とだけ入力すると、 Mutt は
  自動でこの変数の値へ展開し、既定値ではこうなる。

  ~f joe | ~s joe



  66..33..223388..  ssmmaarrtt__wwrraapp

  Type: boolean
  Default: yes


  内部ペイジャで画面幅より長い行を表示する方法を制御する。設定されている
  と、長い行は語の区切りで折り返される (訳注：英語ではスペイスで語が区切
  られるので実装可能なのである)。解除されていると、単純に画面の端で折り
  返される。 ``$markers'' 変数も参照のこと。



  66..33..223399..  ssmmiilleeyyss

  Type: regular expression
  Default: "(>From )|(:[-^]?[][)(><}{|/DP])"


  ペイジャがこの変数を使って、 ``$quote_regexp'' のよくある誤検出を補正
  する。おもに、行頭に顔文字 (smileys) がある場合である。



  66..33..224400..  sslleeeepp__ttiimmee

  Type: number
  Default: 1


  フォルダからフォルダへ移動する際にメッセイジを元のフォルダから消去した
  あと、通知メッセイジを表示するための停止時間。秒数で指定する。既定では
  一秒間だけ止まって表示する。それで、このオプションをゼロにすると停止し
  なくなる。(訳注：すぐに再描画されるので読むことができなくなる。)



  66..33..224411..  ssoorrtt

  Type: sort order
  Default: date


  インデックスメニューでメッセイジを整列する方法を指定する。正しい値は以
  下の通り。




          date すなわち date-sent
          date-received
          from
          mailbox-order (整列なし)
          score
          size
          subject
          threads
          to




  これに加えて、reverse- を頭に付けることで逆順に整列させることができる
  (例: set sort=reverse-date-sent)。



  66..33..224422..  ssoorrtt__aalliiaass

  Type: sort order
  Default: alias


  エイリアスメニューの項目を整列する方法を指定する。以下が適正な値であ
  る。




          address (メイルアドレスでアルファベット順に整列)
          alias (エイリアス名でアルファベット順に整列)
          unsorted (.muttrc で指定された順番のまま)





  66..33..224433..  ssoorrtt__aauuxx

  Type: sort order
  Default: date


  スレッドで整列しているとき、スレッドどうしをどのように比較・整列するか
  を、この変数で制御する。また、スレッド内の分岐した枝どうしを整列する方
  法も制御する。この変数には、``$sort'' で使える値をどれでも使うことがで
  きるが、threads は無効である (この場合、Mutt は単に date-sent を使
  う)。また、reverse- に加えて last- 接頭辞も指定することができる。ただ
  し、last- は reverse- の後に来なくてはならない。この last- 接頭辞は、
  兄弟どうしのメッセイジをそれぞれの一番下の子孫で比較させるもので、その
  「一番下」を決定するために sort_aux の残りの部分を使う。たとえば set
  sort_aux=last-date-received の意味は、あるスレッドに新着メッセイジが届
  くと、そのスレッドが最後に表示されるということである (set
  sort=reverse-threads してあれば最初になる)。注意: ``$sort'' が逆順指定
  だと、 ``$sort_aux'' もまた逆順になってしまう (これは正しい動作ではな
  いが、既存の設定をだめにしてしまわないよう、放置されている)。 (訳
  注：sort=reverse-threads で sort_aux=date だと、スレッド内の各メッセイ
  ジが reverse-date のような順番に整列されるということ。)

  66..33..224444..  ssoorrtt__bbrroowwsseerr

  Type: sort order
  Default: subject


  ファイルブラウザで項目をどのように整列するかを指定する。既定ではアル
  ファベット順に整列される。正しい値は次のとおり。




          alpha (アルファベット順)
          date
          size
          unsorted




  これに reverse- 接頭辞を付けて逆順に整列させることもできる (例: set
  sort_browser=reverse-date)。



  66..33..224455..  ssoorrtt__rree

  Type: boolean
  Default: yes


  この変数が有効なのは、スレッドで整列していて ``$strict_threads'' が解
  除されているときだけである。そのような場合には Mutt の使う発見的手法が
  変わり、メッセイジを題名でスレッドにするようになる。sort_re が設定され
  ていると、あるメッセイジを題名で別のメッセイジの子どもと判断してスレッ
  ドに入れるのは、その題名が ``$reply_regexp'' の設定と合致する文字列で
  始まっているものだけである。 sort_re が解除されていると、それ以外のも
  のも、 ``$reply_regexp'' でない部分が同じである限りスレッドに入れてし
  まう。



  66..33..224466..  ssppoooollffiillee

  Type: path
  Default: ""


  スプールメイルボックスが既定と違う場所にあって Mutt が見付けられないな
  ら、その場所をこの変数で指定することができる。設定されていないと、Mutt
  は自動的に環境変数 $MAIL の値にする。



  66..33..224477..  ssttaattuuss__cchhaarrss

  Type: string
  Default: "-*%A"


  ``$status_format'' の "%r" で使われる文字を制御する。メイルボックスに
  変更がないときは最初の文字が用いられる。二番目はメイルボックスが変更さ
  れて同期が必要なときに使われる。三番目の文字が使われるのは、メイルボッ
  クスが読み出し専用モウドの場合、すなわち、そのメイルボックスを抜ける際
  に書き込まれない場合である (変更を書き込むかどうかは toggle-write 関数
  で切替できる。これは既定では "%" に割り当てられている)。四番目はフォル
  ダがメッセイジ添付モウドで開かれていることを示すために用いられる (この
  モウドでは、新規メッセイジ作成や返信、転送などの動作が禁止されてい
  る)。



  66..33..224488..  ssttaattuuss__ffoorrmmaatt

  Type: string
  Default: "-%r-Mutt: %f [Msgs:%?M?%M/?%m%?n? New:%n?%?o? Old:%o?%?d?
  Del:%d?%?F? Flag:%F?%?t? Tag:%t?%?p? Post:%p?%?b? Inc:%b?%?l?
  %l?]---(%s/%S)-%>-(%P)---"


  インデックスメニューで表示されるステイタス行の書式を制御する。この文字
  列は ``$index_format'' と似ているが、独自の printf()風シークウェンスを
  持っている。



     %%bb 新着メイルのある``メイルボックス''の数 *

     %%dd 削除メッセイジの数 *

     %%ff メイルボックスのフルパス名

     %%FF フラグ付きメッセイジの数 *

     %%hh ロウカルのホスト名

     %%ll メイルボックスのバイト数 *

     %%LL 表示されるメッセイジのバイト数 (すなわち、表示制限で隠されていな
        いものの合計サイズ) *

     %%mm メイルボックス内のメッセイジ数 *

     %%MM 表示されるメッセイジの数 (すなわち、表示制限で隠されていないもの
        の数) *

     %%nn メイルボックス内の新着メッセイジ数 *

     %%oo 古い未読メッセイジの数 *

     %%pp 延期メッセイジの数 *

     %%PP 現在位置の、インデックス中におけるパーセンテイジ

     %%rr 変変更更//書書込込//メメッッセセイイジジ添添付付 を ``$status_chars'' に基づいて示す

     %%ss 整列のモウド (``$sort'')

     %%SS 補助整列モウド (``$sort_aux'')

     %%tt タグ付きメッセイジの数 *

     %%uu 未読メッセイジの数 *

     %%vv Mutt ヴァージョン文字列

     %%VV 表示制限パターン (有効なものがあれば) *

     %%>>XX
        残りの文字列を右寄せして間を "X" で詰める


     %%||XX
        行の最後まで "X" で詰める


  * = 非ゼロのときのみ表示するようにできる

  上記シークウェンスの中には、値が非ゼロのときのみ選択的に文字列を表示す
  るという使い方のできるものがある。たとえば、フラグ付きメッセイジの数
  は、そのようなメッセイジが存在するときにのみ見たいと思うだろう。ゼロに
  は特に意味があるわけではないのだから。そのように上記シークウェンスに基
  づいて選択的に文字列を表示するには、次のような構造が使われる。

  %?<シークウェンス文字>?<選択的文字列>?

  ここで、シークウェンス文字の部分には上記の表にある文字が入る。選択的文
  字列の部分は、そのシークウェンスが非ゼロのときに表示したい文字列であ
  る。選択的文字列には他のシークウェンスも普通の文章も含めることがででききるる
  が、選択的文字列を再帰的に使用することはででききなないい。

  メイルボックス中にある新着メッセイジの数を選択的に表示する方法を説明す
  る例を次に挙げる: %?n?%n new messages.?

  加えて、二つの文字列を選択することもできる。第一の文字列は値がゼロのと
  き、第二の文字列は値が非ゼロのときである。これには次の構造を用いる:
  %?<シークウェンス文字>?<ゼロ文字列>&<非ゼロ文字列>?

  さらに、どの printf風シークウェンスに対しても、結果を強制的に小文字に
  することができる。これはシークウェンス文字の前にアンダスコア (_) 記号
  を付ければ良い。たとえば、ロウカルのホスト名を小文字で表示したいなら
  %_h とする。

  シークウェンス文字の前にコロン (:) 文字を付けると、Mutt は展開結果中の
  ドット (.) をアンダスコアに置換する。これは、フォルダ名にドットを使え
  ない IMAP フォルダで役立つかもしれない。 (訳注：$status_format という
  よりは、 ``save-hook'' などで使うことを想定しているのであろう。)



  66..33..224499..  ssttaattuuss__oonn__ttoopp

  Type: boolean
  Default: no


  この変数を設定すると「ステイタスバー」が画面の下のほうではなく一番上の
  行に表示されるようになる。



  66..33..225500..  ssttrriicctt__tthhrreeaaddss

  Type: boolean
  Default: no


  設定されていると、スレッドで``整列''する際のスレッド構築に "In-Reply-
  To" と "References" フィールドだけを用いる。既定では、同じ題のメッセイ
  ジが「擬似スレッド」として一括りにされる。これが常に望ましいとは言えな
  い。たとえば私的なメイルのメイルボックスで、「こんにちは」というような
  題の無関係なメッセイジがすべて一括りにされてしまうような場合もある。






  66..33..225511..  ssuussppeenndd

  Type: boolean
  Default: yes


  _n_o のときは、ユーザが端末の _s_u_s_p キーを押しても Mutt が停止しない。そ
  のキーは通常 "control-Z" である。これが便利なのは Mutt を xterm -e
  mutt のようなコマンドで xterm 内に実行している場合である。(訳注：この
  ような場合に C-z を押してしまったら、別の端末から killall -CONT mutt
  などとして CONT シグナルを送る必要がある。)



  66..33..225522..  tteexxtt__fflloowweedd

  Type: boolean
  Default: no


  設定されていると Mutt は text/plain; format=flowed 添付ファイルを生成
  する。この形式は通常の形式よりも一部のメイリングソフトウェアから扱いや
  すいが、一般的には通常の文書と同じように見える。ただし、実際にこの形式
  の特徴を活用するには、エディタの対応が必要になる。

  このオプションが設定されていると ``$indent_string'' が無視されるので注
  意すること。



  66..33..225533..  tthhrreeaadd__rreecceeiivveedd

  Type: boolean
  Default: no


  設定されていると、メッセイジを題名でスレッドにする際に送信日付ではなく
  受信日付を使用する。



  66..33..225544..  tthhoorroouugghh__sseeaarrcchh

  Type: boolean
  Default: no


  _~_b と _~_h の検索に影響する。これらの意味は``「パターン」''の節に記述さ
  れている。この変数が設定されていると、検索するメッセイジのヘッダや添付
  ファイルが復号化されてから検索される。解除されているとフォルダにあるま
  まで検索される。 (訳注：日本語の場合は、この変数を設定しないと使いもの
  にならない。)



  66..33..225555..  ttiillddee

  Type: boolean
  Default: no


  設定されていると、内部ペイジャは画面の下端まで空行をティルド (~) で詰
  める。



  66..33..225566..  ttiimmeeoouutt

  Type: number
  Default: 600


  Mutt は、キーが押されるのをこの変数の秒数だけメインメニュー (訳注：イ
  ンデックスメニュー) で待ち続け、それを過ぎると、キーを押さなくても新着
  メイルを確認する。ゼロか負の値の場合にはいつまでも確認せずに待ち続け
  る。



  66..33..225577..  ttmmppddiirr

  Type: path
  Default: ""


  この変数で、メッセイジの表示や作成に必要な一時ファイルを Mutt が置く場
  所を指定することができる。設定されていないときには環境変数 TMPDIR が用
  いられる。TMPDIR も設定されていないなら "/tmp" が用いられる。



  66..33..225588..  ttoo__cchhaarrss

  Type: string
  Default: " +TCFL"


  自分に来たメイルを示すために使われる文字を制御する。一番目の文字は、メ
  イルが自分のアドレスに宛てられて「いない」ときに使われる (既定: スペイ
  ス)。二番目は自分がそのメッセイジ唯一の宛先である場合に用いられる (既
  定: +)。三番目は、自分のアドレスが TO ヘッダフィールドにあるものの、自
  分以外にも宛てられているというメッセイジに使われる (既定: T)。四番目の
  文字が使われるのは、自分のアドレスが CC ヘッダフィールドに指定されてい
  て他の人にも宛てられている場合である (既定: C)。五番目の文字はメイルの
  送信者が自分であるという場合に用いられる (既定: F)。六番目の文字は、メ
  イルが購読メイリングリストに送られていることを示すために使われる (既
  定: L)。



  66..33..225599..  ttuunnnneell

  Type: string
  Default: ""


  この変数を設定すると Mutt がソケットではなくコマンドへのパイプを開く。
  これを使って、IMAP/POP3 サーバへの認証済み接続を作ることができる。例:

  tunnel="ssh -q mailhost.net /usr/local/libexec/imapd"

  注意: この例がうまくいくには、リモウトマシンにパスワードの入力なしでロ
  グインすることができなくてはならない。 (訳注：ssh-agent などを使う。)



  66..33..226600..  uussee__88bbiittmmiimmee

  Type: boolean
  Default: no


  警警告告:: 自分の使っているヴァージョンの sendmail が -B8BITMIME フラグに対
  応している (sendmail 8.8.x など) のでない限り、この変数を設定してはい
  けない。さもないとメイルを送れなくなってしまう。

  _y_e_s に設定されているとき、8ビットのメッセイジ送信時に Mutt は
  ``$sendmail'' を -B8BITMIME フラグ付きで起動して ESMTP 通信を有効にす
  る。



  66..33..226611..  uussee__ddoommaaiinn

  Type: boolean
  Default: yes


  設定されていると Mutt はすべてのロウカルアドレス (@host 部分のないも
  の) を ``$hostname'' の値で補完する。解除すると、どのアドレスもそのま
  まにする。



  66..33..226622..  uussee__ffrroomm

  Type: boolean
  Default: yes


  _y_e_s のときはメッセイジ送信時に "From:" ヘッダフィールドを Mutt が生成
  する。_n_o だと、ユーザが明示的に ``my_hdr'' コマンドで設定しないと生成
  されない。



  66..33..226633..  uussee__iippvv66

  Type: boolean
  Default: yes


  設定されているとき、Mutt は接続しようとするホストの IPv6 アドレスを調
  べる。このオプションが解除されていると、 IPv4 アドレスだけに絞って動作
  する。通常は既定値で問題なく動くはずだ。



  66..33..226644..  uusseerr__aaggeenntt

  Type: boolean
  Default: yes


  設定されていると、Mutt は "User-Agent" ヘッダを送信メッセイジに付加す
  る。これはどのヴァージョンの Mutt を使って作成されたのかを示すものであ
  る。



  66..33..226655..  vviissuuaall

  Type: path
  Default: ""


  内蔵エディタの _~_v コマンドで起動するヴィジュアルエディタを指定する。

  66..33..226666..  wwaaiitt__kkeeyy

  Type: boolean
  Default: yes


  Mutt が _s_h_e_l_l_-_e_s_c_a_p_e, _p_i_p_e_-_m_e_s_s_a_g_e, _p_i_p_e_-_e_n_t_r_y, _p_r_i_n_t_-_m_e_s_s_a_g_e, _p_r_i_n_t_-
  _e_n_t_r_y コマンドのあとにキー押下を求めるかどうかを制御する。

  また、``auto_view'' で添付ファイルを閲覧する際にも、対応する mailcap
  項目に _n_e_e_d_s_t_e_r_m_i_n_a_l フラグがあって外部プログラムが対話的に動作する場
  合は、この変数が用いられる。

  設定されていると、常にキー入力を求める。解除されていると、外部コマンド
  が非ゼロを返した場合にのみキーを待つ。



  66..33..226677..  wweeeedd

  Type: boolean
  Default: yes


  設定されていると、メッセイジの表示、転送、印刷、返信の際にヘッダを間引
  きする。



  66..33..226688..  wwrraapp__sseeaarrcchh

  Type: boolean
  Default: yes


  検索がメイルボックスの最後まで行っても続けるかどうかを制御する。

  設定されているときには最初 (または最後) のメッセイジに飛んで検索を続け
  る。解除されているときにはそこで終わる。



  66..33..226699..  wwrraappmmaarrggiinn

  Type: number
  Default: 0


  Mutt のペイジャが語単位で行を折り返す際に端末の右側に残す余白の大きさ
  を制御する。



  66..33..227700..  wwrriittee__iinncc

  Type: number
  Default: 10


  メイルボックスを書き込む際、_w_r_i_t_e___i_n_c 通ごとに進行状況を示すメッセイジ
  が表示される。 0 に設定されると、書き込み前に一度表示されるだけにな
  る。

  ``$read_inc'' 変数も参照。


  66..33..227711..  wwrriittee__bbcccc

  Type: boolean
  Default: yes


  メッセイジを送信に備える際、Mutt が Bcc ヘッダを書いておくかどうかを制
  御する。Exim ユーザはこれを使いたいであろう。 (訳注：exim は Bcc を消
  してくれないので、解除すべきだということ。)



  66..44..  関関数数

  以下は利用可能な関数の一覧です。それぞれが利用可能なマップに挙げられて
  います。既定のキー設定が取り上げられており、関数が何をするかについても
  説明されています。これらのキー割り当ては ``bind'' コマンドで変更するこ
  とができます。


  66..44..11..  ggeenneerriicc


  _g_e_n_e_r_i_c メニューは実在のメニューではなく、 _p_a_g_e_r と _e_d_i_t_o_r を除くあら
  ゆるメニューで利用できる共通の関数 (カーソル移動など) を指定するもので
  す。このメニューへの変更は、それらすべてのメニューの既定割り当てに影響
  を与えます。


  bottom-page                L   move to the bottom of the page
  current-bottom     not bound   move current entry to bottom of page
  current-middle     not bound   move current entry to middle of page
  current-top        not bound   move current entry to top of page
  enter-command              :   enter a muttrc command
  exit                       q   exit this menu
  first-entry                =   move to the first entry
  half-down                  ]   scroll down 1/2 page
  half-up                    [   scroll up 1/2 page
  help                       ?   this screen
  jump                  number   jump to an index number
  last-entry                 *   move to the last entry
  middle-page                M   move to the middle of the page
  next-entry                 j   move to the next entry
  next-line                  >   scroll down one line
  next-page                  z   move to the next page
  previous-entry             k   move to the previous entry
  previous-line              <   scroll up one line
  previous-page              Z   move to the previous page
  refresh                   ^L   clear and redraw the screen
  search                     /   search for a regular expression
  search-next                n   search for next match
  search-opposite    not bound   search for next match in opposite direction
  search-reverse         ESC /   search backwards for a regular expression
  select-entry             RET   select the current entry
  shell-escape               !   run a program in a subshell
  tag-entry                  t   toggle the tag on the current entry
  tag-prefix                 ;   apply next command to tagged entries
  top-page                   H   move to the top of the page



  66..44..22..  iinnddeexx




  bounce-message             b   remail a message to another user
  change-folder              c   open a different folder
  change-folder-readonly ESC c   open a different folder in read only mode
  check-traditional-pgp  ESC P   check for classic pgp
  clear-flag                 W   clear a status flag from a message
  copy-message               C   copy a message to a file/mailbox
  create-alias               a   create an alias from a message sender
  decode-copy            ESC C   decode a message and copy it to a file/mailbox
  decode-save            ESC s   decode a message and save it to a file/mailbox
  delete-message             d   delete the current entry
  delete-pattern             D   delete messages matching a pattern
  delete-subthread       ESC d   delete all messages in subthread
  delete-thread             ^D   delete all messages in thread
  display-address            @   display full address of sender
  display-toggle-weed        h   display message and toggle header weeding
  display-message          RET   display a message
  edit                       e   edit the current message
  edit-type                 ^E   edit the current message's Content-Type
  exit                       x   exit without saving changes
  extract-keys              ^K   extract PGP public keys
  fetch-mail                 G   retrieve mail from POP server
  flag-message               F   toggle a message's 'important' flag
  forget-passphrase         ^F   wipe PGP passphrase from memory
  forward-message            f   forward a message with comments
  group-reply                g   reply to all recipients
  limit                      l   show only messages matching a pattern
  list-reply                 L   reply to specified mailing list
  mail                       m   compose a new mail message
  mail-key               ESC k   mail a PGP public key
  next-new                 TAB   jump to the next new message
  next-subthread         ESC n   jump to the next subthread
  next-thread               ^N   jump to the next thread
  next-undeleted             j   move to the next undeleted message
  next-unread        not bound   jump to the next unread message
  parent-message             P   jump to parent message in thread
  pipe-message               |   pipe message/attachment to a shell command
  previous-new         ESC TAB   jump to the previous new message
  previous-page              Z   move to the previous page
  previous-subthread     ESC p   jump to previous subthread
  previous-thread           ^P   jump to previous thread
  previous-undeleted         k   move to the last undelete message
  previous-unread    not bound   jump to the previous unread message
  print-message              p   print the current entry
  query                      Q   query external program for addresses
  quit                       q   save changes to mailbox and quit
  read-subthread         ESC r   mark the current subthread as read
  read-thread               ^R   mark the current thread as read
  recall-message             R   recall a postponed message
  reply                      r   reply to a message
  resend-message         ESC e   resend message and preserve MIME structure
  save-message               s   save message/attachment to a file
  set-flag                   w   set a status flag on a message
  show-version               V   show the Mutt version number and date
  show-limit             ESC l   show currently active limit pattern, if any
  sort-mailbox               o   sort messages
  sort-reverse               O   sort messages in reverse order
  sync-mailbox               $   save changes to mailbox
  tag-pattern                T   tag messages matching a pattern
  tag-thread             ESC t   tag/untag all messages in the current thread
  toggle-new                 N   toggle a message's 'new' flag
  toggle-write               %   toggle whether the mailbox will be rewritten
  undelete-message           u   undelete the current entry
  undelete-pattern           U   undelete messages matching a pattern
  undelete-subthread     ESC u   undelete all messages in subthread
  undelete-thread           ^U   undelete all messages in thread
  untag-pattern             ^T   untag messages matching a pattern
  view-attachments           v   show MIME attachments



  66..44..33..  ppaaggeerr





























































  bottom             not bound   jump to the bottom of the message
  bounce-message             b   remail a message to another user
  change-folder              c   open a different folder
  change-folder-readonly ESC c   open a different folder in read only mode
  check-traditional-pgp  ESC P   check for classic pgp
  copy-message               C   copy a message to a file/mailbox
  create-alias               a   create an alias from a message sender
  decode-copy            ESC C   decode a message and copy it to a file/mailbox
  decode-save            ESC s   decode a message and save it to a file/mailbox
  delete-message             d   delete the current entry
  delete-subthread       ESC d   delete all messages in subthread
  delete-thread             ^D   delete all messages in thread
  display-address            @   display full address of sender
  display-toggle-weed        h   display message and toggle header weeding
  edit                       e   edit the current message
  edit-type                 ^E   edit the current message's Content-Type
  enter-command              :   enter a muttrc command
  exit                       i   return to the main-menu
  extract-keys              ^K   extract PGP public keys
  flag-message               F   toggle a message's 'important' flag
  forget-passphrase         ^F   wipe PGP passphrase from memory
  forward-message            f   forward a message with comments
  group-reply                g   reply to all recipients
  half-up            not bound   move up one-half page
  half-down          not bound   move down one-half page
  help                       ?   this screen
  list-reply                 L   reply to specified mailing list
  mail                       m   compose a new mail message
  mail-key               ESC k   mail a PGP public key
  mark-as-new                N   toggle a message's 'new' flag
  next-line                RET   scroll down one line
  next-entry                 J   move to the next entry
  next-new                 TAB   jump to the next new message
  next-page                      move to the next page
  next-subthread         ESC n   jump to the next subthread
  next-thread               ^N   jump to the next thread
  next-undeleted             j   move to the next undeleted message
  next-unread        not bound   jump to the next unread message
  parent-message             P   jump to parent message in thread
  pipe-message               |   pipe message/attachment to a shell command
  previous-line      BackSpace   scroll up one line
  previous-entry             K   move to the previous entry
  previous-new       not bound   jump to the previous new message
  previous-page              -   move to the previous page
  previous-subthread     ESC p   jump to previous subthread
  previous-thread           ^P   jump to previous thread
  previous-undeleted         k   move to the last undelete message
  previous-unread    not bound   jump to the previous unread message
  print-message              p   print the current entry
  quit                       Q   save changes to mailbox and quit
  read-subthread         ESC r   mark the current subthread as read
  read-thread               ^R   mark the current thread as read
  recall-message             R   recall a postponed message
  redraw-screen             ^L   clear and redraw the screen
  reply                      r   reply to a message
  save-message               s   save message/attachment to a file
  search                     /   search for a regular expression
  search-next                n   search for next match
  search-opposite    not bound   search for next match in opposite direction
  search-reverse         ESC /   search backwards for a regular expression
  search-toggle              \   toggle search pattern coloring
  shell-escape               !   invoke a command in a subshell
  show-version               V   show the Mutt version number and date
  skip-quoted                S   skip beyond quoted text
  sync-mailbox               $   save changes to mailbox
  tag-message                t   tag a message
  toggle-quoted              T   toggle display of quoted text
  top                        ^   jump to the top of the message
  undelete-message           u   undelete the current entry
  undelete-subthread     ESC u   undelete all messages in subthread
  undelete-thread           ^U   undelete all messages in thread
  view-attachments           v   show MIME attachments



  66..44..44..  aalliiaass


  search                     /   search for a regular expression
  search-next                n   search for next match
  search-reverse         ESC /   search backwards for a regular expression



  66..44..55..  qquueerryy


  create-alias               a   create an alias from a message sender
  mail                       m   compose a new mail message
  query                      Q   query external program for addresses
  query-append               A   append new query results to current results
  search                     /   search for a regular expression
  search-next                n   search for next match
  search-opposite    not bound   search for next match in opposite direction
  search-reverse         ESC /   search backwards for a regular expression



  66..44..66..  aattttaacchh


  bounce-message             b   remail a message to another user
  collapse-parts             v   toggle display of subparts
  delete-entry               d   delete the current entry
  display-toggle-weed        h   display message and toggle header weeding
  edit-type                 ^E   edit the current entry's Content-Type
  extract-keys              ^K   extract PGP public keys
  forward-message            f   forward a message with comments
  group-reply                g   reply to all recipients
  list-reply                 L   reply to specified mailing list
  pipe-entry                 |   pipe message/attachment to a shell command
  print-entry                p   print the current entry
  reply                      r   reply to a message
  resend-message         ESC e   resend message and preserve MIME structure
  save-entry                 s   save message/attachment to a file
  undelete-entry             u   undelete the current entry
  view-attach              RET   view attachment using mailcap entry if necessary
  view-mailcap               m   force viewing of attachment using mailcap
  view-text                  T   view attachment as text



  66..44..77..  ccoommppoossee









  attach-file                a   attach a file(s) to this message
  attach-message             A   attach message(s) to this message
  attach-key             ESC k   attach a PGP public key
  copy-file                  C   save message/attachment to a file
  detach-file                D   delete the current entry
  display-toggle-weed        h   display message and toggle header weeding
  edit-bcc                   b   edit the BCC list
  edit-cc                    c   edit the CC list
  edit-description           d   edit attachment description
  edit-encoding             ^E   edit attachment transfer-encoding
  edit-fcc                   f   enter a file to save a copy of this message in
  edit-from              ESC f   edit the from: field
  edit-file               ^X e   edit the file to be attached
  edit-headers               E   edit the message with headers
  edit                       e   edit the message
  edit-mime                  m   edit attachment using mailcap entry
  edit-reply-to              r   edit the Reply-To field
  edit-subject               s   edit the subject of this message
  edit-to                    t   edit the TO list
  edit-type                 ^T   edit attachment type
  filter-entry               F   filter attachment through a shell command
  forget-passphrase         ^F   wipe PGP passphrase from memory
  ispell                     i   run ispell on the message
  new-mime                   n   compose new attachment using mailcap entry
  pgp-menu                   p   show PGP options
  pipe-entry                 |   pipe message/attachment to a shell command
  postpone-message           P   save this message to send later
  print-entry                l   print the current entry
  rename-file                R   rename/move an attached file
  send-message               y   send the message
  toggle-unlink              u   toggle whether to delete file after sending it
  view-attach              RET   view attachment using mailcap entry if necessary
  write-fcc                  w   write the message to a folder



  66..44..88..  ppoossttppoonnee


  delete-entry               d   delete the current entry
  undelete-entry             u   undelete the current entry



  66..44..99..  bbrroowwsseerr


  change-dir                 c   change directories
  check-new                TAB   check mailboxes for new mail
  enter-mask                 m   enter a file mask
  search                     /   search for a regular expression
  search-next                n   search for next match
  search-reverse         ESC /   search backwards for a regular expression
  select-new                 N   select a new file in this directory
  sort                       o   sort messages
  sort-reverse               O   sort messages in reverse order
  toggle-mailboxes         TAB   toggle whether to browse mailboxes or all files
  view-file              SPACE   view file
  subscribe                  s   subscribe to current mailbox (IMAP Only)
  unsubscribe                u   unsubscribe to current mailbox (IMAP Only)
  toggle-subscribed          T   toggle view all/subscribed mailboxes (IMAP Only)





  66..44..1100..  ppggpp


  view-name                  %   view the key's user id
  verify-key                 c   verify a PGP public key



  66..44..1111..  eeddiittoorr


  backspace          BackSpace   delete the char in front of the cursor
  backward-char             ^B   move the cursor one character to the left
  backward-word          ESC b   move the cursor to the previous word
  bol                       ^A   jump to the beginning of the line
  buffy-cycle            Space   cycle among incoming mailboxes
  capitalize-word        ESC c   uppercase the first character in the word
  complete                 TAB   complete filename or alias
  complete-query            ^T   complete address with query
  delete-char               ^D   delete the char under the cursor
  downcase-word          ESC l   lowercase all characters in current word
  eol                       ^E   jump to the end of the line
  forward-char              ^F   move the cursor one character to the right
  forward-word           ESC f   move the cursor to the next word
  history-down       not bound   scroll down through the history list
  history-up         not bound   scroll up through the history list
  kill-eol                  ^K   delete chars from cursor to end of line
  kill-eow               ESC d   delete chars from cursor to end of word
  kill-line                 ^U   delete all chars on the line
  kill-word                 ^W   delete the word in front of the cursor
  quote-char                ^V   quote the next typed key
  transpose-chars    not bound   transpose character under cursor with previous
  upcase-word            ESC u   uppercase all characters in current word




  77..  雑雑録録



  77..11..  謝謝辞辞

  Kari Hurtta <kari.hurtta@fmi.fi> は、かつて ELM-ME の日々に MIME 解釈
  コウドの原型を共同開発してくれました。

  以下の人々が Mutt 開発に対して大きな力になってくれてきました。

  Vikas Agnihotri <vikasa@writeme.com>,
  Francois Berjon <Francois.Berjon@aar.alcatel-alsthom.fr>,
  Aric Blumer <aric@fore.com>,
  John Capo <jc@irbs.com>,
  David Champion <dgc@uchicago.edu,
  Brendan Cully <brendan@kublai.com>,
  Liviu Daia <daia@stoilow.imar.ro>,
  Thomas E. Dickey <dickey@herndon4.his.com>,
  David DeSimone <fox@convex.hp.com>,
  Nickolay N. Dudorov <nnd@wint.itfs.nsk.su>,
  Ruslan Ermilov <ru@freebsd.org>,
  Edmund Grimley Evans <edmundo@rano.org,
  Michael Finken <finken@conware.de>,
  Sven Guckes <guckes@math.fu-berlin.de>,
  Lars Hecking <lhecking@nmrc.ie>,
  Mark Holloman <holloman@nando.net>,
  Andreas Holzmann <holzmann@fmi.uni-passau.de>,
  Marco d'Itri <md@linux.it>,
  Bjoern Jacke <bjacke@suse.com>,
  Byrial Jensen <byrial@image.dk>,
  David Jeske <jeske@igcom.net>,
  Christophe Kalt <kalt@hugo.int-evry.fr>,
  Tommi Komulainen <Tommi.Komulainen@iki.fi>,
  Felix von Leitner (a.k.a ``Fefe'') <leitner@math.fu-berlin.de>,
  Brandon Long <blong@fiction.net>,
  Jimmy Makela <jmy@flashback.net>,
  Lars Marowsky-Bree <lmb@pointer.in-minden.de>,
  Thomas ``Mike'' Michlmayr <mike@cosy.sbg.ac.at>,
  Andrew W. Nosenko <awn@bcs.zp.ua>,
  David O'Brien <obrien@Nuxi.cs.ucdavis.edu>,
  Clint Olsen <olsenc@ichips.intel.com>,
  Park Myeong Seok <pms@romance.kaist.ac.kr>,
  Thomas Parmelan <tom@ankh.fr.eu.org>,
  Ollivier Robert <roberto@keltia.freenix.fr>,
  Thomas Roessler <roessler@does-not-exist.org>,
  Roland Rosenfeld <roland@spinnaker.de>,
  TAKIZAWA Takashi <taki@luna.email.ne.jp>,
  Allain Thivillon <Allain.Thivillon@alma.fr>,
  Gero Treuner <gero@faveve.uni-stuttgart.de>,
  Vsevolod Volkov <vvv@lucky.net>,
  Ken Weinert <kenw@ihs.com>


  77..22..  ここのの文文書書ににつついいてて

  この文書は SGML で書かれ、 sgml-tools パッケイジを用いて他の形式へ整形
  されました。


  77..33..  日日本本語語訳訳ににつついいてて

  NNoottee:: TThhee oorriiggiinnaall mmaannuuaall ddooeess nnoott hhaavvee tthhiiss sseeccttiioonn..
  注注意意:: ここのの章章はは原原文文ににはは存存在在ししまませせんん。。

  日本語で読める完全な Mutt マニュアルは、西岡氏と人見氏による翻訳しか手
  に入らない状態が続いています。そこで tamomo こと高橋全は、
  sourceforge.jp の mutt-j プロジェクトという場を借りて、一つの仮想ライ
  ヴァルを作り出そうと考えました。目標は、この翻訳がシェアを握ることでは
  ありません。この翻訳が契機となって西岡・人見訳がより良いものとなり、
  Mutt ユーザにとって、より快適な日本語環境が整備されることです。また、
  この翻訳の特色として、原文 SGML との対応が見やすいという点があります。
  diff -du manual.sgml manual.ja.sgml としてみると、原文と日本語が並んで
  見えるため、誤訳なのか原文が間違っているのかが一目瞭然です。これによっ
  て原文の質が向上されることも視野に入れています。翻訳中にも、いくつかの
  typo などを見付けました。

  ライセンスについては、原文に何も付け足しません。参考にしたのは、原文
  (1.5.6 および CVS 版) と西岡・人見訳 (1.4) のみです。

  改善要求などは sourceforge.jp の mutt-j プロジェクトのバグ報告機能か
  フォーラムを使うと良いでしょう。あるいは高橋全に直接メイルを送っても構
  いません。












