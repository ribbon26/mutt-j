<!doctype linuxdoc system>

<article>

<title>The Mutt E-Mail Client
<author>by Michael Elkins <htmlurl url="mailto:me@cs.hmc.edu" name="&lt;me@cs.hmc.edu&gt;">
<date>version 1.5.6
<abstract>
``All mail clients suck.  This one just sucks less.'' -me, circa 1995
</abstract>

<toc>

<sect>紹介
<p>
<bf>Mutt</bf> は小さいながらも非常にパワフルなテキストベイス MIME
メイルクライアントです。その高い柔軟性に加えて、キー割り当てや
キーボードマクロ、メイルのスレッド表示、正規表現検索、さらには
メッセイジ選択用の強力なパターン言語といった高度な機能により、
まさしくメイルのパワーユーザにぴったりと言えます。
<quote>「メイルクライアントはぜんぶ腐ってる。こいつは
それほど腐っちゃいないってだけのことさ」 - 作者 Michael Elkins</quote>

<sect1>ホウムペイジ
<p>
<htmlurl url="http://www.mutt.org/"
name="http://www.mutt.org/">

<sect1>メイリングリスト
<p>
以下のメイリングリストを講読するにはメッセイジ本文に <em>subscribe</em>と書いて
<tt>mutt-○○</tt><em>-request</em><tt>@mutt.org</tt> に送ってください。

<itemize>
<item><htmlurl url="mailto:mutt-announce-request@mutt.org"
name="mutt-announce@mutt.org"> ―　流量の少ない、アナウンス用リスト
<item><htmlurl url="mailto:mutt-users-request@mutt.org"
name="mutt-users@mutt.org"> ―　質問、バグ報告、要望
<item><htmlurl url="mailto:mutt-dev-request@mutt.org"
name="mutt-dev@mutt.org"> ―　開発メイリングリスト
</itemize>

<bf>メモ</bf>: <em>mutt-announce</em> への投稿は自動的に
<em>mutt-users</em> に転送されるので、両方を講読する必要はありません。

<sect1>ソフトウェア配布サイト
<p>
<itemize>
<item><htmlurl url="ftp://ftp.mutt.org/mutt/"
name="ftp://ftp.mutt.org/mutt/">
</itemize>
<p>
ミラーサイトについては <htmlurl
url="http://www.mutt.org/download.html"
name="http://www.mutt.org/download.html"> をご覧ください。

<sect1>IRC
<p>
<htmlurl
url="http://www.openprojects.net" name="OpenProjects.Net
(www.openprojects.net)"> のチャンネル
<em>&num;mutt</em> に行けば、Mutt に関心のある人と会話できます。

<sect1>USENET
<p>
ニュースグループ <htmlurl url="news:comp.mail.mutt"
name="comp.mail.mutt"> を見てください。

<sect1>Copyright (著作権)
<p>
Mutt is Copyright (C) 1996-2000 Michael R. Elkins
&lt;me@cs.hmc.edu&gt; and others

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111, USA.
<p>(参考訳)<p>このプログラムはフリーソフトウェアです。Free Software Foundation による GNU General Public License のヴァージョン 2 もしくはそれ以降のヴァージョン (自由選択) のいずれかに従う限り、自由に変更および再配布できます。<p>このプログラムは役に立つことを願って配布されていますが、「まったく無保証」です。商品能力や特定の目的への適性について、暗黙の保証さえありません。詳細は GNU General Public License を参照してください。<p>GNU General Public License の文面は、このプログラムに付いてきたはずです。そうでなければ、Free Software Foudation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111, USA に手紙をください。

<sect>開始
<p>

この章の目的は Mutt の使い方を概観することです。
ほかにもマニュアルの別の場所で説明されている機能はたくさんあります。
さらには Mutt FAQ や種々のウェブペイジで手に入る情報もあります。
詳しくは <htmlurl url="http://www.mutt.org/mutt/" name="Mutt Page">
を参照してください。

この章では、配布されているままのデフォルトのキー割り当てで説明します。
自分のサイトではシステム管理者がデフォルトを変えてしまっている
かもしれません。どのメニューでも &dquot;?&dquot; を押して
現在のキー割り当てを表示できます。

まず必要なのは Mutt を起動することです。コマンドラインから mutt
と入力するだけです。コマンドラインの種々のオプションについては
mutt の man ペイジか<ref id="commandline" name="「早見」の章" >を
参照してください。

<sect1>メニュー内で動きまわる
<p>

情報はメニューの中に、ELM そっくりの形式で表示されます。
以下は各メニューでの操作に共通のキーの表です。

<tscreen><verb>
j と Down       next-entry      次の項目へ移動
k と Up         previous-entry  前の項目へ移動
z と PageDn     page-down       次のペイジに行く
Z と PageUp     page-up         前のペイジに行く
= と Home       first-entry     最初の項目に飛ぶ
* と End        last-entry      最後の項目に飛ぶ
q               quit            現在のメニューを終了
?               help            現在のメニューのキー割り当てを表示
</verb></tscreen>

<sect1>入力領域を編集する<label id="editing" >
<p>
Muttには内蔵ラインエディタがあり、これが
メイルアドレスやファイル名のような文字デイタ入力の主要な手段となっています。
編集中に動きまわるためのキーは Emacs によく似ています。

<tscreen><verb>
^A or <Home>    bol             行頭に移動
^B or <Left>    backward-char   一文字戻る
Esc B           backward-word   一語戻る
^D or <Delete>  delete-char     カーソル位置の文字を削除
^E or <End>     eol             行末に移動
^F or <Right>   forward-char    一文字進む
Esc F           forward-word    一語進む
<Tab>           complete        ファイル名やエイリアスを補完
^T              complete-query  クエリによってアドレスを補完
^K              kill-eol        行末まで削除
ESC d           kill-eow        単語の終わりまで削除
^W              kill-word       カーソルの前の一語を消す
^U              kill-line       一行全体を削除
^V              quote-char      次に入力するキーに引用符を付ける
<Up>            history-up      履歴から前の入力文字列を呼び出す
<Down>          history-down    履歴から次の入力文字列を呼び出す
<BackSpace>     backspace       カーソルの前の一文字を削除
Esc u           upcase-word     単語を大文字に変換
Esc l           downcase-word   単語を小文字に変換
Esc c           capitalize-word 単語の最初の文字を大文字に変換
^G              n/a             取消
<Return>        n/a             編集を終了
</verb></tscreen>

エディタ (<em>editor</em>) の関数を割り当て直すには
<ref id="bind" name="bind" > コマンドを使います。
例えば、Delete キーを押したときに、カーソルの乗っている文字ではなく
カーソルの前にある文字を消すようにするには、こうしてください。

<tt/bind editor &lt;delete&gt; backspace/

<sect1>メイルを読む　―　インデックスとペイジャ
<p>

他の多くのメイルクライアントと同様、Mutt ではメイルを読むモウドが二つあります。
第一のモウドはメイルボックス内のメッセイジ一覧です。
これを Mutt では「インデックス」 (index) と呼んでいます。
第二のモウドはメッセイジの内容表示です。これは「ペイジャ」 (pager) といいます。

続く数節で、これらのモウドそれぞれに提供されている関数を説明します。

<sect2>メッセイジインデックス
<p>

<tscreen><verb>
c               メイルボックスを変更
ESC c           フォルダを読み出し専用モウドに変更
C               現在のメッセイジを別のメイルボックスにコピー
ESC C           メッセイジをデコウドしてフォルダにコピー
ESC s           メッセイジをデコウドしてフォルダにセイブ
D               パターンに合致するメッセイジを削除
d               現在のメッセイジを削除
F               大事だとして印付け
l               パターンに合致するメッセイジを表示
N               新しいとして印付け
o               現在の整列方法を変更
O               メイルボックスを逆順に整列
q               変更をセイブして終了
s               メッセイジをセイブ
T               パターンに合致するメッセイジにタグ付け
t               メッセイジのタグを切替
ESC t           メッセイジスレッド全体のタグを切替
U               パターンに合致するメッセイジの削除を解除
u               メッセイジの削除を解除
v               添付ファイルを閲覧
x               変更を破棄して終了
<Return>        メッセイジを表示
<Tab>           次の新しいメッセイジに飛ぶ
@               差出人の完全なメイルアドレスを表示
$               変更をメイルボックスへ保存
/               検索
ESC /           逆順に検索
^L              画面を消して再描画
^T              パターンに合致するメッセイジのタグをはずす
</verb></tscreen>

<sect3>ステイタスフラグ
<p>

メッセイジ送信者と題に加えて、各メッセイジの状態の短い要約が
メッセイジ番号のそばに書かれます。
次の「フラグ」の中に適合するものがあれば表示されます。意味は以下の通りです。

<p>
<descrip>
<tag/D/ 削除メッセイジである（削除のためにマークされている)
<tag/d/ メッセイジ中に、削除のためにマークされた添付ファイルがある
<tag/K/ PGP 公開鍵を含んでいる
<tag/N/ メッセイジが新しい
<tag/O/ メッセイジが古い
<tag/P/ メッセイジが暗号化されている
<tag/r/ メッセイジが返信済み
<tag/S/ メッセイジが署名されており、その署名が検証済み
<tag/s/ メッセイジが署名されている
<tag/!/ メッセイジが重要フラグ付き
<tag/*/ メッセイジがタグ付き
</descrip>

ステイタスフラグの一部は、次のコマンドを使ってオン／オフできます。
<itemize>
<item><bf>set-flag</bf> (デフォルトでは w)
<item><bf>clear-flag</bf> (デフォルトでは W)
</itemize>

<p>
さらに、次のフラグはメッセイジが誰にあてられたものなのかを反映するものです。
これは <ref id="to_chars" name="&dollar;to&lowbar;chars" > 変数によって
変更できます。

<p>
<descrip>
<tag/+/ メッセイジが To で自分だけに宛てられている
<tag/T/ メッセイジが To で自分に宛てられているが、他の人にも To か Cc されている
<tag/C/ メッセイジが自分に Cc されている
<tag/F/ メッセイジが自分が出した
<tag/L/ メッセイジが購読しているメイリングリストに送られている
</descrip>

<sect2>ペイジャ
<p>

デフォルトでは、Mutt は内蔵ペイジャを使ってメッセイジ本文を表示します。
このペイジャは Unix プログラムの <em>less</em> によく似ていますが、
<em>less</em> ほど多機能ではありません。

<tscreen><verb>
<Return>        一行下に移動
<Space>         次のペイジ (メッセイジの終わりでは次のメッセイジ) を表示
-               前のペイジに戻る
n               次の合致部分を検索
S               引用文を飛ばす
T               引用文の表示を切替
?               キー割り当てを表示
/               正規表現 (パターン) を検索
ESC /           正規表現を逆順に検索
\               検索パターン着色を切替
^               メッセイジの一番上に飛ぶ
$               メッセイジの一番下に飛ぶ
</verb></tscreen>

それに加えて、<em>インデックス</em>の関数の多くがペイジャでも使えます。
例えば <em>delete-message</em> (削除) や <em>copy-message</em>
(コピー) などです (これは、外部ペイジャでメッセイジ閲覧するよりも
便利な点の一つです)。

また、内部ペイジャはさらに二つの優れた機能をサポートしています。
第一に、nroff の「標準」シーケンスを受け付け、太字や下線を解釈します。
シーケンスは連続で「文字、バックスペイス (^H)、同じ文字」なら太字、
「文字、バックスペイス、&dquot;&lowbar;&dquot;」なら下線付き文字です。
端末がサポートしていれば、これを Mutt はそれぞれ太字と下線付き文字として
表示しようとします。サポートしていなければ
bold (太字) と underline (下線) という <ref id="color" name="color">
のオブジェクトを使って色属性か白黒属性を指定できます。

さらに、内部ペイジャは ANSI エスケイプシーケンスの文字属性を
サポートしています。
Mutt がそのシーケンスを正しい色や文字設定に解釈してくれるのです。
Mutt がサポートしているシーケンスは以下の通りです。

<p>
<tscreen><verb>
ESC [ Ps;Ps;Ps;...;Ps m
Ps は
0    全属性解除
1    太字あり
4    下線付き
5    点滅あり
7    反転表示
3x   文字色を x に
4x   背景色を x に

色は
0    黒
1    赤
2    緑
3    黄
4    青
5    赤紫 (マゼンタ)
6    青緑 (シアン)
7    白
</verb></tscreen>

Mutt はこれらの属性を text/enriched メッセイジの取り扱いに使いますし、
外部の <ref id="auto_view" name="自動閲覧" > スクリプトから
着色の目的で使うこともあります。
<bf>注意:</bf> ディスプレイの使う色を変更すると、上記と違う色になります。
例えば xterm ディスプレイの使う color2 を変更すると、
緑色のはずの部分に xterm ではその変更した色が使われます。

<sect2>スレッドモウド<label id="threads" >
<p>
メイルボックスが<em>スレッド</em>で<ref id="sort"
name="整列">されているときは、さらにいくつかの関数が
<em>インデックス</em>モウドと<em>ペイジャ</em>モウドで利用できます。

<tscreen><verb>
^D      delete-thread        現在のスレッドのメッセイジをすべて削除
^U      undelete-thread      現在のスレッドのメッセイジの削除をすべて解除
^N      next-thread          次のスレッドの始点に飛ぶ
^P      previous-thread      前のスレッドの始点に飛ぶ
^R      read-thread          現在のスレッドを既読にする
ESC d   delete-subthread     現在のサブスレッドのメッセイジをすべて削除
ESC u   undelete-subthread   現在のサブスレッドのメッセイジの削除マークをすべて解除
ESC n   next-subthread       次のサブスレッドの始点に移動
ESC p   previous-subthread   前のサブスレッドの始点に移動
ESC r   read-subthread       現在のサブスレッドを既読にする
ESC t   tag-thread           現在のスレッドのタグを切替
ESC v   collapse-thread      現在のスレッドの折りたたみを切替
ESC V   collapse-all         すべてのスレッドの折りたたみを切替
P       parent-message       スレッド中の親メッセイジに飛ぶ
</verb></tscreen>

<bf>メモ</bf>: スレッドを折りたたむと、スレッドの
最初のメッセイジだけが表示されて、他は隠れます。
これは、一つのスレッドにメッセイジがたくさん含まれていて、
画面にほんの一握りのスレッドしか見えないというときに便利です。
<ref id="index_format" name="&dollar;index&lowbar;format" > の
%M を見てください。例えば <ref id="index_format"
name="&dollar;index&lowbar;format" > に
"&percnt;?M?(#&percnt;03M)&amp;(&percnt;4l)?"
という設定を使って、スレッドが折りたたまれている時に
隠れているメイルの数を表示するようにできます。

参照: <ref id="strict_threads" name="&dollar;strict&lowbar;threads" >

<sect2>その他の機能
<p><bf>エイリアスの作成</bf> / <bf>create-alias</bf><label id="create-alias" > (デフォルト: a)<newline>

現在のメッセイジをもとに (あるいは新規プロンプトで) 新しいエイリアスを
作成します。編集を終えると、<ref id="alias" name="alias" >
コマンドが <ref id="alias_file" name="&dollar;alias&lowbar;file" >
で指定したファイルに追加されて、あとから使えるようになります。
<bf>注意:</bf> <ref id="alias_file"
name="&dollar;alias&lowbar;file" > を指定しても、その中の alias
が追加されるわけではありません。そのファイルを
<ref id="source" name="source" > する必要もあります。

<p><bf>伝統的 PGP のチェック</bf> / <bf>check-traditional-pgp</bf><label id="check-traditional-pgp" > (デフォルト: ESC P)<newline>

この関数は現在のメッセイジを調べて、「伝統的な」方法で PGP
の署名・暗号化がなされている内容を探します。
「伝統的」というのは、つまり適切な MIME タグのないもののことです。
技術的なことを言うと、この関数は、PGP デイタを含むパートの
MIME content type を一時的に変更します。つまり
<ref id="edit-type" name="edit-type" > 関数の効果と似ています。


<p><bf>へッダ間引きの切替</bf> / <bf>display-toggle-weed</bf><label id="display-toggle-weed" > (デフォルト: h)<newline>

<ref id="ignore" name="ignore" > コマンドで指定された
ヘッダフィールドの間引き表示を切り替えます。

<p><bf>編集</bf> / <bf>edit</bf><label id="edit" > (デフォルト: e)<newline>

このコマンド (インデックスとペイジャで利用可) は、
現在のメッセイジを「なま」で編集する、つまり、
メイルフォルダにある姿のままで編集するコマンドです。
編集を終えると、変更されたメッセイジは現在いるフォルダに追加され、
オリジナルのメッセイジは削除のために印付けられます。

<bf>content-type の編集</bf> / <bf>edit-type</bf><label id="edit-type" ><newline>
(デフォルト: 添付ファイルメニューと、ぺイジャ、インデックスメニューでは ^E, コンポウズメニューでは ^T)

このコマンドは添付ファイルの content type を一時的に編集するために使い、
たとえば偽装してある文字セットのパラメータを修正したりします。
インデックスやペイジャから使うと最上位の添付ファイルの
content type を編集できます。<ref id="attach_menu"
name="添付ファイルメニュー">から使えば、どの添付ファイルの
content type でも変更できます。この変更は永続的なものではなく、
フォルダ変更によって消えてしまいます。

このコマンドは<ref id="compose_menu" name="コンポウズメニュー" >でも使える
ということを覚えておいてください。このメニューでは、
送信する添付ファイルの性質を調整するために使います。

<p><bf>コマンドの入力</bf> / <bf>enter-command</bf><label id="enter-command" > (デフォルト: &dquot;:&dquot;)<newline>

このコマンドは、通常だと設定ファイルの中に入れるようなコマンドを
動作中の Mutt 上で実行するために使います。
一般的な使い方としては、変数の設定をチェックしたり、
<ref id="macro" name="macro" > と組み合わせて動作中に設定を変更するために
使ったりします。

<p><bf>公開鍵の抽出</bf> / <bf>extract-keys</bf><label id="extract-keys" > (デフォルト: ^K)<newline>

このコマンドは PGP 公開鍵を現在のメッセイジやタグ付きメッセイジから
抽出して自分の PGP 公開鍵束に追加します。

<p><bf>パスフレイズの忘却</bf> / <bf>forget-passphrase</bf><label id="forget-passphrase" > (デフォルト: ^F)<newline>

このコマンドはパスフレイズをメモリ上から消去します。
パスフレイズを誤入力した時に便利です。

<p><bf>メイリングリストへの返信</bf> / <bf>list-reply</bf><label id="list-reply" > (デフォルト: L)<newline>

現在のメッセイジやタグ付きメッセイジから
<ref id="lists" name="lists や subscribe" >
コマンドで指定されているアドレスに合致するアドレスを抽出して、
そこに返信するコマンドです。それだけではなく、もし <ref id="honor_followup_to"
name="&dollar;honor&lowbar;followup&lowbar;to" > 変数が設定されていると
<tt>Mail-Followup-To</tt> へッダを信用します。
メイリングリストに投稿されたメッセイジに返信するときに
これを使えば、返信する元メッセイジの差出人とメイリングリストに
二重に送信するのを避ける助けになります。

<bf>メッセイジのパイプ</bf> / <bf>pipe-message</bf><label id="pipe-message" > (デフォルト: |)<newline>

外部 Unix コマンドの入力を要求して、現在のメッセイジやタグ付き
メッセイジをそこにパイプします。
<ref id="pipe_decode" name="&dollar;pipe&lowbar;decode" >,
<ref id="pipe_split"  name="&dollar;pipe&lowbar;split">,
<ref id="pipe_sep"    name="&dollar;pipe&lowbar;sep">,
<ref id="wait_key"    name="&dollar;wait&lowbar;key" > 変数が
この関数の動作を精密に制御します。

<bf>メッセイジの再送</bf> / <bf>resend-message</bf><label id="resend-message" > (デフォルト: ESC e)<newline>

resend-message を使うと、Mutt は現在のメッセイジを雛型として
新しいメッセイジを作成します。
この関数は「任意のフォルダの復元」と説明するのが最適でしょう。
MIME メッセイジを、もともとのメイル構造を保ったまま転送するのに便利です。
このときに含まれるへッダは <ref id="weed" name="&dollar;weed" > 変数に
依存しているということに注意してください。

この関数は添付ファイルメニューからも利用できます。
これを使えば message/rfc822 パートとして転送されてきたメッセイジを
簡単に再送できます。

<bf>シェルコマンドの実行</bf> / <bf>shell-escape</bf><label id="shell-escape" > (デフォルト: !)<newline>

外部 UNIX コマンドの入力を要求し、それを実行します。<ref id="wait_key"
name="&dollar;wait&lowbar;key" > を使って、コマンドが終了したときに
(おそらくコマンドの出力をユーザが読めるようにするため) 何かキーが押されるまで
Mutt が待つかどうかをコマンドの戻り値によって制御するようにできます。

<bf>引用文表示の切替</bf> / <bf>toggle-quoted</bf><label id="toggle-quoted" > (デフォルト: T)<newline>

メッセイジ本文の表示中に、<em>ペイジャ</em>は <ref id="quote_regexp"
name="&dollar;quote&lowbar;regexp"> 変数を使って引用文を検出します。
この関数はメッセイジ中の引用部分を表示するかどうかを切り替えます。
特に、返事だけに興味があるのに大量の引用文があって邪魔だというようなときに
役に立ちます。

<bf>引用文をとばして移動</bf> / <bf>skip-quoted</bf><label id="skip-quoted" > (デフォルト: S)<newline>

内部ペイジャにおいて、この関数は、
引用文の行のあとの非引用文の行に移動します。

<sect1>メイルを送信する
<p>

以下のコマンドがメイル送信のために<em>インデックス</em>で利用できます。

<tscreen><verb>
m       compose      新規メッセイジを作成
r       reply        差出人へ返信
g       group-reply  受信者全員へ返信
L       list-reply   メイリングリストのアドレスへ返信
f       forward      メッセイジを転送
b       bounce       メッセイジを中継 (再送)
ESC k   mail-key     だれかに PGP 公開鍵を送信
</verb></tscreen>

メッセイジの中継は、メッセイジを「あるがまま」で、指定した宛先に送信します。
メッセイジの転送は、転送するメッセイジにコメントを付けたり変更したりできます。
これらに関しては次の節 <ref id="forwarding_mail"
name="「メイルを転送・中継する」" > で詳しく論じられています。

上のコマンドを使うと Mutt はコンポウズ (<em>compose</em>) メニューに入り、
&dquot;To:&dquot; ヘッダフィールドに入れる宛先の入力を促します。
次にメッセイジの &dquot;Subject:&dquot; フィールドを聞いてきますが、
メッセイジの返信や転送のときは既定値が入っています。
このとき Mutt がどう質問するのかを変更するには、
<ref id="askcc"      name="&dollar;askcc" >,
<ref id="askbcc"     name="&dollar;askbcc" >,
<ref id="autoedit"   name="&dollar;autoedit" >,
<ref id="fast_reply" name="&dollar;fast&lowbar;reply" > を参照してください。

それから Mutt はメッセイジ本文に対して <ref id="editor"
name="エディタ (&dollar;editor)" > を起動します。<ref id="edit_headers"
name="&dollar;edit&lowbar;headers" > 変数が設定されているときは、
メッセイジの上にヘッダもあります。
メッセイジには、返信するメッセイジが整列の順に取り込まれ、それぞれに適切な
<ref id="attribution" name="由来 (&dollar;attribution)" >,
<ref id="indent_string" name="引用文字列 (&dollar;indent&lowbar;string)" >,
<ref id="post_indent_string"
 name="引用終了文字列 (&dollar;post&lowbar;indent&lowbar;string)" >
が付きます。メッセイジ転送時には、<ref id="mime_forward"
name="&dollar;mime&lowbar;forward" > 変数が設定されていなければ、
転送するメッセイジのコピーも本文に取り込まれます。また、
<ref id="signature" name="署名ファイル ($signature)" > を指定していれば、
そのファイルも付加されます。

送信メッセイジの本文を編集し終えると、<em>コンポウズ</em>メニューに戻ります。
以下の選択肢があります。

<tscreen><verb>
a      attach-file          ファイルを添付
A      attach-message       メッセイジにメッセイジを添付
ESC k  attach-key           PGP 公開鍵を添付
d      edit-description     添付ファイルの内容説明を編集
D      detach-file          添付ファイルをはずす
t      edit-to              To フィールドを編集
ESC f  edit-from            From フィールドを編集
r      edit-reply-to        Reply-To フィールドを編集
c      edit-cc              Cc フィールドを編集
b      edit-bcc             Bccフィールドを編集
y      send-message         メッセイジを送信
s      edit-subject         題名を編集
S      smime-menu           S/MIME オプションを選択
f      edit-fcc             &dquot;Fcc&dquot; メイルボックスを指定
p      pgp-menu             PGP オプションを選択
P      postpone-message     メッセイジを次回まで延期
q      quit                 メッセイジ送信を中断 (または中止)
w      write-fcc            メッセイジをフォルダに書き込む
i      ispell               綴りを確認 (利用可能なシステムならば)
^F     forget-passphrase    メモリからパスフレイズを拭い去る
</verb></tscreen>

<bf>注意:</bf> attach-message 関数は、添付したいメッセイジのあるフォルダを
入力するよう促します。そこのフォルダでメッセイジにタグを付ければ、
そのメッセイジを送信メッセイジに添付できます。(訳注：タグを付けたあとは
q でコンポウズメニューに戻れる。)
このフォルダにいるときは新規メッセイジ作成や返信、転送などの操作が
できないということに注意してください。<ref id="status_format"
name="&dollar;status&lowbar;format" > に %r があれば、
それが A に変わって、メッセイジ添付 (attach-message)
モウドにいることを示します。

<sect2>メッセイジヘッダを編集する
<p>
送信メッセイジのヘッダを編集するときには、
いくつか特別な機能が利用できます。

<tt/Fcc:/ <em>ファイル名</em><newline>
を指定すると、あたかも<em>コンポウズ</em>メニューで
<em>edit-fcc</em> 関数を使ったかのように<em>ファイル名</em>を扱います。

また、<newline>
<tt/Attach:/ <em>ファイル名</em> &lsqb; <em>内容説明</em> &rsqb;<newline>
を指定してメッセイジにファイルを添付することもできます。
ここで <em>ファイル名</em> は添付するファイルで、
<em>内容説明</em> は添付ファイルの説明に使う付加的な文字列です。

メッセイジに返信するときにヘッダフィールドから <em>In-Reply-To:</em>
フィールドを削除すると Mutt は <em>Reference:</em> フィールドを生成しません。
このようにして新規のメッセイジスレッドを作成できます。

<ref id="edit_headers" name="edit&lowbar;headers" > も参照してください。

<sect2>Mutt で PGP を使う

<p>
PGP を使いたい場合は

<tt/Pgp:/ &lsqb; <tt/E/ | <tt/S/ | <tt/S/<em/&lt;id&gt;/ &rsqb; <newline>

を指定してください。&dquot;E&dquot; は暗号化、&dquot;S&dquot; は署名、
&dquot;S&lt;id&gt;&dquot; は指定した鍵で署名します。
鍵は <ref id="pgp_sign_as" name="&dollar;pgp&lowbar;sign&lowbar;as" > で
恒久的に設定できます。

Mutt にメッセイジを PGP で暗号化するよう言うと、
メッセイジを送信しようとするときに鍵選択プロセスを通るよう指示されます。
Mutt は、信用できるユーザ ID があってメッセイジ宛先のメイルアドレスに合致する鍵
については何も尋ねません。
しかしながら、鍵が複数あったり、ユーザ ID フィールドの信用度が弱かったり、
合致する鍵がひとつも見つからないという状況もありえます。

こういう場合には、鍵を選択できる一覧のメニューに行かされます。
そのメニューを終了したり、合致する鍵を Mutt が見つけられなかったりすると、
ユーザ ID の入力を促されます。普段どおり、このプロンプトは <tt>^G</tt>
を使って中止できます。そうすると Mutt はコンポウズ画面に戻ります。

正しく鍵選択を完了すると、そのメッセイジは
選択した公開鍵を使って暗号化され送信されます。

鍵選択メニューの項目 (<ref id="pgp_entry_format"
name="&dollar;pgp&lowbar;entry&lowbar;format" > も参照) の
ほとんどのフィールドの意味は明白ですが、
能力 (capabilities), フラグ (flags), 信用度 (validity) のフィールドについて
少し説明しておいても良いでしょう。

フラグシーケンス (&percnt;f) は以下のフラグのいずれかに展開されます。
<tscreen><verb>
R            鍵は破棄されており、使えない
X            鍵は期限切れになっており、使えない
d            自分で鍵を使用不可に印付けた
c            未知の重要な自己署名パケットがある
</verb></tscreen>

能力フィールド (&percnt;c) は鍵の能力を表わす二文字シーケンスに展開されます。
第一の文字は暗号化能力です。
マイナス (<bf/-/) は暗号化に使えないという意味です。
ドット (<bf/./) はいずれかのユーザ ID の署名鍵として印付けられているけれども
暗号化にも使えるという意味です。&dquot;<bf>e</bf>&dquot; の文字は
暗号化 (encryption) に使えるという意味です。
 
第二の文字は鍵の署名能力を表しています。こちらもやはり、
&dquot;<bf/-/&dquot; は「署名用ではない」という意味で、&dquot;<bf/./&dquot;
はあるユーザ ID の暗号化鍵として印付けられているという意味、
&dquot;<bf/s/&dquot; は署名に使えるという意味です。

最後に、信用度フィールド (%t) は
ユーザ ID がどれほどしっかり確証されているかを示します。
疑問符 (<bf/?/) は信用度が未定義だという意味で、
マイナス (<bf/-/) は信用できない関係、
スペイス文字は部分的に信用できる関係、
プラス (<bf/+/) は完全な信用度を表しています。

<sect2>匿名メッセイジを Mixmaster 経由で送信する

<p>
Mutt を Mixmaster 匿名リメイラ (remailer) と共働するよう
設定してあるかもしれません。
Mixmaster はリメイラのチェインを使って匿名でメッセイジを送信できます。
Mutt の Mixmaster サポートは Mixmaster version 2.04 (beta 45 が最新のようです)
と 2.03 に対するものです。これ以前のヴァージョンと、これ以降の
version 3 beta と呼ばれるヴァージョン (2.9b23 が最新のようです) は
サポートしていません。

Mixmaster を使うにはいくつかの制限に従わなくてはなりません。
最も重要なのは <tt/Cc/ と <tt/Bcc/ へッダを使えないということです。
Mutt から Mixmaster を使うには、まずコンポウズメニューで mix 関数を使って
リメイラチェインを選ばなくてはなりません。

チェイン選択画面はふたつの部分に分かれています。
上の (広い方の) 部分では使えるリメイラの一覧を見ることができます。
下の部分では現在選択されているリメイラチェインを参照できます。

このチェインの中を <tt>chain-prev</tt> 関数と
<tt>chain-next</tt> 関数を使って渡り歩けます。
この関数はデフォルトでは左右の矢印キーと
<tt>h</tt> と <tt>l</tt> キーに割り当てられています
(vi のキーバインドを考えてください)。
新しいリメイラを現在のチェイン位置に挿入するには
<tt>insert</tt> 関数を使ってください。
リメイラを現在のチェイン位置の後に追加するには
<tt>select-entry</tt> か <tt>append</tt> を使ってください。
<tt/delete/ 関数を使ってチェインから項目を消すこともできます。
最後に、メニューをそのまま抜けて変更を破棄するか、
(デフォルトでは) リターンキーを押して承認 (<tt>accept</tt>) してください。

リメイラごとに持っている能力が違うということに注意してください。
その能力はリメイラメニューの &percnt;c の項目で表示されています
(<ref id="mix_entry_format" name="&dollar;mix&lowbar;entry&lowbar;format" >
を参照してください)。
一番重要なのは大文字の &dquot;M&dquot; で示される &dquot;middleman&dquot;
能力です。
これは問題のリメイラが、チェインの最終要素にはなれないとはいえ、
他の mixmaster リメイラにメッセイジを転送することはできるという意味です。
他の能力の詳細については Mixmaster の文書を見てください。

<sect1>メイルを転送・中継する<label id="forwarding_mail" >
<p>

中継と転送は、既存メッセイジを自分で指定した宛先に送信できる機能です。
メッセイジの中継とは、コピーを別のアドレスに送信することですが、
その際、あたかもそこが元々の宛先であるかのように送信する方法で
<ref id="sendmail" name="sendmail" > コマンドを使います。
一方、メッセイジの転送は、再送の前にメッセイジを変更できます
(例えばコメントを加えるなど)。

デフォルトでは次のキーが割り当てられています。

<tscreen><verb>
f       forward         メッセイジを転送
b       bounce          メッセイジを中継 (再送)
</verb></tscreen>

転送は <ref id="mime_forward" name="&dollar;mime&lowbar;forward" >
変数の値によって、オリジナルのメッセイジを新規メッセイジの本文に
(それとわかるように示す行で囲んで) 取り込むか、もしくは
MIME 添付ファイルとして取り込みます。
添付ファイルをペイジャのようにデコウドするかどうかは、それぞれ
<ref id="forward_decode" name="&dollar;forward&lowbar;decode" > 変数と
<ref id="mime_forward_decode" name="&dollar;mime&lowbar;forward&lowbar;decode">
変数で制御できます。どちらの転送方法が良いかは内容によります。
そのため <em>&dollar;mime&lowbar;forward</em> は四択オプションになっていて、
たとえば &dquot;ask-no&dquot; にできます (訳注： ask-no は「質問の際に
Return だけ入力したときは no とみなす」という意味)。

<ref id="mime_forward" name="&dollar;mime&lowbar;forward" >
が設定されていない限り、へッダの取り込みはその時点の <ref id="weed"
name="&dollar;weed" > 変数の設定によって制御されます。

転送のためのメッセイジ編集は、新規送信や返信と同じ手順に従います。

<sect1>メイルを延期する<label id="postponing_mail" >
<p>

たまに、メッセイジをすでに書き始めたものの、
送信は後にしたいということがあります。
<em>postpone-message</em> 関数を<em>コンポウズ</em>メニューで
使うと、メイルの本文と添付ファイルは <ref id="postponed"
name="&dollar;postponed" >
変数で指定されたメイルボックスに格納されます。
これはつまり、Mutt を終了して次回また起動したとしても、
そのメッセイジを呼び出せるということです。

メッセイジを延期したあとで再開するには、いくつかの方法があります。
コマンドラインからは &dquot;-p&dquot; オプションが使えますし、
<em>インデックス</em>や<em>ペイジャ</em>から新規作成 (<em>compose</em> 関数)
を実行すると、延期したメッセイジがあるときには再開するかどうか聞かれます。
延期メッセイジが複数あるときは、<em>延期 (postponed)</em> メニューが出てきて、
どのメッセイジを再開したいか選択できます。

<bf>注意:</bf> メッセイジに対する返信を延期したならば、返信済みフラグが
更新されるのは返信メッセイジを実際に完成させて送信したときだけだということに
注意してください。しかも、その親メッセイジと同じフォルダにいなければ
状態がきちんと更新されません。

<ref id="postpone" name="&dollar;postpone" > という四択オプションについても
ご覧下さい。(訳注： postponed とは違います。末尾の &dquot;d&dquot; に注意！)

<sect>設定
<p>

デフォルト設定 (すなわち初期値) は、そのままでも Mutt が使えるように
なっていますが、Mutt を自分の好みにあわせて仕立てたいということもよくあります。
初めて起動したとき、<ref id="commandline" name="コマンドライン" >
オプションの &dquot;-n&dquot; が指定されていなければ
Mutt は「システム」設定ファイル (システム管理者が設定した既定値)
を読み出そうとします。この設定ファイルは多くの場合、
<tt>/usr/local/share/mutt/Muttrc</tt> か <tt>/etc/Muttrc</tt> です
(訳注：FreeBSD などでは <tt>/usr/local/etc/Muttrc</tt> も多いと思う)。
次に Mutt はホウムディレクトリの <tt/.muttrc/ というファイルがないか探します。
もしこのファイルが存在せず、ホウムディレクトリに
<tt/.mutt/ というサブディレクトリがあれば、<tt>.mutt/muttrc</tt>
というファイルを読み込もうとします。

<tt/.muttrc/ は、普段から自分用の<ref id="commands"
name="コマンド" >を入れておいて Mutt を設定するためのファイルです。

それに加えて Mutt は、上で説明したデフォルトのファイルの代わりに実行する、
特定ヴァージョンの設定ファイルをサポートしています。例えば
システム設定ディレクトリに <tt/Muttrc-0.88/ というファイルがあって
Mutt のヴァージョン 0.88 を使っていると、<tt/Muttrc/ ではなく
そのファイルが読み込まれます。
ユーザ設定ファイルに関しても同じことが言えます。
ホウムディレクトリに <tt/.muttrc-0.88.6/ というファイルがあると、
ヴァージョン 0.88.6 の Mutt を走らせたときには
デフォルトの <tt/.muttrc/ の代わりにこのファイルを読み込みます。
ヴァージョン番号は、<ref id="commandline" name="コマンドライン">スイッチの
&dquot;-v&dquot; を使ったり、インデックスメニューから
<tt/show-version/ のキー (デフォルト: V) を使ったりして表示されるものと
同じです。

<sect1>初期化ファイルの構文<label id="muttrc-syntax" >
<p>

初期化ファイルは一連の「コマンド」から成っています。
ファイルの各行には、ひとつでも複数でもコマンドを入れられます。
複数コマンドを使うときはセミコロン (;) で区切らなければなりません。
<tscreen><verb>
set realname='Mutt ユーザ' ; ignore x-
</verb></tscreen>
ハッシュマーク、別名ポンド記号 (&dquot;&num;&dquot;) は
「コメント」文字として使われます。これは初期化ファイルへの注釈に使えます。
コメント文字以降の文章はすべて無視されます。例えば

<tscreen><verb>
my_hdr X-Disclaimer: Why are you listening to me? &num; ここはコメントです
</verb></tscreen>

シングルクウォウト (') とダブルクウォウト (&dquot;) を使って、
スペイスその他の特殊な文字を含む文字列を扱えます。
この二種類の引用符の違いは、多くの一般的なシェルプログラムに似ています。
つまり、シングルクウォウトはその字面どおりの (シェル変数にも変換されず、
バックスラッシュでの文字指定 &lsqb;次の段落を参照&rsqb; も変換されないままの)
文字列を指定するために使う一方、ダブルクウォウトは、中の文字列を解釈すべきだ
ということを示します。
例えば、バックティック (`) はダブルクウォウトの中では解釈されますが、
シングルクウォウトの中では解釈され<bf>ません</bf>。

&bsol; は、その次の文字をそのまま指定 (原語：quote) します。
ちょうど bash や zsh のようなシェルと同じです。
例えば引用符「&dquot;」を文字列の中に入れて使いたいなら、
「&bsol;」を使って、次のその引用符を、解釈しない文字どおりの引用符にできます。
<tscreen><verb>
set realname="Michael \"MuttDude\" Elkins"
</verb></tscreen>

「&bsol;&bsol;」は「&bsol;」そのものを意味します。
「&bsol;n」と「&bsol;r」は通常の C での意味合いと同じで、
それぞれ改行 (LF = linefeed) と復帰 (CR = carriage-return) を意味します。

行末に &bsol; を使えば、コマンドを複数の行に分割できます。
ただし分割地点がコマンド名の途中であってはなりません。

さらには初期化ファイルの中で、一部を Unix コマンドの出力に
置き換えることも可能です。
これはコマンドをバッククウォウト二つ (``) ではさむことによって行なえます。
例えば、
<tscreen><verb>
my_hdr X-Operating-System: `uname -a`
</verb></tscreen>
この `uname -a` の部分は、行を実行する前に「uname -a」という Unix コマンドの
出力で置き換えられます。
ここで注意すべきなのは、初期化ファイルが行指向であるゆえ、
Unix コマンドの出力の最初の行だけにしか置換されないということです。

UNIX 環境変数には、sh や bash といったシェルでやるようにしてアクセスできます。
環境変数の名前の前に &dquot;&dollar;&dquot; を付けるのです。
例えばこうです。
<tscreen><verb>
set record=+sent_on_$HOSTNAME
</verb></tscreen>

Mutt が解釈できるコマンドについては、次節以降で説明していきます。
全コマンド一覧は<ref id="commands" name="コマンド早見表" >を見てください。

<sect1>エイリアスを定義・使用する<label id="alias" >
<p>

使い方: <tt/alias/ <em>エイリアス</em>　<em>アドレス</em> &lsqb; , <em>アドレス</em>, ... &rsqb;

連絡を取ろうとしている人のアドレスをいちいち思い出したり入力したりするのは、
通常とても面倒なことです。
Mutt では、アドレスに割り当てる短い文字列「エイリアス (alias)」を作成できます。

<bf>注意:</bf> グループに対してエイリアスを作成したい
(複数のメイルアドレスを指定したい) 場合は、アドレスを読点 (,)
で区切る<bf>必要</bf>があります。

エイリアスを削除するには、こうします。
(&dquot;*&dquot; はエイリアス全部という意味です)

<tt/unalias/ &lsqb; * | <em>キー</em> <em>...</em> &rsqb;

<tscreen><verb>
alias muttdude me@cs.hmc.edu (Michael Elkins)
alias theguys manny, moe, jack
</verb></tscreen>

他のメイラとは違い、Mutt は
エイリアスを特別のファイルに定義する必要がありません。
コマンド <tt/alias/ は、<ref id="source" name="source" >
などで読み込まれるファイルであれば、どこにでも書けます。
したがって、複数のエイリアスファイルを使うこともできますし、
muttrc の中にすべて定義してしまうこともできます。

その一方で、<ref id="create-alias" name="create-alias" > 関数は
ひとつのファイルしか使えません。
<ref id="alias_file" name="&dollar;alias&lowbar;file" > 変数
で指定されるファイルだけ (デフォルトでは <tt>&tilde;/.muttrc</tt>) です。
しかし、このファイルは特別扱いされるわけではありません。
というのも、Mutt はどのファイルにでもエイリアスを追加できますし、
このファイルもきちんと <ref id="source" name="source" > しなければ
新規エイリアスが有効にならないのです。

例えばこうです。

<tscreen><verb>
source /usr/local/share/Mutt.aliases
source ~/.mail_aliases
set alias_file=~/.mail_aliases
</verb></tscreen>

エイリアスの使い方は、Mutt が <em>To:</em> や <em>Cc:</em>
といったプロンプトでアドレスの入力を促すときにはどこでも、
エイリアスを入力するだけです。
また <ref id="edit_headers" name="&dollar;edit&lowbar;headers" >
変数を設定してあれば、エディタでも適切なヘッダにエイリアスを入力できます。

加えて、種々のアドレス入力プロンプトにおいては、Tab を使えば
一部だけ入力したエイリアスから完全なエイリアスに展開させることもできます。
合致するものが複数あると、Mutt は合致したエイリアスのメニューを出します。
エイリアスの完全な一覧を表示させるには、書きかけのエイリアスのない状態で
Tab を打たなくてはなりません。
たとえばプロンプトの最初や、アドレスが複数あることを示すコンマ
(&dquot;,&dquot;) の後です。

エイリアスメニューでは、エイリアスを好きなだけ <em>select-entry</em> キー
(デフォルト: RET) で選択してから <em>exit</em> キー (デフォルト: q)
を使ってアドレスのプロンプトに戻れます。

<sect1>デフォルトのキー割り当てを変更する<label id="bind" >
<p>
使い方: <tt/bind/ <em/マップ/　<em/キー/　<em/関数/

このコマンドでデフォルトのキー割り当て
(キーを押した時に起動する命令) を変更できます。

<em>マップ</em>は、その割り当てがどのメニューのものなのかを指定します。
現状で定義されているマップはこうなっています。

<descrip>
<tag/generic/
これは実際のメニュー名ではなく、ペイジャとエディタ以外の全メニューにおける
最終候補となるものです。Mutt は、キーが実際のメニューで定義されていないとき、
generic の割り当てを使うのです。これによって、関数を複数のメニューのキーに
割り当てることができますので、同じ効果を得るためにいくつも
bind を書かなくて済みます。
<tag/alias/
エイリアスメニューは、muttrc に定義されている個人的エイリアスの一覧です。
短いエイリアス名から完全なメイルアドレスへの割り当てです。
<tag/attach/
この添付ファイルメニューを使って、受信したメッセイジの添付ファイルを扱います。
<tag/browser/
ブラウザは、ロウカルのディレクトリ構造を閲覧するためにも使いますし、
受信メイルボックスを一覧するためにも使います。
<tag/editor/
このエディタは、ユーザがテキストデイタを入力する一行エディタです。
<tag/index/
インデックスとは、メイルボックスに含まれているメッセイジの一覧です。
<tag/compose/
コンポウズメニューは、新規メッセイジを送信するときに使われる画面のことです。
<tag/pager/
このペイジャは、メッセイジおよび添付ファイルのデイタや
ヘルプ一覧を表示するために使われるモウドのことです。
<tag/pgp/
PGP メニューを使って、送信メッセイジの暗号に使う OpenPGP 鍵を選択します。
<tag/postpone/
延期メニューはインデックスメニューに似ていますが、作成して送信せず
次回まで保存しておいたようなメッセイジを復元するときに使うものです。
</descrip>

<em>キー</em> は割り当てたいキー (またはキーシーケンス = キーの組み合わせ) です。
制御文字を指定するには <em>&bsol;Cx</em> というキーシーケンスを使ってください。
この <em/x/ が制御文字です (例えば Control-A を指定するには
&dquot;&bsol;Ca&dquot; とします)。<em/x/ と <em/&bsol;C/ が大文字であるか
小文字であるかは無視されるので注意してください。つまり <em/&bsol;CA/,
<em/&bsol;Ca/, <em/&bsol;cA/, <em/&bsol;ca/ はすべて等価です。
別の方式は、&dquot;&bsol;&dquot; に続く三桁の 8 進数としてキーを指定します
(例えば <em/&bsol;177/ は <em/&bsol;c?/ と等価です)。

さらに、これも <em/キー/ に含められます。

<tscreen><verb>
\t              タブ (Tab)
<tab>           タブ (Tab)
\r              キャリッジリターン
\n              改行
\e              エスケイプ (Esc)
<esc>           エスケイプ (Esc)
<up>            上矢印 (↑)
<down>          下矢印 (↓)
<left>          左矢印 (←)
<right>         右矢印 (→)
<pageup>        Page Up
<pagedown>      Page Down
<backspace>     Backspace
<delete>        Delete
<insert>        Insert
<enter>         Enter
<return>        Return
<home>          Home
<end>           End
<space>         スペイス
<f1>            ファンクションキー 1  (F1)
<f10>           ファンクションキー 10 (F10)
</verb></tscreen>

<em>キー</em> は、スペイスを含まない限り引用符でくくる必要はありません。

<em>関数</em> は <em>キー</em> が押されたときに取る行動を指定します。
関数すべての一覧については <ref id="functions" name="関数早見表" >
を参照して下さい。また、特殊な関数 noop を指定すると、
そのキーシーケンスへの割り当てを解除します。

<sect1>文字セットのエイリアスを定義する <label id="charset-hook" >
<p>
使い方: <tt/charset-hook/ <em/エイリアス/　<em/文字セット/<newline>
使い方: <tt/iconv-hook/ <em/文字セット/　<em/独自の文字セット/

<tt/charset-hook/ コマンドは文字セット (charset) へのエイリアスを定義します。
これは、Mutt に知られていない文字セット名の付いたメッセイジを
正しく表示するために使えます。

<tt/iconv-hook/ コマンドは文字セットに対してシステム特有の名前を定義します。
これはシステムの文字変換ライブラリが、文字セットに
システム特有のおかしな名前を使うよう主張するときの助けになります。


<sect1>メイルボックスに基づいて変数を設定する<label id="folder-hook" >
<p>
使い方: <tt/folder-hook/ &lsqb;!&rsqb;<em/パターン/　<em/コマンド/

多くの場合、どのメイルボックスを読んでいるかに合わせて
設定を変更できれば便利です。<tt/folder-hook/ コマンドは、
そのようにしてどんな設定コマンドでも実行できる手段を提供します。
<em>パターン</em>は、どのメイルボックスで (読み出す前に)
<em>コマンド</em>を実行するかを指定する正規表現です。
メイルボックスが複数の folder-hook に合致したときには
muttrc で出て来る順番に実行されます。

<bf>注意:</bf> もし <ref id="spoolfile" name="&dollar;spoolfile" > への
ショートカットの  &dquot;!&dquot; をパターンの最初に使うなら、
正規表現の論理演算子 <em/not/ (否定) と区別するために
ダブルかシングルの引用符でくくらなければなりません。

設定はメイルボックスを出るときに復帰<em/しない/ので注意してください。
例えば、実行したいコマンド動作が、読み出すメイルボックスに合わせて
整列方法を変更することだとします。

<tscreen><verb>
folder-hook mutt set sort=threads
</verb></tscreen>

このようにしたとしても、違うメイルボックスを読み出すときに整列方法が
以前の値に復帰するわけではありません。<em/デフォルト/ のコマンドを指定するには
&dquot;.&dquot; というパターンを使ってください。

<p>
<tscreen><verb>
folder-hook . set sort=date-sent
</verb></tscreen>
<p>(訳者の蛇足：つまり、上記のふたつの folder-hook を組み合わせて使えば、
普段は送信日付で整列し、mutt というパターンに合致するメイルボックスでは
スレッド整列になります。mutt に合致するメイルボックスから
違うメイルボックスに移ると送信日付による整列に戻ります。)

<sect1>キーボードマクロ<label id="macro" >
<p>
使い方: <tt/macro/ <em/メニュー/　<em/キー/　<em/シーケンス/ &lsqb; <em/説明/ &rsqb;

マクロは、キーひとつで連続作業を実行したいときに便利です。
<em>メニュー</em>のメニューでその<em>キー</em>を押すと、
<em>シーケンス</em>を入力したのと同様に振る舞うのです。
ですから、よく連続して入力するコマンドがあれば、
マクロを作成してキーひとつでそのコマンドを実行するようにできます。

<em>キー</em>と<em>シーケンス</em>は<ref id="bind" name="キー割り当て" >と
同じルールで展開されます。ただ、いくつか追加があります。
第一点は、<em>シーケンス</em>におけるコントロウルキャラクターを
<em/&circ;x/ とも指定できることです。
カレット (&dquot;&circ;&dquot;) を使うには
<em/&circ;&circ;/ とする必要があります。
第二に、<em/Up/ などの一部のキーを指定したり、
関数を直接起動したりするために <em>&lt;キー名&gt;</em> と
<em>&lt;関数名&gt;</em> というフォーマットを使えます。
キー名の一覧については<ref id="bind" name="キー割り当ての節" >を
参照してください。関数は<ref id="functions" name="関数早見表" >で
一覧になっています。

マクロに関数名を直接使う利点は、それによって
動作時のキー割り当てと関係なくマクロが動くので、
特定のキー定義をしてあるユーザでなくとも使えるということです。
これでマクロは堅固かつ可搬 (ポータブル) になり、何人かで使うファイル
(例えばシステムの Muttrc) の中でマクロを定義するのも容易になります。
(訳注：ここで逆に考えてみれば、関数名を直接指定<em/しない/マクロは、
folder-hook 等で bind を実行すると違う結果を得ることができるので
面白いことができるかもしれません。)

必須ではありませんが、説明文を<em/シーケンス/の後ろに指定できます。
これはヘルプ画面に表示されます。

<bf>注意:</bf> ヘルプ画面に表示されるマクロ定義 (定義されていればですが) は、
自動的に画面の幅に切り取られてしまい、折り返し表示はされません。

<sect1>色と白黒の画面属性を使う<label id="color" >
<p>
使い方: <tt/color/ <em/対象/　<em/前景/　<em/背景/ &lsqb; <em/正規表現/ &rsqb;<newline>
使い方: <tt/color/ index <em/前景/　<em/背景/　<em/パターン/<newline>
使い方: <tt/uncolor/ index <em/パターン/ &lsqb; <em/パターン/ ...  &rsqb;<newline>

端末がカラー表示をサポートしていれば、独自の色構成を創作して
一味ちがう Mutt にすることができます。ある対象 (情報の型) の色を定義するには
前景色<bf/と/背景色の両方を指定しなければなりません
(前景だけや背景だけを指定することは不可能です)。

<em>対象</em>は次のどれかになります。

<itemize>
<item>attachment (添付ファイル情報)
<item>body (メッセイジの本文で<em/正規表現/に合致する部分)
<item>bold (メッセイジの本文の太字強調部分)
<item>error (Mutt が出力するエラーメッセイジ)
<item>header (メッセイジヘッダで<em/正規表現/に合致する部分)
<item>hdrdefault (ペイジャにおけるメッセイジヘッダのデフォルトの色)
<item>index (メッセイジインデックスで<em/パターン/に合致する部分)
<item>indicator (メニューで現在の項目を指し示す矢印もしくはバー
&lsqb;<ref id="arrow_cursor" name="&dollar;arrow&lowbar;cursor"> 参照&rsqb;)
<item>markers (ペイジャの、折り返された行のはじめの &dquot;+&dquot; マーク)
<item>message (情報メッセイジ &lsqb;訳注：エラーでない情報、という意味のように思われる&rsqb;)
<item>normal (普通の部分)
<item>quoted (メッセイジの本文で <ref id="quote_regexp"
name="&dollar;quote&lowbar;regexp"> に合致する文章)
<item>quoted1, quoted2, ... quoted<bf/N/ (何段階か重なっている引用)
<item>search (ペイジャでの検索語句の強調)
<item>signature (署名)
<item>status (メイルボックスやメッセイジに関する情報を表示する、モウド行)
<item>tilde (ペイジャで空行を埋める &dquot;&tilde;&dquot; の部分)
<item>tree (メッセイジインデックスと添付ファイルメニューで描かれる
スレッドツリー)
<item>underline (メッセイジ本文の下線つきパターンを強調する
&lsqb;訳注：カラーでは下線を使えないのでこれで代用する&rsqb; )
</itemize>

<em>前景</em>と<em>背景</em>には以下のどれかを使えます。

<itemize>
<item>white
<item>black
<item>green
<item>magenta
<item>blue
<item>cyan
<item>yellow
<item>red
<item>default
<item>color<em/x/
</itemize>

<em>前景</em>には先頭に bright というキーワードを付けて濃くすることもできます
(例えば brightred)。

端末がサポートしていれば、特別なキーワードである <em/default/ を
透明色として使えます。また <em/brightdefault/ という値も有効です。
Mutt が <em/S-Lang/ ライブラリにリンクされていれば、
透明色が正しく動作するように <em/COLORFGBG/ 環境変数を
端末のデフォルト色として設定しておく必要もあります。
例えば (Bourne 系シェルの場合) こうです。

<tscreen><verb>
set COLORFGBG="green;black"
export COLORFGBG
</verb></tscreen>

<bf>注意</bf>: この変数を設定するとき、<em/S-Lang/ ライブラリでは
<em/white/ や <em/yellow/ を使わず、白には <em/lightgray/, 黄色には <em/brown/
というキーワードを使う必要があります。

<bf>注意</bf>: uncolor コマンドは index 対象にのみ適用できます。
これは項目をリストから消去します。
消去するには<bf/必ず/ color コマンドで指定したのと同じパターンを指定
しなければなりません。&dquot;*&dquot; というパターンは特別な印で、
color index のリストを全項目消去することを意味します。

Mutt は <em>color0</em>, <em>color1</em>, ..., <em>color</em><bf>N-1</bf>
(<bf/N/ は端末でサポートされている色の数) といったキーワードも認識できます。
これは、画面の色を (例えば xterm の color2 に関連付けてある色を変更したりして)
割り当て直したときに有用です。色名が通常の意味を失ってしまうからです。

端末がカラー表示をサポートしていなくとも、画面属性を
&dquot;mono&dquot; コマンドの使用によって変更することが可能です。

使い方: <tt/mono/ <it/&lt;対象&gt; &lt;属性&gt;/ &lsqb; <em/正規表現/ &rsqb;<newline>
使い方: <tt/mono/ index <em/属性/　<em/パターン/<newline>
使い方: <tt/unmono/ index <em/パターン/ &lsqb; <em/パターン/ ... &rsqb;<newline>

<em>属性</em>の部分は以下のどれかです。

<itemize>
<item>none
<item>bold (太字)
<item>underline (下線)
<item>reverse (反転)
<item>standout (点滅等 &lsqb;語義：くっきりと見やすい&rsqb;)
</itemize>

<sect1>不要なメッセイジヘッダを無視 (間引き) する <label id="ignore" >
<p>
使い方: <tt/&lsqb;un&rsqb;ignore/ <em/パターン/ &lsqb; <em/パターン/ ... &rsqb;

多くのメッセイジには、自動処理システムによって付加された、すなわち、
画面に表示させても役に立つとは思えないようなヘッダフィールドが
たくさん付いています。
このコマンドで、普段は見ないでいたいヘッダフィールドを指定することができます。

ヘッダフィールド名全体を指定する必要はありません。
例えば &dquot;ignore content-&dquot; は
&dquot;content-&dquot; で始まるヘッダフィールドをすべて無視します。

以前に追加した項目をリストから外すには &dquot;unignore&dquot; コマンドを
使ってください。&dquot;unignore&dquot; コマンドは、指定したパターンの
ヘッダフィールドを表示させます。たとえば &dquot;ignore x-&dquot;
としているとき、&dquot;unignore x-mailer&dquot; で x-mailer: を表示できます。

&dquot;unignore *&dquot; は無視リストから全項目を消去します。

以下は一例です。
<tscreen><verb>
# Sven の冷徹なヘッダ間引き設定
ignore *
unignore from date subject to cc
unignore organization organisation x-mailer: x-newsreader: x-mailing-list:
unignore posted-to:
</verb></tscreen>

<sect1>代替アドレス<label id="alternates">
<p>
使い方: <tt/&lsqb;un&rsqb;alternates/ <em/正規表現/ &lsqb; <em/正規表現/ ... &rsqb;<newline>

Mutt は種々の関数において、自分で送信したメッセイジか
他人から受信したメッセイジかに応じて違う扱い方をします。
例えば、かつて自分が別の団体へ送信したメッセイジに返信を書くとき、
Mutt は自動的にその元メッセイジの宛先へ返事を送るよう提案します。
多くの場合、自分に返事を書くなどということは意味をなさないからです。
(<ref id="reply_to" name="&dollar;reply&lowbar;to"> 参照。)

多くのユーザは複数の異なるアドレスでメイルを受信します。
この場合 Mutt の機能をフル活用するには、どのアドレスで自分がメイルを
受信するのかを Mutt が理解できるようにしなくてはなりません。
これこそが <tt/alternates/ コマンドの目的とするところです。
このコマンドは正規表現のリストを受け取り、それらを使って
自分のメイルを受信するアドレスを識別するのです。

リストから正規表現を削除するには <tt/unalternates/ コマンドを使います。

<sect1>メイリングリスト<label id="lists" >
<p>
使い方: <tt/&lsqb;un&rsqb;lists/ <em/正規表現/ &lsqb; <em/正規表現/ ... &rsqb;<newline>
使い方: <tt/&lsqb;un&rsqb;subscribe/ <em/正規表現/ &lsqb; <em/正規表現/ ... &rsqb;

Mutt には<ref id="using_lists" name="メイリングリストの扱い" >に関する
優れた機能が幾つかあります。その益にあずかるには、
どのアドレスがメイリングリストに属するのか、
そして自分がどのメイリングリストを講読しているのかを指定しなければなりません。
そうすれば、<ref id="list-reply" name="list-reply" > 関数は
既知のメイリングリストすべてに動作します。
そのうえ、購読しているリストにメッセイジを送るときには Mutt が
Mail-Followup-To へッダを付けて、返信を自分のアドレスにも送ることのないよう
他の人のメイルユーザエイジェント (原語：Mail User Agents = MUA) に
伝えてくれます。
ただ、Mail-Followup-To へッダは非標準的な拡張であって、すべての
MUA でサポートされているわけではないことに注意してください。
このへッダを付けても、リストのメッセイジの個人的 CC: を受け取らないよう
防弾チョッキの役目をしてくれるわけではありません。
Mail-Followup-To へッダの生成は設定変数 <ref id="followup_to"
name="&dollar;followup&lowbar;to" > によって制御されることも
覚えておいてください。

さらに正確に言うと、Mutt が管理しているのは、
既知および購読中のメイリングリストのアドレスを表すパターンのリストです。
購読しているメイリングリストはすべて既知になります。
あるメイリングリストを既知であるということにするには
lists コマンドを使ってください。
購読中にするには subscribe コマンドを使います。

どちらのコマンドにも正規表現を使えます。
例えば、Mutt のバグトラッキングシステムにおける
各バグレポートのアドレスに送信されたメッセイジを
メイリングリストのメイルであるということにするには
&dquot;subscribe [0-9]*@bugs\.guug\.de&dquot; とすれば良いわけです。
多くの場合は、単にリストのメイルアドレスの一部分を指定するだけで十分です。

あいまいさをなくすのに十分な長さでアドレスを指定してください。
例えば、Mutt のメイリングリストを購読していれば
<em>mutt-users@mutt.org</em> に宛てられたメイルを受信することになります。
それで、このアドレスがメイリングリストだということを Mutt に教えるには、
初期化ファイルに &dquot;lists mutt-users&dquot; を追加できます。
これを購読していることを Mutt に教えるには、代わりに
&dquot;subscribe mutt-users&dquot; を初期化ファイルに追加してください。
万一 <em>mutt-users@example.com</em> というアドレスの人からメイルを
受け取ることがあるなら、&dquot;lists mutt-users@mutt.org&dquot;
か &dquot;subscribe mutt-users@mutt.org&dquot;
を使って、実際にリストから来たメイルにだけ一致させることができます。

unlists コマンドは、既知と購読中のメイリングリストのリストから
項目を消去するために使います。項目をすべて消去するには
&dquot;unlists *&dquot; を使って下さい。

メイリングリストを、購読中のメイリングリストのリストからは消去しつつ、
既知のメイリングリストのリストに残しておくためには、
&dquot;unsubscribe&dquot; を使ってください。

<sect1>複数のスプールメイルボックスを使う<label id="mbox-hook" >
<p>
使い方: <tt/mbox-hook/ &lsqb;!&rsqb;<em/パターン/　<em/メイルボックス/

このコマンドは、終了時やフォルダ変更時に、
既読メッセイジを特定のメイルボックスから違うメイルボックスへと、
自動で移動させるのに使います。
<em/パターン/は「スプール」のメイルボックスとして扱うメイルボックスを指定する
正規表現で、<em/メイルボックス/は、既読時にメイルをどこにセイブすべきか
を指定します。

一部の <em/hook/ コマンドと違って、<em/最初に/合致したパターンだけが
使われます (既読のメイルを複数のメイルボックスにセイブすることはできません)。

<sect1>メイルを受信するメイルボックスを定義する<label id="mailboxes" >
<p>
使い方: <tt/mailboxes/ &lsqb;!&rsqb;<em/ファイル名/ &lsqb; <em/ファイル名/ ... &rsqb;

このコマンドは、メイルを受信することがあるフォルダを指定し、
指定したフォルダは新着メッセイジがあるかチェックされることになります。
デフォルトでは、このフォルダのうちのいくつに新着メッセイジがあるかを、
メインメニューのステイタスバーが表示しています。
<p>
フォルダ変更時に<em>スペイス</em>を押すと、新着メイルのあるフォルダを
次々に表示します。<!-- Hitomi 氏による cycle through の訳。うまい！ -->
<p>
ディレクトリブラウザで TAB キーを押すと、
<tt/mailboxes/ コマンドで指定したファイルを表示するメニューが出ます。
コマンドラインから <tt/-y/ オプション付きで起動されると、
Mutt は自動的にこのモウドに入ります。

&dquot;unmailboxes&dquot; コマンドを使って、メイルを受信するフォルダの
リストから項目を削除できます。すべて削除するには &dquot;unmailboxes *&dquot;
を使います。

<p>
<bf>注意:</bf> 新着メイルは、最終変更時刻と最終アクセス時刻との比較によって
検出されます。<tt/biff/ や <tt/frm/ のようなユーティリティや
その他メイルボックスにアクセスするプログラムがアクセス時刻を
適切に再設定しなければ、そのメイルボックスでは Mutt が新着メイルを
検出できなくなってしまいます。
バックアップツールもまた、アクセス時刻を更新してしまう一般的な原因です。
<p>

<bf>注意:</bf> <tt/mailboxes/ コマンド中のファイル名は
コマンド実行時に解決されますので、<ref id="shortcuts"
name="ショートカット文字"> (&dquot;=&dquot; や &dquot;!&dquot; など)
を含んでいるなら、その文字に影響する変数
(<ref id="folder" name="&dollar;folder"> や <ref id="spoolfile"
name="&dollar;spoolfile" >など) の定義は <tt/mailboxes/ コマンドの
前に実行すべきです。

<sect1>ユーザ定義へッダ<label id="my_hdr" >
<p>
使い方:<newline>
<tt/my_hdr/ <em/文字列/<newline>
<tt/unmy_hdr/ <em/フィールド/ &lsqb; <em/フィールド/ ... &rsqb;

&dquot;my&lowbar;hdr&dquot; コマンドで
自分独自のヘッダフィールドを創作できます。
このヘッダフィールドは送信するメッセイジすべてに付加されます。

例えば送信メッセイジすべてに &dquot;Organization:&dquot; ヘッダフィールドを
付加したいのであれば、

<quote>
my_hdr Organization: 大会社 (株)<!-- A Really Big Company, Anytown, USA  -->
</quote>

というコマンドを <tt/.muttrc/ に入れればいいのです。

<bf>注意:</bf> キーワードとコロン (&dquot;:&dquot;) の間に
スペイスを入れることは許され<em/ません/。
電子メイルの規格 (RFC822 &lsqb;訳注：現在は 2822 か&rsqb;) で、
そこにスペイスを入れるのは違反だと言われています。
それで Mutt はその規則を強制するというわけです。

単独のメッセイジにヘッダフィールドを付加したい場合は、
<ref id="edit_headers" name="&dollar;edit&lowbar;headers" > 変数を
設定しておくか、送信メニュー (訳注：コンポウズメニューのことか) で
<em/edit-headers/ 関数 (デフォルト: E) を使うかのいずれかによって、
メッセイジの本文と一緒にヘッダを編集できます。

ユーザ定義のヘッダフィールドを消去するには
&dquot;unmy&lowbar;hdr&dquot; コマンドを使ってください。
アスタリスク (&dquot;*&dquot;) を指定して
すべてのヘッダフィールドを消去することもできますし、
消去するフィールドを指定することもできます。
例えば、&dquot;To&dquot; と &dquot;Cc&dquot; ヘッダフィールドを
すべて削除するには、こうすればよいのです。

<quote>
unmy_hdr to cc
</quote>

<sect1>
メッセイジ閲覧時のヘッダの順序を定義する<label id="hdr_order" >
<p>
使い方: <tt/hdr_order/ <em/ヘッダ1/ &lsqb; <em/ヘッダ2/ <em/ヘッダ3/ ... &rsqb;

このコマンドによって、
メッセイジ閲覧時に Mutt がヘッダを表示する順序を指定できます。

&dquot;unhdr_order *&dquot; は以前に指定したヘッダをすべて
順序リストから解除しますから、システム全体の初期化ファイルによって設定された
ヘッダ順序の効果も消去してしまいます。

<tscreen><verb>
hdr_order From Date: From: To: Cc: Subject:
</verb></tscreen>

<sect1>デフォルトのセイブファイル名を指定する<label id="save-hook" >
<p>
使い方: <tt/save-hook/ &lsqb;!&rsqb;<em/パターン/　<em/ファイル名/

このコマンドは、メッセイジをセイブするときに使うファイル名の
既定値を上書きするのに使います。
<em/ファイル名/は、<em/正規表現パターン/に合致するアドレスが <em/From:/
のときか、自分が差出人でメッセイジの <em/To:/ が<em/正規表現パターン/
に合致するときに、デフォルトのファイル名として使われます。

<em/パターン/の正確な書式の情報については<ref id="pattern_hook"
name="「フックにおけるメッセイジの合致」の節" >を参照してください。

例:

<tscreen><verb>
save-hook me@(turing\\.)?cs\\.hmc\\.edu$ +elkins
save-hook aol\\.com$ +spam
</verb></tscreen>

<ref id="fcc-save-hook" name="fcc-save-hook" > コマンドも参照して下さい。

<sect1>メッセイジ作成時のデフォルトの Fcc: メイルボックスを指定する<label
 id="fcc-hook" >
<p>
使い方: <tt/fcc-hook/ &lsqb;!&rsqb;<em/パターン/　<em/メイルボックス/

このコマンドは送信メッセイジを <ref id="record" name="&dollar;record" >
以外のメイルボックスに保存するために使います。
Mutt はまず、メッセイジ宛先リストの中で<em/正規表現パターン/を検索して、
最初に合致したものの<em/メイルボックス/を
デフォルトの Fcc: メイルボックスとして使います。
合致するものが見付からなければ <ref id="record" name="&dollar;record" >
つまり「記録」メイルボックスに保存します。

<em/パターン/の正確な書式の情報については<ref id="pattern_hook"
name="「フックにおけるメッセイジの合致」の節" >を参照してください。

例: <tt>fcc-hook aol.com&dollar; +spammers</tt>

上のようにすると、aol.com ドメインに行くことになっているメッセイジは
すべてデフォルトで +spammers メイルボックスにコピーが保存されます
(訳注：もしあれば someone@aolicom なんていうのも該当してしまうけれど)。
<ref id="fcc-save-hook" name="fcc-save-hook" > コマンドの節も参照してください。

<sect1>デフォルトのセイブファイル名とデフォルトの Fcc: メイルボックスを
同時に指定する<label id="fcc-save-hook" >
<p>
使い方: <tt/fcc-save-hook/ &lsqb;!&rsqb;<em/パターン/　<em/メイルボックス/

このコマンドはショートカット (訳注：短縮コマンドのような意味) であり、
同じ引数で <ref id="fcc-hook" name="fcc-hook" > と <ref id="save-hook"
name="save-hook" > を両方とも実行するのと等価です。

<sect1>メッセイジの宛先によって設定を変更する<label id="send-hook"><label
id="reply-hook">
<p>
使い方: <tt/reply-hook/ &lsqb;!&rsqb;<em/パターン/　<em/コマンド/<newline>
使い方: <tt/send-hook/ &lsqb;!&rsqb;<em/パターン/　<em/コマンド/

このコマンドを使って、メッセイジの宛先に基づいて任意のコマンドを実行できます。
<em/パターン/は望みのアドレスに合致する正規表現です。
<em/コマンド/は、<em/パターン/がメッセイジの宛先に合致するときに実行されます。

<tt/reply-hook/ は<em/送信する/メッセイジの代わりに<em/返信/<bf/元/<em/の/
メッセイジに対して検索されます。<tt/send-hook/ は<em/新規/メッセイジにも
<em/返信/メッセイジに対しても検索されます。
<bf/注意:/ <tt/reply-hook/ はユーザの設定ファイルに指定されている順番に
<bf/関わらず/ <tt/send-hook/ より<bf/先に/検索されます。

<tt/send-hook/ および <tt/reply-hook/ の各タイプとも、
複数の該当結果が生じたときにコマンドが実行される順番は
(そのタイプのフックのうちでは) muttrc に書かれている順です。

<em/パターン/の正確な書式の情報については<ref id="pattern_hook"
name="「フックにおけるメッセイジの合致」の節" >を参照してください。

例: <tt/send-hook mutt &dquot;set mime&lowbar;forward signature=''&dquot;/

このコマンドの別の典型的な使い方は、署名と出典の言語を
宛先に応じて変更するために <ref id="attribution" name="&dollar;attribution" >,
<ref id="signature" name="&dollar;signature" >,
<ref id="locale" name="&dollar;locale" > 変数の値を切り換えることです。

<bf>注意</bf>: send-hook は最初に宛先リストができた直後に<em>《一度》</em>
実行されるだけです。返信を書いたり編集したりしてから宛先を追加しても、
send-hook は《実行され<em/ません/》。
また、宛先ヘッダや題名を変える my_hdr コマンドが
send-hook から実行されたとき、そのメッセイジには何の影響も与えない
ということにも注意してください。(訳注：
unmy_hdr 等で変更されなければ、<em/次の/メッセイジには適用される)

<sect1>メッセイジ整形前に設定を変更する<label id="message-hook" >
<p>
使い方： <tt/message-hook/ &lsqb;!&rsqb;<em/パターン/　<em/コマンド/

このコマンドを使って、メッセイジの閲覧や整形の前に、
そのメッセイジに関する情報に基づいて任意の設定コマンドを実行できます。
表示しようとしているメッセイジに<em>パターン</em>が合致していれば
<em>コマンド</em>が実行されます。複数の合致が生じるときは、
muttrc にある順番でコマンドが実行されます。

<em/パターン/の正確な書式の情報については<ref id="pattern_hook"
name="「フックにおけるメッセイジの合致」の節" >を参照してください。

例：
<tscreen><verb>
message-hook ~A 'set pager=builtin'
message-hook '~f freshmeat-news' 'set pager="less \"+/^  subject: .*\""'
</verb></tscreen>

<sect1>宛先の人の暗号鍵を選ぶ<label id="crypt-hook" >
<p>
使い方: <tt/crypt-hook/ <em/パターン/　<em/鍵ID/

メッセイジを暗号化するとき、
ある特定の鍵をそのメイルアドレスに自動で割り当てたいと思うかもしれません。
それは宛先の公開鍵が目的のアドレスからは推測できないからであったり、
Mutt の通常の選択をなんらかの理由で上書きする必要があるからであったりします。
crypt-hook コマンドは、特定の宛先へのメッセイジを暗号化するときに使う公開鍵の
ID を指定する手段を提供するのです。

ここでは広い意味で「鍵 ID」と言っています。数字の鍵 ID を入れることも
できますし、メイルアドレスも使えます。本名でも構いません。

<sect1>キーボードバッファにキーシーケンスを加える<label id="push" >
<p>
使い方: <tt/push/ <em/文字列/

このコマンドは、指名した文字列をキーボードバッファに入れます。
この文字列には <ref id="macro" name="macro" > コマンドのシーケンスのように、
コントロウルキャラクタ、キーの名前、関数名を含められます。
<!-- like the sequence string in the macro command が -->
<!-- 全体にかかるのか function names にかかるのか疑問 -->
これを使って、起動時や特定のフォルダへの移動時に、
複数のコマンドを連続実行することもできます。<!-- run a sequence of commands -->

<sect1>関数を実行する<label id="exec" >
<p>
使い方: <tt/exec/ <em/関数/ &lsqb; <em/関数/ ... &rsqb;

このコマンドは、あらゆる関数の実行に使えます。
関数は<ref id="functions" name="関数早見表" >で一覧にしてあります。
&dquot;exec 関数&dquot; は &dquot;push &lt;関数&gt;&dquot; と等価です。

<sect1>メイルのスコアリング (重み付け)<label id="score-command" >
<p>
使い方: <tt/score/ <em/パターン/　<em/値/<newline>
使い方: <tt/unscore/ <em/パターン/ &lsqb; <em/パターン/ ... &rsqb;

<tt/score/ コマンドは、<em/パターン/がメッセイジに合致するなら、指定した
<em/値/をそのメッセイジのスコアに加えます。<em/パターン/は<ref id="patterns"
name="「パターン」" >の節に説明してある書式の文字列です
(注意: 効率上の理由から、インデックスで扱えない情報を走査するパターン、
例えば <tt>&tilde;b</tt>, <tt>&tilde;B</tt>, <tt>&tilde;h</tt> 等は
使えません<!-- may not...「使わない方が良いでしょう」か？ -->)。
<em/値/は正か負の整数です。メッセイジの
最終的なスコアは、合致する <tt/score/ コマンド<!-- entry -->すべての合計です。
しかしながら、<em/値/の前に等号 (=) を付けて、特定の score
コマンド<!-- entry -->に合致すればそこで計算を止めさせる (訳注：確定させる)
ということもできます。負数の最終スコアは 0 に丸められます。

<tt/unscore/ コマンドは score コマンドのリストから項目<!-- entry -->を
除去します。<tt/score/ コマンドで指定したのと<bf/同じ/パターンを
指定しなければ除去できません。
&dquot;*&dquot; というパターンは score コマンド<!-- entry -->のリストを
すべて消去するという意味の特殊記号です。

<sect1>変数を設定する<label id="set" >
<p>
使い方: <tt/set/ &lsqb;no|inv&rsqb;<em/変数/&lsqb;=<em/値/&rsqb; &lsqb; <em/変数/ ... &rsqb;<newline>
使い方: <tt/toggle/ <em/変数/ &lsqb;<em/変数/ ... &rsqb;<newline>
使い方: <tt/unset/ <em/変数/ &lsqb;<em/変数/ ... &rsqb;<newline>
使い方: <tt/reset/ <em/変数/ &lsqb;<em/変数/ ... &rsqb;

このコマンドは<ref id="variables" name="設定変数" >を設定したり解除したり
するのに使います。変数には基本的な四つの型があります。boolean (二値),
number (数値), string (文字列), quadoption (四値) です。
<em/boolean/ の変数は <em/設定されている/ (真) か <em/設定されていない/ (偽)
かのいずれかです (原語：set (true) と unset (false))。
<em/number/ 変数には正の整数を割り当てることができます。

<em/string/ 型の変数はいくつかの文字 (原語：printable characters,
つまり制御文字以外の文字) で構成されます。
スペイスやタブを含むならば引用符で括らなければなりません。
また &dquot;C&dquot; のエスケイプシーケンス <bf/&bsol;n/ と <bf/&bsol;t/ を、
それぞれ改行とタブの代わりに使用できます。

<em>quadoption</em> 型の変数は、特定の動作について実行前に質問<!-- prompted -->
するかどうかを制御したり、デフォルト (訳注：リターンだけを押したとき) の
動作を指定したりするのに使います。<em>yes</em> という値は、あたかも質問に
yes と答えたかのような動作<!-- 実際は action にかかっているわけではないが -->を
自動で引き起こします。それと同様、<em/no/ という値は、no と答えたかのような
動作を引き起こします。<em>ask-yes</em> という値はデフォルトの答えを yes にして
質問しますし、<em>ask-no</em> はデフォルトの答えを no にします。

&dquot;no&dquot; を変数の前に付けると、変数を解除します。
例: <tt>set noaskbcc</tt>

<em>boolean</em> 型の変数に関しては、変数名の前に <tt>inv</tt> を付けて
値を切り替えられます (on ⇔ off)。これはマクロを書く時に便利です。
例: <tt>set invsmartl&lowbar;wrap</tt>

<tt>toggle</tt> コマンドは、指定した変数すべての頭に自動で <tt/inv/ を付けます。

<tt>unset</tt> は指定した変数すべての頭に <tt>no</tt> を付けるコマンドです。

<em/インデックス/メニューで enter-command 関数を使えば、
変数の名前の前に疑問符を付けることによって、変数の値を問い合わせられます。

<tscreen><verb>
set ?allow_8bit
</verb></tscreen>

<!-- ???
この疑問符は、実際には boolean 変数と quadoption 変数に対してしか
要求されていません。
-->

<tt>reset</tt> コマンドは与えられた変数すべてをコンパイル時のデフォルト
(おそらく、このマニュアルに書いてある値) に戻します。
<tt>set</tt> コマンドで変数の前に &dquot;&amp;&dquot; を付けると
<tt>reset</tt> コマンドと同じ挙動となります。

<tt/reset/ コマンドには特別な変数 &dquot;all&dquot; が存在し、
これですべての変数をシステムのデフォルトに戻すことができます。

<sect1>初期化コマンドを別のファイルから読み込む<label id="source" >
<p>
使い方: source <it>ファイル名</it>

このコマンドで、初期化コマンドを他のファイルから取り込めます。
例えばエイリアスファイルを <tt>&tilde;/.mail&lowbar;aliases</tt> に配置すれば、
<tt>&tilde;/.muttrc</tt> を (訳注：他ユーザから) 読めるようにしても、
エイリアスは秘密にしておけます。

ファイル名の最初がティルド (&dquot;&tilde;&dquot;) であれば、
自分のホウムディレクトリのパスに展開されます。

ファイル名が縦線 (|) で終わっていれば、指定した<em/ファイル名/のファイルは
実行プログラムとみなされ、そこから入力を読み出します。(例:
<tt>source ~/bin/myscript|/</tt>)

<sect1>フックを取り除く<label id="unhook" >
<p>
使い方: <tt/unhook/ &lsqb; * | <em/フック/ &rsqb;

このコマンドで、それまでに設定してきたフックを流し去ることができます。
あらゆるフックを消すのも &dquot;*&dquot; を引数として与えることによって
できますし、<tt>unhook send-hook</tt> のようにして特定のタイプのフックを
すべて消すということもできます。

<sect>高度な使い方

<sect1>正規表現<label id="regexp" >
<p>
Mutt における文字列パターンは、より複雑な<ref id="patterns"
name="パターン">における文字列パターンも含めて、すべて正規表現
(regular expressions = regexp) の「POSIX 拡張」文法 (egrep や
GNU awk で使われている文法とほぼ同じです) を使って指定しなくてはなりません。
便宜のため、以下にこの文法の簡単な説明を含めました。

検索は、パターンに一つでも大文字があれば文字の大小を意識し、
それ以外は大小を意識しません。&dquot;&bsol;&dquot; を
初期化コマンド中の正規表現に使うには
&dquot;&bsol;&bsol;&dquot; とする必要があるので注意してください。

正規表現は一つのパターンで何種類かの文字列を表します。<!-- 意訳すぎ？ -->
正規表現は代数表現と同じように、
より小さな式を色々な演算子で組み合わせて構築されます。

正規表現は、「&dquot;」や「'」で囲んだり区切ったりできます。
これは正規表現が空白文字を含む場合に便利です。区切り記号「&dquot;」と「'」の
処理に関するさらに詳細な情報は、<ref id="muttrc-syntax"
name="「初期化ファイルの構文」" >の項を参照してください。
そのままの記号として「&dquot;」や「'」に合致させるには、
記号の前に「&bsol;」(バックスラッシュ [訳注：逆向きスラッシュではなく
半角「￥」が表示されるフォントもある]) をつけてください。

基本となる単位は文字ひとつに合致する正規表現です。
ほとんどの文字 ― 英数字に関してはすべての文字 ― は、
自分自身にマッチする正規表現です。
特殊な意味を持つメタ文字記号は、前にバックスラッシュを付けることによって
本来の記号に合致します。(訳注：つまり &dquot;.&dquot; に合致する正規表現は
&dquot;&bsol;.&dquot;)

ピリオド &dquot;.&dquot; はどんな文字にでも合致します。
カレット &dquot;&circ;&dquot; とドル記号 &dquot;&dollar;&dquot; はそれぞれ、
行の最初と最後という、文字ではない部分に合致するメタ文字です。

文字を &dquot;&lsqb;&dquot; と &dquot;&rsqb;&dquot; で囲んだリストは、
その中のどの文字 (一字) にでも合致します。
そのリストの最初の文字がカレット &dquot;&circ;&dquot; であれば、
そのリストに<bf>ない</bf>文字に合致します。
例えば <bf>&lsqb;0123456789&rsqb;</bf> は十進数の数字ひとつに合致します。
ある範囲内における最初と最後の文字の間にハイフン &dquot;-&dquot;
を置けば、その範囲の ASCII 文字全体を指定できます。
リストの中ではほとんどのメタ文字から特別な意味がなくなります。
&dquot;&rsqb;&dquot; という記号そのものを含めるには、リストの最初に置きます。
同様に、&dquot;&circ;&dquot; そのものを含めたい場合はリストの最初以外のどこかに
置けば大丈夫です。そしてハイフン記号 &dquot;-&dquot;
そのものを含めるにはリストの最後に置くというわけです。

あるクラスの文字は、前もって特定の名前で定義してあります。
文字クラスは、「&lsqb;:クラスを表すキーワード:&rsqb;」という構成です。
以下のクラスは POSIX 標準で定められているものです。

<descrip>
<tag/&lsqb;:alnum:&rsqb;/
アルファベットと数字
<tag/&lsqb;:alpha:&rsqb;/
アルファベット
<tag/&lsqb;:blank:&rsqb;/
スペイスとタブ
<tag/&lsqb;:cntrl:&rsqb;/
制御文字
<tag/&lsqb;:digit:&rsqb;/
数字
<tag/&lsqb;:graph:&rsqb;/
表示文字であり可視文字でもある文字 (スペイスは表示文字だが不可視。
一方で &quot;a&quot; は表示文字かつ可視な文字)
<tag/&lsqb;:lower:&rsqb;/
小文字のアルファベット
<tag/&lsqb;:print:&rsqb;/
表示文字 (制御文字でない文字のこと)
<tag/&lsqb;:punct:&rsqb;/
記号 (アルファベット、数字、制御文字、空間文字のどれでもない文字のこと)
<tag/&lsqb;:space:&rsqb;/
空間文字 (幾つか挙げてみると、
スペイス、タブ、改ペイジといったところ)
<tag/&lsqb;:upper:&rsqb;/
大文字のアルファベット
<tag/&lsqb;:xdigit:&rsqb;/
16 進数
</descrip>

文字クラスは、文字リストの括弧内の正規表現でのみ有効です。
注意してほしいのは、このクラス名に付いている角括弧はシンボル名の一部であり、
リストを囲む角括弧に加えて、さらに必要になるということです。
例えば <bf>&lsqb;&lsqb;:digit:&rsqb;&rsqb;</bf> が
<bf>&lsqb;0-9&rsqb;</bf> と等価です。

さらに二つの特殊シーケンスを文字リスト中で使えます。
これは非 ASCII 文字セットに適用されるもので、以下のように、
そうした文字セットでは単一のシンボル (照合要素 collating elements
と呼ばれる) が、照合や整列において等価な複数の文字列や文字を
象徴することがあります。

<descrip>
<tag>照合記号</tag>
照合記号は複数文字の照合要素を &dquot;&lsqb;.&dquot; と
&dquot;.&rsqb;&dquot; で括ったもの。
例えば ch が照合要素だとすると、<bf/&lsqb;&lsqb;.ch.&rsqb;&rsqb;/ が
この照合要素にマッチする正規表現。一方、<bf/&lsqb;ch&rsqb;/ だと
c または h のどちらかに合致する正規表現ということになってしまう
<tag>等価クラス</tag>
等価クラスとは、特定の言語における一連の等価な文字を指す名前のこと。
その名前は &dquot;&lsqb;=&dquot; と &dquot;=&rsqb;&dquot; で括る。
例えば e という名前で、アクセント記号付きのものも含めた三種類の e を
すべて表わせる。この場合 &lsqb;&lsqb;=e=&rsqb;&rsqb; は
右下がりアクセントの e (0xE8), 右上がりアクセントの e (0xE9), 普通の e
のどれかであれば合致する正規表現である
</descrip>

一字に合致する正規表現は、幾つかある繰り返し演算子のうちの
いずれかを後に付けることができます。

<descrip>
<tag/?/
この記号の前にあるアイテムは、あってもなくても良く、
あっても一回しか合致しない (訳注：0 〜 1 回)
<tag/*/
この記号の前のアイテムは 0 回でもそれ以上でも合致する (訳注：0 〜 ∞回)
<tag/+/
この記号の前のアイテムは一回以上あれば合致する (訳注：1 〜 ∞回)
<tag/&lcub;n&rcub;/
この前のアイテムは、きっちり <em/n/ 回なら合致する
<tag/&lcub;n,&rcub;/
この前のアイテムは <em/n/ 回以上で合致する (訳注：n 回も含む)
<tag/&lcub;,m&rcub;/
この前のアイテムは <em/m/ 回まで合致する (訳注：0 〜 m 回)
<tag/&lcub;n,m&rcub;/
この前のアイテムは <em/n/ 回以上 <em/m/ 回までなら合致する
</descrip>

二つの正規表現は連結できます。その結果できた正規表現は、
連結した二つの正規表現にその順番で合致する二つの文字列を
単純に並べたものに合致します。<!-- 意訳あり -->
(訳注：訳が悪いので補足すると、
たとえば [A-Z][0-9] は A3 や B5 といった、
大文字アルファベットの次に数字が来るような文字列に合致する
一つの正規表現である、ということです。)

二つの正規表現は中間演算子 &quot;|&quot; でつなぐことができ、
二つをこのようにつないでできる正規表現は、
いずれかの「子表現」の合致する文字列に合致します。
(訳注：さきほどの例に似ていますが、[A-Z]|[0-9] だと D2 等ではなく
C や 0  や R に合致することになり、[A-Z0-9] と等価です。
a1B2c3 という文字列のうち [A-Z][0-9] は B2 にのみ合致し、
[A-Z]|[0-9] は a にも B にも 3 にも合致します。)

繰り返し演算子は単なる連結よりも優先されます。
連結はというと、こちらは代替表現<!-- 何? -->より優先されます。
子表現にしたい部分を括弧で囲めば、この優先順位を上書きできます。
(訳注：[a-z][0-9]+ は繰り返し演算子の効力が [0-9] にしかなくて
aaa777 のうち a777 の部分に合致します。
これを ([a-z][0-9])+ にすると括弧内全体に効力が及ぶので、
a7a7a7 や a7b8c9 等に合致します。)

<bf>メモ:</bf> Mutt を GNU <em/rx/ パッケイジと共にコンパイルしていれば、
次の演算子も正規表現の中で使えます。

<descrip>
<tag/&bsol;&bsol;y/
単語が開始または終了する部分 (訳注：単語とスペイスの間の部分) に合致する
<tag/&bsol;&bsol;B/
単語の内部 (訳注：文字と文字の間の部分) に合致する
<tag/&bsol;&bsol;&lt;/
単語の開始部分 (訳注：単語の最初の文字とその前のスペイスの間) に合致する
<tag/&bsol;&bsol;&gt;/
単語の終了部分 (訳注：最後の文字とそれに続くスペイスの間) に合致する
<tag/&bsol;&bsol;w/
単語要員の文字 (アルファベット、十進数字、アンダースコア [下線]) の
いずれにも合致する
<tag/&bsol;&bsol;W/
単語要員でないあらゆる文字に合致する
<tag/&bsol;&bsol;`/
バッファ (文字列) の開始部分に合致する
<tag/&bsol;&bsol;'/
バッファの終了部分に合致する
</descrip>

とはいえご注意いただきたいのは、
これらの演算子が POSIX で定められていないため、
普段のライブラリで使えるシステムも使えないシステムもあるということです。

<sect1>パターン<label id="patterns" >
<p>
Mutt コマンドには、パターンを指定して合致したものにだけ適用することの
できるものが多数あります (limit, tag-pattern, delete-pattern 等)。
いくつかの方法でメッセイジを選択できます。

<tscreen><verb>
~A              全てのメッセイジ
~b EXPR         メッセイジ本文 (body) に EXPR を含むメッセイジ
~B EXPR         メッセイジ全体のどこかに EXPR を含むメッセイジ
~c USER         USER に CC 送付されているメッセイジ
~C EXPR         To: か Cc: に EXPR のあるメッセイジ
~D              削除される (deleted) メッセイジ
~d [MIN]-[MAX]  送信日 ("date-sent") が範囲内にあるメッセイジ
~E              期限切れ (expired) メッセイジ
~e EXPR         "Sender" フィールドに EXPR を含むメッセイジ
~F              フラグ付き (flagged) メッセイジ
~f USER         USER から送られた (from USER) メッセイジ
~g              暗号で署名されているメッセイジ
~G              暗号化されているメッセイジ
~h EXPR         ヘッダ (header) に EXPR を含むメッセイジ
~k              PGP 鍵 (key) を含むメッセイジ
~i ID           "Message-ID" フィールドに ID が合致するメッセイジ
~L EXPR         EXPR が出したか受けとったか、いずれかのメッセイジ
~l              既知のメイリングリスト (list) へ宛てたメッセイジ
~m [MIN]-[MAX]  番号が MIN から MAX の範囲のメッセイジ *)
~n [MIN]-[MAX]  スコアが MIN から MAX の範囲のメッセイジ *)
~N              新着 (new) メッセイジ
~O              古い (old) 未読メッセイジ
~p              自分宛てのメッセイジ (alternates を考慮する)
~P              自分が出したメッセイジ (alternates を考慮する)
~Q              返信済みのメッセイジ
~R              既読 (read) メッセイジ
~r [MIN]-[MAX]  受信日付 "date-received" が範囲内にあるメッセイジ
~S              置き換えられた (superseded) メッセイジ
~s SUBJECT      "Subject" フィールドに SUBJECT を持つメッセイジ
~T              タグ付き (tagged) メッセイジ
~t USER         USER に宛てられた (to USER) メッセイジ
~U              未読 (unread) メッセイジ
~v              折りたたんだスレッドにあるメッセイジ
~x EXPR         "References" フィールドに EXPR を含むメッセイジ
~y EXPR         "X-Label" フィールドに EXPR を含むメッセイジ
~z [MIN]-[MAX]  サイズが MIN から MAX までの範囲にあるメッセイジ *)
~=              重複しているメッセイジ ($duplicate_threads 参照)
</verb></tscreen>

EXPR, USER, ID, SUBJECT の部分は<ref id="regexp" name="正規表現" >です。

*) <tt/&lt;&lsqb;MAX&rsqb;/, <tt/&gt;&lsqb;MIN&rsqb;/,
<tt/&lsqb;MIN&rsqb;-/, <tt/-&lsqb;MAX&rsqb;/ という形式も使えます。

<sect2>パターン修飾子
<p>

アドレスの「リスト」に合致させる種類のパターン (特に
&tilde;c, &tilde;C, &tilde;p, &tilde;P, &tilde;t) は、
リストの中に一つでも合致するものがあれば合致してしまうので注意してください。
そのリストの要素すべてに合致する場合に限るには、
パターンの前に ^ を付ける必要があります。
これはドイツの人だけに宛てられたメイルすべてに合致する例です。

<tscreen><verb>
^~C \.de$
</verb></tscreen>

<sect2>複雑なパターン
<p>

複数の条件を指定することによって論理積 AND が計算されます。
例えば、

<tscreen><verb>
~t mutt ~f elkins
</verb></tscreen>

これは、宛先のリストに &dquot;mutt&dquot; という語を含み、<bf>かつ</bf>
&dquot;From&dquot; ヘッダフィールドに &dquot;elkins&dquot; という語のある
メッセイジを選択します。

Mutt は以下の演算子も認識するので、
さらに複雑な検索パターンを作成できます。

<itemize>
<item>! -- 論理演算子 NOT (否定)
<item>| -- 論理演算子 OR (論理和)
<item>() -- グループ化論理演算子
</itemize>

ここに、複雑な検索パターンをよく表している例があります。
このパターンは、メッセイジのうち、&dquot;mutt&dquot; を
&dquot;To&dquot; および &dquot;Cc&dquot; フィールドに含まず、
かつ &dquot;elkins&dquot; から来ているものすべてを選択します。

<tscreen><verb>
!(~t mutt|~c mutt) ~f elkins
</verb></tscreen>

次は、空白を正規表現内で使う例です (「'」と「&dquot;」に注目してください)。
これが合致するのは、メイルの題名が &dquot;^Junk +From +Me&dollar;&dquot;
に合致し、差出人が &dquot;Jim +Somebody&dquot; か
&dquot;Ed +SomeoneElse&dquot; であるメッセイジです。
(訳注：「+」は一回以上の繰り返しを表すということを思い出してください。)

<tscreen><verb>
 '~s "^Junk +From +Me$" ~f ("Jim +Somebody"|"Ed +SomeoneElse")'
</verb></tscreen>

正規表現に括弧や垂直棒 ("|") があるときは<bf/必ず/ダブルクウォウトか
シングルクウォウトで囲まなくてはなりません。それらの記号は Mutt
のパターン言語において別の部分を区切るためにも使われるからです。例えば、

<tscreen><verb>
~f "me@(mutt\.org|cs\.hmc\.edu)"
</verb></tscreen>

これにクウォウトがなかったら、括弧のせいで、<em/me@(mutt&bsol;.org/
の部分だけが &tilde;f にかかる正規表現だとみなされてしまいます。
(訳注：原文は間違っていると思う。Without the quotes, the parenthesis
would truncate the regular expression to simply <em/me@/, which is
probably not what you want. とあるが、単純に <em/me@/ になるのではなく
括弧が終わっていないというエラーになる。)

<sect2>日付で検索する
<p>
Mutt は二種類の日付、すなわち<em>絶対日付</em>と
<em>相対日付</em>に対応しています。

<bf>絶対日付</bf>。　日付は<bf>必ず</bf> DD/MM/YY
という形式で指定しなければなりません
(ただし、月と年は現在の月と年が既定になっており、省略できます)。
正しい日付範囲の例は次のとおり (訳注：limit 関数の例です)。

<tscreen><verb>
メッセイジの表示を制限するパターン: ~d 20/1/95-31/10
</verb></tscreen>

最小値 (一番目) の日付を省略して &dquot;-DD/MM/YY&dquot; だけ指定すると、
その日付<em>以前</em>のメッセイジがすべて選択されます。
最大値 (二番目) の日付を省略して &dquot;DD/MM/YY-&dquot; と指定すると
その日付<em>以後</em>のメッセイジがすべて選択されます。
ダッシュ (&dquot;-&dquot;) なしでひとつだけ日付を指定すると、
その日付に送信されたメッセイジだけが選択されます。

<bf>誤差範囲</bf>。　絶対日付には誤差範囲を付けられます。誤差範囲は、
符号 (+ か -), 次に数字、その次に単位という形式で指定します。
<verb>
y	年
m	月
w	週
d	日
</verb>
特例として、符号を &dquot;*&dquot; にすることができます。
これは正と負に同じだけ誤差を与えるのと等価です。

例: 2001 年 1 月 15 日の前後二週間ずつのメッセイジを選択するには、
次のようなパターンを使えます。
<tscreen><verb>
メッセイジの表示を制限するパターン: ~d 15/1/2001*2w
</verb></tscreen>

<bf>相対日付</bf>。　このタイプの日付は、現在の日付から
相対的に見たものです。このように指定できます。
<itemize>
<item>&gt;<em/offset/ (<em/offset/ より長く経過したメッセイジ)
<item>&lt;<em/offset/ (経過期間が <em/offset/ より短いメッセイジ)
<item>=<em/offset/ (ちょうど <em/ffset/ だけ経過したメッセイジ)
</itemize>

<em/offset/ は正の数に以下の単位のいずれかを付けたものです。
<verb>
y	年
m	月
w	週
d	日
</verb>

例: 一ヵ月も経っていないメッセイジを選択するには次のようにします。
<tscreen><verb>
メッセイジの表示を制限するパターン: ~d <1m
</verb></tscreen>



<bf>注意</bf>: 検索時に使う日付はすべて<bf>ロウカル</bf>時間に対する
相対日付ですから、<ref id="index_format" name="&dollar;index&lowbar;format" >
の設定を変更して <tt/&percnt;&lsqb;...&rsqb;/ フォーマットを
含むようにしないと、必ずしもインデックスに表示されている日付と
<bf>同じではありません</bf>。

<sect1>タグを使う
<p>

操作を実行するときに、一通ずつ扱うよりも、ひとまとめにしたメッセイジを
一度に扱った方が良いことがあります。
例としては、あるメイリングリスト宛てのメッセイジを別のフォルダに保存するとか、
指定した題名のメッセイジをすべて削除するといったものがあるでしょう。
パターンに合致したメッセイジにタグをつけるには tag-pattern 関数を使います。
これはデフォルトで &dquot;shift-T&dquot; に割り当てられています。
また、個々のメッセイジを手作業で &dquot;tag-message&dquot; 関数を使って
選択することもできます。こちらはデフォルトで &dquot;t&dquot;
に割り当てられています。Mutt のパターン検索の構文については
<ref id="patterns" name="「パターン」">の節を参照して下さい。

お望みのメッセイジにタグをつけたら、&dquot;tag-prefix&dquot; 演算子を使えます。
これはデフォルトで &dquot;;&dquot; (セミコロン) キーです。
&dquot;tag-prefix&dquot; 演算子が使われると、<bf>次の</bf>操作は、
タグの付いたメッセイジすべてに適用されます (そのような使い方の
できる操作であれば、ですが)。
もし <ref id="auto_tag" name="&dollar;auto&lowbar;tag"> 変数が
セットされていれば、次の操作が自動的にタグ付きメッセイジへ適用されるので、
&dquot;tag-prefix&dquot; 演算子は必要ありません。

<sect1>フックを使う<label id="hooks" >
<p>
<em>フック</em>とは EMACS エディタから借りてきた概念で、
ある操作の実行前に任意のコマンドを実行できるようにするものです。
例えば、読もうとしているメイルボックスや送ろうとしているメイルのあて先に
基づいて設定を調整したいと思うことがあります。
Mutt の世界において、<em>フック</em>は設定オプションやコマンドに合った
<ref id="regexp" name="正規表現" >や<ref id="patterns" name="パターン" >
で構成されます。
利用できる各種<em>フック</em>の詳細については、以下を参照してください。
<itemize>
<item><ref id="folder-hook" name="folder-hook">
<item><ref id="send-hook" name="send-hook">
<item><ref id="message-hook" name="message-hook">
<item><ref id="save-hook" name="save-hook">
<item><ref id="mbox-hook" name="mbox-hook">
<item><ref id="fcc-hook" name="fcc-hook">
<item><ref id="fcc-save-hook" name="fcc-save-hook">
</itemize>

<bf>注意:</bf> フックが設定を変更した場合、変更の効果は
その mutt セッションの終わりまで続きます。
これは一般的に望み通りの動作ではありませんので、
デフォルトのフックを他のフックの前に追加して
設定のデフォルト値に復帰する必要があります。
次に挙げるのは send-hook と my_hdr 命令の例です。
(訳注：b@bab や b@b.b といったアドレスを To か Cc に含むメッセイジを
送信するときにのみ自分のアドレスを c@c.c とする、という設定。
最初の send-hook がないと、そのようなメッセイジを送ったあとは
ずっと From: c@c.c のままになる。最初の send-hook があるおかげで
他の宛先には my_hdr が解除されて、from 変数の値が使用される。)

<tscreen><verb>
send-hook . 'unmy_hdr From:'
send-hook ~Cb@b.b my_hdr from: c@c.c
</verb></tscreen>

<sect2>フックにおけるメッセイジ合致条件<label id="pattern_hook" >
<p>
メッセイジに対して働くフック (<tt>send-hook, save-hook, fcc-hook,
message-hook</tt>) は、他とは少し違う方法で評価されます。
他のタイプのフックコマンドには<ref id="regexp" name="正規表現" >で十分ですが、
メッセイジを扱うときには、合致に関して、よりきめ細かな制御が必要です。
目的が異なれば、合致させたいと思う条件も異なるものだからです。

Mutt では、フックコマンドにおけるメッセイジ合致条件に
<ref id="patterns" name="検索パターン" >言語を使えます。
これは、演算子のうち、メッセイジのへッダ (すなわち from, to, cc, date,
subject 等) から抽出した情報に関するものしか使えない点を除けば、
メイルボックスを <em/search/ (検索) したり
<em/limit/ (表示制限) したりするときとまったく同じように動作します。

例えば、送信メッセイジに基づいて返信先を特定のアドレスに設定したい場合、
次のようにすることができます。
<tscreen><verb>
send-hook '~t ^me@cs\.hmc\.edu$' 'my_hdr From: Mutt User <user@host>'
</verb></tscreen>
これは、<em>me@cs.hmc.edu</em> 宛てにメイルを送るときに
所定のコマンドを実行する例です。

とはいえ、合致パターンは完全な形の検索言語で書かなければならない
というわけではありません。
他のフック同様、単なる<em>正規表現</em>を使っても良く、
この場合 Mutt がそのパターンを完全な言語に翻訳してくれます。
翻訳には <ref id="default_hook" name="&dollar;default&lowbar;hook" >
変数によって指定されている方法を使います。
パターンはそのフックが宣言された時点で翻訳されるので、
その当時有効だった <ref id="default_hook" name="&dollar;default&lowbar;hook" >
の値が使われます。

<sect1>アドレスの外部問い合わせ<label id="query" >
<p>
Mutt は、LDAP, ph/qi, bbdb, NIS といった
外部ディレクトリデイタベイスへの接続をサポートしており、これは
簡単なインタフェイスで Mutt に接続するラッパスクリプトを通して実現します。
<ref id="query_command" name="&dollar;query&lowbar;command" > 変数を使って、
利用するラッパコマンドを指定します。例えばこうです。

<tscreen><verb>
set query_command = "mutt_ldap_query.pl '%s'"
</verb></tscreen>

ラッパスクリプトはコマンドライン上で問い合わせを受け付けることになっています。
一行メッセイジを返し、次に合致結果がそれぞれ一行ずつ並び、
その各行は「アドレス、名前、その他付加情報」をこの順に
タブ区切りで含んでいるべきです。
エラー時、および合致するアドレスがない場合は
0 以外の終了コウドと一行のエラーメッセイジを返します。

複数回答の出力例
<tscreen><verb>
Searching database ... 20 entries ... 3 matching:
me@cs.hmc.edu           Michael Elkins  mutt dude
blong@fiction.net       Brandon Long    mutt and more
roessler@guug.de        Thomas Roessler mutt pgp
</verb></tscreen>

Mutt の問い合わせ機能にアクセスする仕組みは二つあります。
一つは問い合わせをインデックスメニューから query 関数 (デフォルト: Q)
を使って行なう仕組みです。問い合わせ内容を聞かれるので入力すると、
クエリメニューが出て合致結果の一覧が表示されるのです。
クエリメニューからは、選んだアドレスにエイリアスを作成したり
メイルしたりすることができます。
タグを付けて複数アドレス<!-- いや、本文は multiple messages だけど、
それじゃあまりにも意味不明というか脈略ないっしょ -->にメイルすることや、
新しく問い合わせを始める、つまり新規問い合わせを現在の結果内容に追加する
こともできます。

問い合わせ機能にアクセスするもう一つの仕組みは、アドレス補完という、
エイリアス補完と同じような仕組みです。アドレス入力のプロンプトならどれででも
complete-query 関数 (デフォルト: ^T) を使って、アドレスのうちの、
その時点までに入力済みの部分に基づいた問い合わせを実行できます。
エイリアス のように、どこまで入力済みかについて Mutt は
最後のスペイスかコンマまで戻って調べます。
その問い合わせに結果が一つだけであれば、Mutt はその場でアドレスを展開します。
結果が複数ならば Mutt はクエリメニューに移ります。クエリメニューでは、
プロンプトに追加するアドレスを一つでも複数でも選択できます。

<sect1>メイルボックスの形式
<p>
Mutt は四種類のメイルボックス ― mbox, MMDF, MH, Maildir ― の読み書きを
サポートしています。メイルボックスの種類は自動判定されるので、
種類の違いを指示する必要はありません。<!-- flag は本来、旗ですよね。
そういう (旗のような) ものが必要ないということなのでしょう。 -->
新規メイルボックス作成時に Mutt は <ref id="mbox_type"
name="&dollar;mbox&lowbar;type" > 変数で指定される既定値を使います。

<bf>mbox</bf>.　これは UNIX でもっとも広く使われている形式です。
メッセイジは一つのファイルにすべて格納されます。各メッセイジには、

<tscreen><verb>
From me@cs.hmc.edu Fri, 11 Apr 1997 11:44:56 PST
</verb></tscreen>

という形式の行が一行あり、メッセイジの始まりを表しています (これは
しばしば &dquot;From&lowbar;&dquot; 行として言及されます)。

<bf>MMDF</bf>.　これは <em>mbox</em> 形式の亜種です。それぞれのメイルが
^A^A^A^A (Ctrl-A 四つ) という行で囲まれています。

<bf>MH</bf>.　<em>mbox</em> と <em>MMDF</em> からの革新的な変形であり、
メイルボックスはディレクトリで構成され、
各メッセイジが別々のファイルに格納されています。
ファイル名はメッセイジ番号を示します (しかし、この番号は
Mutt が表示するメッセイジ番号とは関係ありません)。
削除されたメッセイジはファイル名が変更されて、
先頭にコンマ (,) が付くだけです。
<bf>注意:</bf> Mutt は、<tt/.mh&lowbar;sequences/ か <tt/.xmhcache/
がないか探すことによってこの形式を検知します (普通のディレクトリと
MH メイルボックスを区別するために必要です [訳注：人見訳 1.4-0 では、Mutt
がこれらのファイルを更新しないことが併記されていました。それらのファイルは
MH かどうかを調べるためにのみ使われるのです])。

<bf>Maildir</bf>.　メイルボックス形式の最新版で、Qmail MTA (sendmail の競合品)
で使われています。<em>MH</em> とよく似ていますが、違うのはメイルボックスの
サブディレクトリを三つ (<em>tmp</em>, <em>new</em>, <em>cur</em>)
追加してある点です。
メッセイジのファイル名は、二つのプログラムが同じメイルボックスを
NFS 越しに書き込んでいるときでさえも重ならないような方法で選ばれています。
これはつまり、ファイルのロックが必要ないということを意味します。

<sect1>メイルボックスの省略形<label id="shortcuts" >
<p>
特定のメイルボックスを指す組み込みショートカット (省略形) が
幾つか用意されています。
ショートカットは、ファイルやメイルボックスの場所を入力する場面なら
どこででも使えます。

<itemize>
<item>!　……　<ref id="spoolfile" name="&dollar;spoolfile" > (受信用) メイルボックスを指す
<item>&gt;　……　<ref id="mbox" name="&dollar;mbox" > メイルボックスを指す
<item>&lt;　……　<ref id="record" name="&dollar;record" > メイルボックスを指す
<item>- と !!　……　前にいたメイルボックスを指す
<item>&tilde;　……　ホウムディレクトリを指す
<item>= と +　……　<ref id="folder" name="&dollar;folder" > メイルボックスを指す
<item>@<em>エイリアス名</em>　……　このエイリアスのアドレスで識別される<ref
id="save-hook" name="デフォルトのセイブフォルダ" >を指す
</itemize>

<sect1>メイリングリストを扱う<label id="using_lists" >
<p>

Mutt には、大量のメイルの取り扱いを容易にする設定オプションが二、三あります。
まず最初にしなければならないのは、どのアドレスを
メイリングリストだとみなすか (仕組みとしてはメイリングリストでなくても
構いませんが、これがもっともよく使われる用途です)、および、
どのリストを講読しているかを Mutt に知らせることです。
これは muttrc で <ref id="lists" name="lists および subscribe" >
コマンドを使って行ないます。

これで Mutt は何がメイリングリストかを知っているので、
できることが幾つか増えました。その一つ目は、
どのリストを経由してメッセイジを受信したか (つまり、講読中のリスト名) を
<em>インデックス</em>メニューの画面に表示できることです。
これは同じメイルボックス内にある私用メイルとリストメイルを
区別するのに役立ちます。
<ref id="index_format" name="&dollar;index&lowbar;format" > 変数の中で使う
&dquot;&percnt;L&dquot; というエスケイプは
&dquot;To&dquot; フィールドに「リスト名」があれば
&dquot;To &lt;リスト名&gt;&dquot; という文字列を返し、
&dquot;Cc&dquot; フィールドなら &dquot;Cc &lt;リスト名&gt;&dquot;
を返します (どちらでもなければメイルを書いた人の名前を返します)。

メイリングリストのメッセイジには、
&dquot;To&dquot; と &dquot;Cc&dquot; のフィールドがどんどん
膨れ上がっていってしまうということが頻繁に見られます。
ほとんどの人は、返信しようとするメッセイジの差出人をわざわざ
そうしたフィールド<!-- のアドレスリスト -->から削除したりせず、
結果として同じものが複数その人に送られてしまうことになります。
<ref id="list-reply" name="list-reply"> 関数は、デフォルトでは
<em>インデックス</em>メニューと<em>ペイジャ</em>において
&dquot;L&dquot; キーに割り当てられていますが、
宛先すべてにではなく既知のメイリングリストのアドレスにのみ返信するので、
こうしたゴミを減らす助けになります
(<tt>Mail-Followup-To</tt>で指定してある場合を除きます。以下参照)。

Muttは <tt>Mail-Followup-To</tt> へッダもサポートしています。
購読中のメイリングリストが宛先リストに一つでもあって、
<ref id="followup_to" name="&dollar;followup&lowbar;to" > 変数が
設定されていれば、Mutt はそのメッセイジの送信時に、送り先すべてから
自分を除いた <tt>Mail-Followup-To</tt> へッダを生成してくれます。
このヘッダは、このメッセイジへのグループ返信 [group-reply] や
リスト返信 [list-reply] (フォロウアップ [followup] とも言う) が、
そのメッセイジの元々の送り先にのみ送られるべきであって、
それと別に自分へ送る必要はないということ ― 自分の分は
購読しているメイリングリストを通して受け取るということ ― を示すものです。

逆に自分が <tt>Mail-Followup-To</tt> へッダのあるメッセイジに
group-reply したり list-reply したりする場合にも、設定変数の
<ref id="honor_followup_to" name="&dollar;honor&lowbar;followup&lowbar;to" >
が設定されていれば Mutt がこのへッダを考慮してくれます。
この場合、list-reply を使うと <tt>Mail-Followup-To</tt> の返信先リストで
指定されていなくても返信がメイリングリストへ行くようにしてくれます。

へッダ編集が有効なときは自分で <tt>Mail-Followup-To</tt>
へッダを作成できるということを覚えておいてください。
Mutt は、送信時にこのへッダが存在しない場合にだけ、
このへッダを自動生成するのです。


一部のメイリングリスト管理者が使っている別の手法は、メッセイジの
差出人ではなく、メイリングリストのアドレスを指す &dquot;Reply-To&dquot;
フィールドを生成するというものです (訳注：日本ではこれが多いかも)。
これは、差出人へ私的に直接返信しようとするときに
問題を引き起こすかもしれません。なぜなら大半のメイルクライアントは、
自動的に &dquot;Reply-To&dquot; フィールドのアドレスへ返信するからです。
Mutt は、<ref id="reply_to" name="&dollar;reply&lowbar;to" > 変数を使って、
どちらのアドレスに返信するか決めさせてくれます。設定されていると
&dquot;Reply-To&dquot; フィールドにあるアドレスを使うのかどうかを聞いてきて、
使わないと答えると &dquot;From&dquot; フィールドのアドレスに
直接返信するのか聞いてきます。
この変数が設定されていない場合は、あれば &dquot;Reply-To&dquot;
フィールドが使われます。

&dquot;X-Label:&dquot; フィールドを使って、メイリングリストや
リストで話題となっている事柄をさらに特定することができます (あるいは
単に、メッセイジへ個別に註釈を付けることも)。
<ref id="index_format" name="&dollar;index&lowbar;format" > 変数の
&dquot;&percnt;y&dquot; および &dquot;&percnt;Y&dquot; エスケイプを使えば
&dquot;X-Label:&dquot; フィールドをインデックスに展開できますし、
Mutt のパターン検索では &dquot;&tilde;y&dquot; 選択子を使って正規表現で
&dquot;X-Label:&dquot; に検索をかけることができます。
&dquot;X-Label:&dquot; は標準的なへッダフィールドではありませんが、
procmail その他のメイルフィルタリングエイジェントで簡単に挿入できます。

最後の点として、Mutt にはメイルボックスを<ref id="threads"
name="スレッド" >で<ref id="sort" name="整列" >させる能力があります。
スレッドとは、同じ話題でつながっているメッセイジの集まりです。
これは通常、木のような (訳注：枝分かれしている) 構造へとまとめられ、
あるメッセイジとそれに対する返信すべてが画像的に表現されます。
スレッド化されたニューズクライアントを使ったことがあれば、
それと同じ概念だと思ってください。
これによって流量の大きなメイリングリストの扱いが容易になります。
なぜなら、興味がなければ簡単にスレッドごと削除でき、
価値ある話題を素早く見つけられるからです。

<sect1>配送状況通知 (Delivery Status Notification = DSN) サポート
<p>
RFC1894 は、電子メイルメッセイジの状態に関する情報を伝達するための、
一連の MIME コンテントタイプを定義しています。
これは「受領証」と考えることができます。
現在 Berkeley sendmail 8.8.x には、
どの種類の状況メッセイジを返させれば良いかを
メイルクライアントが要求できるような、
幾つかのコマンドラインオプションがあります。

これをサポートするための変数が二つあります。
<ref id="dsn_notify" name="&dollar;dsn&lowbar;notify" > は、
結果の違いによって証書を要求したりしなかったりするために使います
(失敗メッセイジ、配信済みメッセイジ、等)。
<ref id="dsn_return" name="&dollar;dsn&lowbar;return" > は、
証書に付けて返す元メッセイジをどれだけ要求するか (ヘッダだけか
メッセイジ全体か) です。
DSN に関するさらに詳細な点については
sendmailの man ペイジを参照してください。

<sect1>POP3 サポート (オプション)
<p>

Mutt は、POP3 サポートありで (<em>configure</em> スクリプト実行時に
<em>--enable-pop</em> フラグを付けて) コンパイルしてあれば、
リモウトの POP3 サーバ上にあるメイルボックスを扱ったり、
ロウカル閲覧用にメイルを取りに行ったりすることができます。

<tt>pop://POPサーバ/</tt> というフォルダを選択することによって、
リモウト POP3 メイルボックスにアクセスできます。

代替ポートの選択も、サーバと一緒に、つまり
<tt>pop://POPサーバ:ポート/</tt> と指定することによって可能です。

フォルダごとに違うユーザ名を指定する、つまり
<tt>pop://ユーザ名@POPサーバ&lsqb;:ポート&rsqb;/</tt> と
指定することもできます。

POP3 経由だと、新着メイル情報の取得にロウカルより負担がかかります。
このため、Mutt がリモウトでメイルチェックする頻度を
<ref id="pop_checkinterval" name="&dollar;pop&lowbar;checkinterval" > 変数で
制御できます。デフォルトは 60 秒ごとです。

Mutt が SSL サポートありで (<em>configure</em>スクリプト実行時に
<em>--with-ssl</em> フラグを付けて) コンパイルしてあれば、
POP3 サーバとの通信は暗号化できます。
これには当然、そのサーバが SSL 暗号化通信をサポートしている必要があります。
POP3/SSL でフォルダにアクセスするには pops: を使います。
つまり <tt>pops://&lsqb;ユーザ名@&rsqb;POPサーバ&lsqb;:ポート&rsqb;/</tt>
です。

POP3 のメイルにアクセスする別の方法は
<em>fetch-mail</em> 関数 (デフォルト: G) です。
POP3 ホスト (<ref id="pop_host" name="&dollar;pop&lowbar;host" >) に接続し、
新着メイルをすべて取ってきて、ロウカルのスプール (<ref id="spoolfile"
name="&dollar;spoolfile" >) に置いてくれるのです。
Mutt はそれ以降、そのメイルがまるでずっとロウカルにあったかのように
動作します。

<bf>メモ:</bf>　ロウカルのメイルボックスに全メッセイジを取って来る
だけで良ければ、専門の、たとえば
<htmlurl url="http://www.ccil.org/~esr/fetchmail" name="fetchmail">
のようなプログラムの使用を検討すべきです。
(訳注：これは Mutt 開発者の「本体をできるだけ小さくして、
よそに任せられるところは任せたい」という姿勢を反映しているようだ。
訳者自身は <em/fetch-mail/ を使っていて何の問題もない。
開発者の意図としては <tt>macro index G !fetchmail\n</tt>
のように設定すれば事足りるのだから無駄な機能だということであろう。)

<sect1>IMAP サポート (オプション)
<p>

IMAPサポートありで (<em>configure</em> スクリプト実行時に
<em>--enable-imap</em> フラグを付けて) コンパイルされていれば、
Mutt はリモウト IMAP サーバ上にあるフォルダを扱うことができます。

IMAP サーバの名前を <tt>imapserver</tt> とすると、
<tt>imap://imapserver/INBOX</tt> というフォルダを選択すれば
リモウトの受信箱 (inbox) にアクセスできます。
この <tt>INBOX</tt> は、IMAP サーバ上でスプールメイルボックスを表す
特別な名前です。
IMAP サーバの別のメイルフォルダーにアクセスしたい場合は、
そのフォルダのパスが <tt>path/to/folder</tt> なら
<tt>imap://imapserver/path/to/folder</tt> とします。

サーバと一緒に、つまり
<tt>imap://imapserver:ポート/INBOX</tt>
と指定することによって代替ポートも指定できます。

フォルダごとに違うユーザ名を指定することもできます。つまり
<tt>imap://ユーザ名@imapserver&lsqb;:ポート&rsqb;/INBOX</tt>
です。

Mutt が SSL サポートありで (<em>configure</em>スクリプト実行時に
<em>--enable-ssl</em> フラグをつけて) コンパイルしてあれば、
IMAP サーバへの接続を暗号化できます。これには当然、サーバが
SSL 暗号化接続をサポートしていることも求められます。
フォルダに IMAP/SSL を使ってアクセスするには、フォルダパスに
<tt>imaps://&lsqb;ユーザ名@&rsqb;imapserver&lsqb;:ポート&rsqb;/path/to/folder</tt>
と指定します。

Pine 互換の書き方もサポートしています。つまり
<tt>&lcub;&lsqb;ユーザ名@&rsqb;imapserver&lsqb;:ポート&rsqb;&lsqb;/ssl&rsqb;&rcub;path/to/folder</tt>
です。

すべてのサーバが階層分離記号 (hierarchy separator) に
/ を使っているわけではないことを覚えていてください。
Mutt はどの分離記号がサーバで使われているかを正しく認識し、
それに応じてパスを変換してくれるはずです。

IMAP サーバ上のフォルダを閲覧しているときに、
自分が購読しているフォルダだけを見るか、それともあらゆるフォルダを見るか、
<em>toggle-subscribed</em> コマンドで切り換えられます。
<ref id="imap_list_subscribed"
name="&dollar;imap&lowbar;list&lowbar;subscribed" > 変数についても
見てください。

IMAP サーバ上の新着メイルを確認すると、動作が遅くなって気になることがあります。
それで、<ref id="mail_check" name="&dollar;mail&lowbar;check" > および
<ref id="timeout" name="&dollar;timeout" > 変数は慎重に調整したいと思うことでしょう。
私個人として使っているのは
<tscreen><verb>
set mail_check=90
set timeout=15
</verb></tscreen>
ですが、遅いモデム回線にしては、結果は比較的良好です。

v12.250 以前の UW サーバでメイルの格納に mbox を使っている場合は
注意してください。別のクライアントが同じフォルダを選ぶと
接続が切断されてしまうと報告されています。

<sect2>フォルダブラウザ
<p>

ヴァージョン 1.2 から Mutt は IMAP サーバ上のメイルボックスの
閲覧 (browsing) をサポートしています。
これはロウカルファイルブラウザとほとんど同じですが、
以下のような違いがあります。
<itemize>
<item>ファイルの属性の代わりに &dquot;IMAP&dquot; という文字列を表示します。
これの後ろに &dquot;+&dquot; 記号がつく場合がありますが、
これはその中にメッセイジとサブフォルダの両方が含まれていることを意味します。
Cyrus 系サーバの場合にはしばしばフォルダの中に
メッセイジとサブフォルダが入っています。
<item>メッセイジとサブフォルダの両方が含まれている場合、<tt/select-entry/
(デフォルトでは <tt>enter</tt> に割り当てられている) のキーを押すと
そのサブフォルダの中に下りていってしまいます。
もしそのフォルダ自体のメッセイジを見たい場合には (デフォルトでは
<tt>space</tt> に割り当てられている)
<tt>view-file</tt> を使わなければなりません。
<item>メイルボックスを消すには <tt>delete-mailbox</tt> コマンド
(デフォルトでは d) を使います。また、メイルボックスの購読
<tt>subscribe</tt> と、購読解除 <tt>unsubscribe</tt> もできます
(通常は s と u に割り当てられています)。
</itemize>

<sect2>認証
<p>

Mutt は IMAP サーバに関して四つの認証方法をサポートしています。
SASL, GSSAPI, CRAM-MD5, LOGIN です (かわいそうな exchange ユーザのために
NTLM 認証を追加する、Grant Edwards によるパッチがありますが、
まだメインツリーには統合されていません)。また疑似プロトコル ANONYMOUS
のサポートもあります。これは公開 IMAP サーバにアカウントなしでログイン
するためのものです。ANONYMOUS を使うには、単にユーザ名を入れないでおくか、
または &dquot;anonymous&dquot; にします。
<p>
SASL は特殊な、包括的認証方法です。いくつかのプロトコル (GSSAPI, CRAM-MD5,
ANONYMOUS, DIGEST-MD5 を含む) の中で、自分のホストとサーバで利用可能な
もののうち最も堅牢な方法を選びます。
これらのうちのいくつかの方法 (DIGEST-MD5 や、多分 GSSAPI も) を使うと、
セッション全体が暗号化され、ネットワークの満ちあふれる覗き屋たちの目から
見えなくなります。利用可能なら、これが最善の選択肢です。
SASL を使うには、システムに Cyrus SASL ライブラリがインストールされていて、
かつ、<em>--with-sasl</em> 付きで mutt をコンパイルする必要があります。
<p>
Mutt は、コンパイル時に組み込まれ、かつサーバ側の利用可能な方法を
すべて試していきます。順番は SASL, ANONYMOUS, GSSAPI, CRAM-MD5, LOGIN です。

認証を制御する変数がいくつかあります。
<itemize>
<item><ref id="imap_user" name="&dollar;imap&lowbar;user" > ―　IMAP
サーバへ認証を要求するユーザ名です。すべての認証方法に使われます。
これはメイルボックスのパスに明示的に含まれるユーザ名
(つまり <tt>&lcub;ユーザ@ホスト&rcub;</tt> の形のメイルボックスを使うこと)
によって上書きされます。
<item><ref id="imap_pass" name="&dollar;imap&lowbar;pass" > ―　パスワードです。
パスワードを必要とするすべての認証方法に使います。
<item><ref id="imap_authenticators"
name="&dollar;imap&lowbar;authenticators" > ―　試行順序にコロンで区切った、
IMAP 認証方法リストです。設定されていると、この変数が mutt のデフォルト
(あらゆる方法を上記の順に試す) を上書きします。
</itemize>

<sect1>複数の IMAP/POP アカウントを使う (オプション)<label id="account-hook" >
<p>

いくつもの IMAP や POP サーバにアカウントを持っていると、
認証の設定は、面倒くさくて間違いやすいものですよね。
そんなあなたに account-hook コマンドが役に立ちます。
このフックは folder-hook コマンドと同じような働きをするものですが、
開くときだけではなく、リモウトのメイルボックスにアクセスするたびに
呼び出されます (フォルダブラウザ内も含みます)。
<p>
例:

<tscreen><verb>
account-hook . 'unset imap_user; unset imap_pass; unset tunnel'
account-hook imap://host1/ 'set imap_user=me1 imap_pass=foo'
account-hook imap://host2/ 'set tunnel="ssh host2 /usr/libexec/imapd"'
</verb></tscreen>

<sect1>URL に対して WWW ブラウザを起動する (外部コマンド)<label id="urlview" >
<p>
メイルに URL (<em>unified resource locator</em> = WWW 空間における住所。
たとえば <em>http://www.mutt.org/</em>) が含まれているとき、
そうした URL をすべて含むメニューが出てきて、一つ選ぶと WWW ブラウザが
起動すると効率が良いですよね。
この機能は外部プログラムの urlview と
以下の設定コマンドによって提供されています。
urlview は <htmlurl url="ftp://ftp.mutt.org/mutt/contrib/"
 name="ftp://ftp.mutt.org/mutt/contrib/">で手に入ります。
<tscreen><verb>
macro index \cb |urlview\n
macro pager \cb |urlview\n
</verb></tscreen>

<sect>Mutt の MIME サポート
<p>
Mutt をテキストモウド MIME MUA として最上のものとするため、
これまで多大な努力が払われてきました。眼識ある MIME ユーザの要求する機能と
標準への準拠のために、可能な限りのあらゆる努力が払われてきました。
Mutt の MIME 設定に際しては、二つの外部ファイルがあります。
一つは <tt/mime.types/ ファイルで、これにはファイル拡張子と
IANA MIME タイプとの対応が書いてあります。もう一つは
<tt/mailcap/ ファイルで、それぞれの MIME タイプを扱うために
使う外部コマンドが指定されています。

<sect1>Mutt で MIME を使う
<p>
Mutt は三つの場面において、すなわちペイジャ (メイルを閲覧するとき)、
ファイル添付メニュー、コンポウズメニューで MIME を扱います。

<sect2>ペイジャで MIME メッセイジを閲覧する
<p>
インデックスでメイルを選択してペイジャで閲覧するとき、
Mutt はメイルをテキスト表現へとデコウドします。Mutt には、
<tt>text/plain, text/enriched, message/rfc822, message/news</tt>
といった、数々の MIME タイプのサポート機能が内蔵されています。
輸出制限ヴァージョンの Mutt では、それに加えて PGP/MIME や
application/pgp といった PGP MIME タイプを理解することもできます。
(訳注：1.5.6i のように「i」が付いていれば PGP 機能が付いているはず。)

Mutt は添付ファイルがあることを二、三行の説明で表します。
こんな形式です。
<tscreen><verb>
[-- Attachment #1: Description --]
[-- Type: text/plain, Encoding: 7bit, Size: 10000 --]
</verb></tscreen>
</p><p>
<tt/Description/ の部分は添付ファイルに関する説明やファイル名で、
<tt/Encoding/ は <tt>7bit/8bit/quoted-printable/base64/binary</tt>
のどれかです。

Mutt が扱うことのできない MIME タイプであれば
次のようなメッセイジを表示します。
<tscreen><verb>
[-- image/gif is unsupported (use 'v' to view this part) --]
</verb></tscreen>

<sect2>添付ファイルメニュー<label id="attach_menu" >
<p>
デフォルトで &dquot;v&dquot; に割り当てられている <tt/view-attachments/
は、メッセイジの添付ファイルメニューを表示するものです。
添付ファイルメニューにはメッセイジの添付ファイル一覧が表示され、
このメニューから添付ファイルを保存、印刷、パイプ、削除、
閲覧することができます。複数の添付ファイルを一度に処理することも、
&dquot;tag-prefix&dquot; を使えば可能です。
また、このメニューからメッセイジに返信することもできます。
その場合は、カーソルのある (もしくはタグ付けされている) 添付ファイルのみ
返信に引用されます。添付ファイルは、テキストとして閲覧したり、
mailcap のビューワ定義を使って閲覧することもできます。

また <tt>message/rfc822</tt> タイプのファイルには、
メッセイジ関連の通常の関数 (たとえば <ref id="resend-message"
name="resend-message">, reply, forward など) も使えます。

さらに詳しい情報は、添付ファイルメニューでのヘルプをご覧下さい。

<sect2>コンポウズメニュー<label id="compose_menu" >
<p>
コンポウズメニューはメッセイジを送る前に現れるメニューのことです。
このメニューでは宛先のリストを編集できます。題名を編集できます。
その他にもメッセイジの様々な側面を編集することができます。
このメニューには、メッセイジの添付ファイル (本文も含む) の一覧が表示されます。
一つの添付ファイル、もしくはタグ付けされた複数の添付ファイルを、
印刷したり、フィルタにかけたり、パイプに通したり、編集したり、
作成したり、もう一度確認のために閲覧したり、名前を変更したりすることが
できます。また、添付ファイルに関する情報を変更することもできます。
特に注目すべきなのは、content type, エンコウド方式、内容説明を
変更できるという点です。

添付ファイルは次のように表示されます。
<verb>
-   1 [text/plain, 7bit, 1K]             /tmp/mutt-euler-8082-0 <no description>
    2 [applica/x-gunzip, base64, 422K]   ~/src/mutt-0.85.tar.gz <no description>
</verb>

左端の &dquot;-&dquot; は、そのファイルがメッセイジの
送信 (または延期や中止) の後に削除されるということを示しています。
この切替は <tt/toggle-unlink/ コマンド (デフォルト: u) で可能です。
次の欄 は MIME content-type を示しており、
<tt/edit-type/ コマンド (デフォルト: ^T) で変更できます。
その次の欄はファイルのエンコウド方式を示しています。
エンコウド (つまり変換) をすることによって、バイナリのメッセイジを
7bit 通信で配送することができるようになります。変更は
<tt/edit-encoding/ コマンド (デフォルト: ^E) です。
次の欄はファイルサイズです。キロバイトかメガバイト単位に丸めてあります。
次の欄はファイル名で、変更には <tt/rename-file/ コマンド (デフォルト: R)
を使います。最後の欄は添付ファイルの内容説明です。
<tt/edit-description/ コマンド (デフォルト: d) で変更できます。

<sect1><tt/mime.types/ による MIME タイプ設定
<p>
メイルにファイルを添付すると、Mutt は個人用の mime.types ファイルを
<tt>&dollar;&lcub;HOME&rcub;/.mime.types</tt>
に探しに行き、該当するものがなければ、次にシステムの mime.types
ファイルを <tt>/usr/local/share/mutt/mime.types</tt>
か <tt>/etc/mime.types</tt> に探しに行きます。

mime.types ファイルを構成する各行には、
MIME タイプとスペイス区切りの拡張子のリストが書かれています。

<tscreen><verb>
application/postscript          ps eps
application/pgp                 pgp
audio/x-aiff                    aif aifc aiff
</verb></tscreen>
サンプルの <tt/mime.types/ が Mutt の配布物に付いています。
使いたい MIME タイプはその中にほとんど含まれているはずです。

添付されたファイルの拡張子から MIME タイプを判断できなかったとき、
Mutt はファイルの中身を見に行きます。ファイルにバイナリ情報がなければ
プレインテキストだとみなして <tt>text/plain</tt> にします。
バイナリ情報を含んでいれば <tt>application/octet-stream</tt> にします。
Mutt が添付ファイルに付けた MIME タイプは、添付ファイルメニュー
から <tt>edit-type</tt> コマンド (デフォルト: ^T) を使って変更できます。
さて、この MIME タイプは、メジャータイプの後に &dquot;/&dquot;
とサブタイプの付いたものです。メジャータイプは
application, text, image, video, audio, model の 6 種類が、インターネットでの
各種議論の末に承認されています。mime.types ファイルに適当な項目があるならば、
Mutt はこれらすべてを認識することができます。
また、その他のメジャータイプも認識でき、例えば chemical タイプという、
分子モデリング業界で広く使われているタイプなども使うことができます。
これは様々な形式の分子デイタを種々の分子ビューワに渡すためのものです。
ただし、未承認の MIME タイプを使うのは、そういう添付ファイルが来ることを
相手がわかっている場合だけにすべきです。

<sect1><tt/mailcap/ による MIME ビューワの設定
<p>
Mutt は、MIME 設定に関する RFC 1524 をサポートしています。
特に RFC 1524 の Appendix A で規定されている
Unix 用フォーマットをサポートしています。
このファイルフォーマットは一般的に mailcap フォーマットと呼ばれます。
多くの MIME 対応プログラムがこの mailcap フォーマットを利用しているので、
すべてのプログラムでのすべての MIME タイプの扱いを
一か所で指定することができます。
このフォーマットを利用しているプログラムには、
Netscape, XMosaic, lynx, metamail などがあります。

Mutt 単体では扱えない様々な MIME タイプを扱うために、
Mutt は外部の設定ファイルを解析して、
扱うことのできる外部プログラムを探します。
設定ファイルを検索する文字列はコロン区切りリストで、
デフォルトはこうなっています。
<tscreen><verb>
${HOME}/.mailcap:/usr/local/share/mutt/mailcap:/etc/mailcap:/etc/mailcap:/usr/etc/mailcap:/usr/local/etc/mailcap
</verb></tscreen>
<tt/&dollar;HOME/ はホウムディレクトリです。

metamail が普通 mailcap ファイルを <tt>/usr/local/etc/mailcap</tt> に
インストールします。これに基本的な項目がある程度含まれています。

<sect2>mailcap ファイルの基本
<p>
mailcap ファイルの各行はコメント、空行、定義のいずれかです。

コメント行は &num; 文字とそれに続く任意の文字で構成されます。

空行は空の行です。

定義行は、content type 一つと閲覧コマンド一つ、そして任意の数の
付加的な欄で構成されています。
定義行の各欄はセミコロン記号 &dquot;;&dquot; で分けられています。

content type は MIME 標準の「タイプ/サブタイプ」方式で指定します。
例えば、<tt>text/plain, text/html, image/gif</tt>等です。
それに加えて、mailcap フォーマットには二種類のワイルドカードもあります。
一つは特殊なサブタイプ '*' を使う方法で、もう一つは暗にワイルドタイプ
を示すものとして、メジャータイプしか書かないという方法です。
例えば、<tt>image/*</tt> と <tt>video</tt> は、それぞれ
image タイプと video タイプの全体に相当します。

閲覧コマンドは、特定のタイプを閲覧するための Unix コマンドです。
二種類のコマンドがサポートされています。デフォルトの方は、その
MIME メッセイジの内容を標準入力でコマンドに渡すものです。
この動作を変更するには、閲覧コマンドの引数に &percnt;s を使います。
こうすると Mutt は MIME メッセイジの内容を一時ファイルに保存し、
&percnt;s を一時ファイルの名前に置き換えて閲覧コマンドを呼び出します。
どちらの場合も Mutt は端末を閲覧プログラムに明け渡し、
終了するまで待ちます。終了時、一時ファイルは (あれば) 削除されます。

それで、最も単純な形では、text/plain のメッセイジを外部ペイジャ more
に標準入力で渡すことができます。
<tscreen><verb>
text/plain; more
</verb></tscreen>
もしくは、メッセイジをファイルとして渡すこともできます。
<tscreen><verb>
text/plain; more %s
</verb></tscreen>
lynx を使って対話的にtext/html のメッセイジを閲覧したいと思うかもしれません。
<tscreen><verb>
text/html; lynx %s
</verb></tscreen>
その場合、lynx は標準入力からのファイル閲覧をサポートしていないので
&percnt;s 構文を使わなければなりません。
<bf>注意:</bf> <em>古いヴァージョンの lynx には、一部、「text/html にまで
mailcap ファイルをチェックしてしまう」というバグを含むものがあります。
その場合、ビューワとして lynx を呼ぶように書いてあっても
そのまま実行してしまいます。すると、いつまでも
自分が自分を呼び出し続けることになってしまいます。</em>

一方、lynx を対話的に使いたいのではなく、単に text/html を text/plain
に変換したいということもあるでしょう。そのときはこうします。
<tscreen><verb>
text/html; lynx -dump %s | more
</verb></tscreen>

おそらく、text/html ファイルの閲覧には lynx を使いたいものの、
ほかの text 形式にはすべてペイジャを使いたいということもあるでしょう。
その場合はこういう書き方ができます。
<tscreen><verb>
text/html; lynx %s
text/*; more
</verb></tscreen>
これは mailcap ファイルのもっとも単純な形式です。

<sect2>mailcap の安全な使い方
<p>
一般的に言って、MIME パラメータに埋め込まれたメタ文字を解釈して
シェルに渡すことには、セキュリティ上の問題を引き起こす危険性があります。
Mutt は &percnt;s 構文の展開の際に正しくパラメータをくくろうとしますし、
危険な文字を別のものに置き換えようとします。
<ref id="mailcap_sanitize" name="mailcap&lowbar;sanitize" >
変数を見てください。

Mutt が mailcap からプログラムを呼び出す手順はおそらく安全ですが、
他のアプリケイションも mailcap を読みますし、
中にはそれほど注意を払わないものもあるかも知れません。
そこで、次のようなルールに注意を払うべきです。

<em>シェルクウォウトに &percnt;展開を入れない。</em>　シングルクウォウト (')
やダブルクウォウト (&dquot;) で囲ってはいけません。
(訳注：展開後にスペイスが入っても一つの引数として認識されるように
クウォウトしたいと思うかもしれませんが、その必要はありません。)
その辺りのことは Mutt がきちんとやってくれますし、
mailcap を使う他のプログラムも同じはずです。
バッククウォウトを使った展開の中にも入れないでください。
eval 文には特別な注意が必要です。できればまったく使わないでください。
おかしな挙動をクウォウトで直そうとしても、新しい別の水漏れができるだけです。
クウォウトを使っている限り、正しい方法など最初から存在しないのです。

どうしても &percnt;展開の値がクウォウトやバッククウォウトの
中に入っていなければならない場合には、まずその値をシェル変数に代入して、
その変数を使うようにしてください。次の例のようにです
(バッククウォウト展開の中で <tt/&dollar;charset/ を使っていますが、
これは安全です。そこからさらに展開されるわけではないからです)。

<tscreen><verb>
text/test-mailcap-bug; cat %s; copiousoutput; test=charset=%{charset} \
        && test "`echo $charset | tr '[A-Z]' '[a-z]'`" != iso-8859-1
</verb></tscreen>

<sect2>一歩進んだ mailcap の使い方
<p>

<sect3>付加的な欄
<p>
必須である content-type と閲覧コマンドの欄のほかに、
セミコロン ';' で区切った欄を追加して、
各種フラグを付けたりオプションを設定したりすることができます。
Mutt は以下の付加的な欄をサポートしています。
<descrip>
<tag/copiousoutput/
このフラグは、そのコマンドがテキストを標準出力へ (もしかすると
大量に) 渡すということを Mutt に教えます。このとき Mutt は
ペイジャ (内蔵ペイジャ、もしくは pager 変数で決めた外部ペイジャ)
を起動して閲覧コマンドの出力を受け取ります。このフラグがなければ、
そのコマンドは対話的に操作できるものとみなされます。
これを使って、「基本的な使い方」の <tt>lynx -dump</tt> の例における
more へのパイプを書き換えることができます。
<tscreen><verb>
text/html; lynx -dump %s ; copiousoutput
</verb></tscreen>
こうすれば lynx が text/html の出力を text/plain 変換し、
Mutt が標準のペイジャを使ってその結果を表示することになります。
<tag/needsterminal/
Mutt は <ref id="auto_view" name="auto&lowbar;view" > で
添付ファイルを閲覧する時に、このフラグに合わせて <ref id="wait_key"
name="&dollar;wait&lowbar;key" > 変数を扱います。
終了時にキーを押すよう求めるかどうかは、
閲覧に対話的な外部プログラムを使っており、かつ
該当する mailcap 項目に <em/needsterminal/ フラグがあるときにのみ、
<ref id="wait_key" name="&dollar;wait&lowbar;key" >
とプログラムの終了値から決定することになります。
そのほかの場合はすべて、キーを催促せずに終了します。
<tag>compose=&lt;command&gt;</tag>
このフラグは、特定の MIME タイプの添付ファイルを新規作成する時に使う
コマンドを指定します。コンポウズメニューにおいてサポートされています。
<tag>composetyped=&lt;command&gt;</tag>
このフラグも、その MIME タイプの添付ファイルを新規作成する
コマンドを指定するものです。compose コマンドとの違いは、そのデイタ内に
標準的な MIME ヘッダが含まれていることが期待されているという点です。
これを使って、パラメータ、ファイル名、内容説明などを指定できます。
Mutt はこれをコンポウズメニューでサポートしています。
<tag>print=&lt;command&gt;</tag>
特定の MIME タイプの印刷に使うコマンドを指定します。
Mutt では、ファイル添付メニューとコンポウズメニューでサポートされています。
<tag>edit=&lt;command&gt;</tag>
このフラグは、特定の MIME タイプの編集に使うコマンドを指定します。
Mutt はこのコマンドをコンポウズメニューでサポートしており、
新しい添付ファイルを作成する時にも使います。
Mutt はデフォルトでは editor 変数に定義されたエディタを
テキストの添付ファイルに使用します。
<tag>nametemplate=&lt;template&gt;</tag>
閲覧コマンド欄に &percnt;s で示されるファイルのファイル名を指定します。
ある種のプログラムは、ファイル名に特定の拡張子がないと、
正しく閲覧してくれなかったりします。例えば lynx は、ファイル名が
<tt>.html</tt> で終わっている場合にのみ <tt>text/html</tt> であると
解釈します。それで、lynx を <tt>text/html</tt> ビューワに指定するには
次のように mailcap に書くことになるでしょう。
<tscreen><verb>
text/html; lynx %s; nametemplate=%s.html
</verb></tscreen>
<tag>test=&lt;command&gt;</tag>
その項目を使うべきなのかどうか確認するためのコマンドを指定します。
そのコマンドは、次の節にあるコマンド展開ルールに沿って定義します。
コマンドが 0 を返した場合にはテスト合格ですから、Mutt はその項目を使います。
0 以外の値を返した場合にはテスト失敗で、Mutt はさらに他の正しい項目を
探し続けます。<bf>注意:</bf> <em>まず content-type が合致していた場合に
のみテストが実行されます。</em>さて、例えば
<tscreen><verb>
text/html; netscape -remote 'openURL(%s)' ; test=RunningX
text/html; lynx %s
</verb></tscreen>
上の例で Mutt は RunningX を実行します。このプログラムは
X ウィンドウマネジャが動いていれば 0 を返し、そうでなければ
0 以外を返すというものです。RunningX が 0 を返せば、Mutt は
netscape を呼び出して text/html のファイルを表示させます。
もし 0 を返さなければ、次の項目に移って lynx に表示させます。
</descrip>

<sect3>検索順序
<p>
ある項目について mailcap ファイルの中から検索する際、Mutt は
その目的に最も合う項目を見付けようとします。
例えば <tt>image/gif</tt> を印刷しようとしているとき、
次のような項目が mailcap ファイルにあれば、
print コマンドのあるものを探すので、
<tscreen><verb>
image/*;        xv %s
image/gif;      ; print= anytopnm %s | pnmtops | lpr; \
                nametemplate=%s.gif
</verb></tscreen>
<tt>image/*</tt> の項を飛び越して、print コマンドのある
<tt>image/gif</tt>の項目を使用します。

さて、これを <ref id="auto_view" name="auto&lowbar;view による自動閲覧" >
と組み合わせて、添付ファイル閲覧のコマンドを二つ指定することもできます。
一つは自動的に閲覧するためのコマンド、
もう一つは添付ファイルメニューから閲覧する対話的なコマンドです。
そのうえ、test 機能を使えば、どのビューワを使うかを
自分の環境に合わせて対話的に決定できます。
<tscreen><verb>
text/html;      netscape -remote 'openURL(%s)' ; test=RunningX
text/html;      lynx %s; nametemplate=%s.html
text/html;      lynx -dump %s; nametemplate=%s.html; copiousoutput
</verb></tscreen>
Mutt は、<ref id="auto_view" name="auto&lowbar;view の自動閲覧" > には
三番目の項目を選択します。copiousoutput タグがついているからです。
対話的な閲覧には、まずプログラム RunningX を走らせて、一番目の項目を
使うかどうか調べます。プログラムが 0 以外を返せば、二番目の項目を使って
対話的閲覧をおこないます。

<sect3>コマンド展開
<p>
mailcap ファイルに定義されている各種のコマンドは
system() 関数を通して <tt>/bin/sh</tt> シェルに渡されます。
コマンドは、<tt>/bin/sh -c</tt> に渡される前に解析されて、
Mutt からの情報をもとに各種の特殊パラメータが展開されます。
Mutt が展開するキーワードは以下の通りです。
<descrip>
<tag/&percnt;s/
「mailcap の基本」の節で見たように、この変数はファイル名に展開されます。
ファイル名は、それを呼び出している側のプログラム (訳注：ここでは Mutt)
によって指定されます。
このファイルには、閲覧/印刷/編集するメッセイジ内容が含まれています。
もしくは、ファイルを作成するプログラムがそこに結果を保存します。
補足として言っておきますが、このキーワードを使うと、
Mutt はメッセイジの内容を標準入力からは渡さなくなります。
<tag/&percnt;t/
Mutt は &percnt;t をテキスト表現へ展開します。
メッセイジの content type を、mailcap 定義における
最初のパラメータと同じ形式で表現したものです。つまり
<tt>text/html</tt> や <tt>image/gif</tt> という形式になります。
<tag>&percnt;{&lt;パラメータ&gt;}</tag>
Mutt はこれを、メイルの Content-Type: 行における特定のパラメータの
値に展開します。例えば、メイルに次のような行があるとします。
<tscreen><verb>
Content-Type: text/plain; charset=iso-8859-1
</verb></tscreen>
すると Mutt は &percnt;{charset} を iso-8859-1 に展開します。
metamail のデフォルトの mailcap ファイルでは、この機能を使って
文字セットを調べ、xterm を正しい文字セットで起動してメイルを閲覧できる
ようになっています。
<tag>&bsol;&percnt;</tag>
これは &percnt; に置き換えられます。
</descrip>
Mutt は RFC 1524 で定義されている &percnt;F と &percnt;n キーワードを
今のところサポートしていません。これらのパラメータの主にマルチパート
メッセイジのためのものですが、マルチパートは Mutt 内部で扱われるからです。

<sect2>mailcap ファイルの例
<p>
下の mailcap ファイルはとても単純かつ標準的なものです。
<code>
# 常に X を実行していることにします :)
video/*;        xanim %s > /dev/null
image/*;        xv %s > /dev/null

# 常に Netscape を実行していることにします (もっとメモリがあればそうしているでしょうから)
text/html;      netscape -remote 'openURL(%s)'
</code>

下の mailcap ファイルでは、たくさんの例を示しています。

<code>
# 動画には、すべて xanim を使います
# xanim は起動時にヘッダを出力しますが、見なくて済むように
# /dev/null へ送ってしまいます
video/*;        xanim %s > /dev/null

# HTML は、実行中の netscape に remote オプションで送ります
text/html;      netscape -remote 'openURL(%s)'; test=RunningNetscape

# netscape を実行していなくて X を実行しているときは
# そのファイルに対して netscape を起動します
text/html;      netscape %s; test=RunningX

# それ以外のときは lynx を使ってテキストで閲覧します
text/html;      lynx %s

# こちらは text/html を text/plain に変換するものです
text/html;      lynx -dump %s; copiousoutput

# enscript を使ってテキストを二段で印刷します
text/*;         more %s; print=enscript -2Gr %s

# netscape は、jpeg を自分で表示するためにフラグを付けます
image/jpeg;xv %s; x-mozilla-flags=internal

# X 実行中の画像閲覧には xv を使います
# なお、ここでは \ を使って行をのばし、画像のエディタも設定しています
image/*;xv %s; test=RunningX; \
        edit=xpaint %s

# netpbm ツールを使って画像をテキストに変換します
image/*;  (anytopnm %s | pnmscale -xysize 80 46 | ppmtopgm | pgmtopbm | pbmtoascii -1x2 ) 2>&1 ; copiousoutput

# excel の表計算ファイルは NT マシンに送ります
application/ms-excel; open.pl %s
</code>

<sect1>MIME 自動閲覧<label id="auto_view" >
<p>
mailcap ファイルに指定されている MIME のビューワで添付ファイルを
閲覧するよう Mutt に明示的に言う以外に、
ペイジャの中で MIME 添付ファイルを自動的に閲覧する機能もあります。

機能させるには、mailcap ファイルで <tt/copiousoutput/ オプションを使って
ビューワを指定しなくてはなりません。そのビューワが
対話的コマンドではないということを指示するためです。
普通は、ペイジャで閲覧できるようなテキスト表現へと
添付ファイルを変換するためにもこの項目を使います。

それから <tt/auto&lowbar;view/ という muttrc のコマンドを使って、
自動的に閲覧したい content-type を羅列します。

例えば次のように <tt/auto&lowbar;view/ を指定しているとします。
<tscreen><verb>
auto_view text/html application/x-gunzip application/postscript image/gif application/x-tar-gz
</verb></tscreen>

以下のような mailcap 項目を使えば、
こうした添付ファイルを自動的に閲覧できます。
<tscreen><verb>
text/html;      lynx -dump %s; copiousoutput; nametemplate=%s.html
image/*;        anytopnm %s | pnmscale -xsize 80 -ysize 50 | ppmtopgm | pgmtopbm | pbmtoascii ; copiousoutput
application/x-gunzip;   gzcat; copiousoutput
application/x-tar-gz; gunzip -c %s | tar -tf - ; copiousoutput
application/postscript; ps2ascii %s; copiousoutput
</verb></tscreen>

&dquot;unauto_view&dquot; を使えば、以前に指定した項目を
自動閲覧リストから削除できます。
message-hook と一緒に使うなら、サイズ等に基づいた自動閲覧もできます。
&dquot;unauto_view *&dquot; は、指定した項目をすべて削除します。

<sect1>MIME Multipart/Alternative<label id="alternative_order">
<p>
Mutt には、multipart/alternative のうち、どのタイプの添付ファイルを
表示するか決定するための発見的手法があります。まず最初に
alternative&lowbar;order リストを調べて、選べるタイプのなかで
一番望ましいとされているものがあればそれに決めます。
alternative&lowbar;order リストには複数の MIME タイプが順に並べられます。
これには明示的および暗示的なワイルドカードのサポートも付いています。
例えばこうです。
<tscreen><verb>
alternative_order text/enriched text/plain text application/postscript image/*
</verb></tscreen>

次に Mutt は、いずれかのタイプが <ref id="auto_view" name="auto&lowbar;view" >
で定義されていないかどうかを調べ、それを使います。それでもだめなら
text タイプを探します。最終手段としては、扱い方のわかるタイプが一つでも
ないかどうかと探します。

MIME タイプを <tt/alternative_order/ リストから削除するには、
<tt/unalternative_order/ コマンドを使います。

<sect1>MIME 調査<label id="mime_lookup">
<p>
Mutt の mime&lowbar;lookup リストは、mailcap の項目に従って扱うべきでは
ない MIME タイプを指定するものです。このオプションは、
application/octet-stream のようなバイナリのタイプを取り扱うように
設計されています。
添付ファイルの MIME タイプが mime&lowbar;lookup に指定されているときは、
そのファイル名の拡張子を mime.types ファイルの拡張子のリストと見比べて、
拡張子に対応する MIME タイプを使って、mailcap にあるルールや
他の指定された設定オプション (たとえば auto&lowbar;view) に従った処理をします。
一般的な使い方はこうです、
<tscreen><verb>
mime_lookup application/octet-stream application/X-Lotus-Manuscript
</verb></tscreen>

なお、unmime&lowbar;lookup コマンドを使えば、
すでにシステムの muttrc 等で設定されている特定の MIME タイプに対して
この機能を適用しないようにすることもできます。

<sect>早見表
<sect1>コマンドラインオプション<label id="commandline" >
<p>
引数なしで <tt>mutt</tt> だけ実行すると、Mutt はスプールメイルボックスを
読みに行きます。しかし、コマンドラインから指定してやることで、
他のメイルボックスを読んだりメイルを送ったりすることも可能です。

<tscreen><verb>
-A      エイリアスを展開
-a      メッセイジにファイルを添付
-b      ブラインドカーボンコピー (BCC) アドレスを指定
-c      カーボンコピー (Cc) アドレスを指定
-e      設定コマンドを指定して、初期化ファイルを読んだ後に実行
-f      読み込むメイルボックスを指定
-F      初期化コマンドを読むファイルとして別のものを指定
-h      コマンドラインオプションについてのヘルプを表示
-H      下書きファイルを指定して、そこからヘッダと本文を読み出す
-i      作成メッセイジに含めるファイルを指定
-m      デフォルトのメイルボックスの種類を指定
-n      システムの Muttrc を読まない
-p      延期していたメッセイジを呼び出す
-Q      設定変数を問い合わせる
-R      メイルボックスを読み出し専用で開く
-s      題を指定 (空白を含むときは引用符で囲むこと)
-v      ヴァージョン番号とコンパイル時の設定を表示
-x      mailx(1) のコンポウズモウドを真似る
-y      mailboxes コマンドで指定されたファイルのメニューを表示
-z      メイルボックスにメッセイジが存在しないときはすぐ終了
-Z      新着メッセイジのある最初のフォルダを開くが、なければすぐ終了
</verb></tscreen>

メイルボックス内のメッセイジを読むには、こうします。

<tt/mutt/ &lsqb; -nz &rsqb; &lsqb; -F <em/muttrc/ &rsqb;
&lsqb; -m <em/メイルボックスの種類/ &rsqb; &lsqb; -f <em/メイルボックス/ &rsqb;

新規にメッセイジを作成するには、こうします。

<tt/mutt/ &lsqb; -n &rsqb; &lsqb; -F <em/muttrc/ &rsqb;
&lsqb; -a <em/添付ファイル/ &rsqb; &lsqb; -c <em/CCアドレス/ &rsqb;
&lsqb; -i <em/引用ファイル/ &rsqb; &lsqb; -s <em/題名/ &rsqb; <em/アドレス/
&lsqb; <em/アドレス/ ... &rsqb;

Mutt は、準備しておいたメッセイジを送信する &dquot;batch&dquot; モウドも
サポートしています。
単に、送信したいファイルから入力へリダイレクトしてください。例えば、

<tt>mutt -s &dquot;data set for run &num;2&dquot; professor@bigschool.edu
&lt; &tilde;/run2.dat</tt>

このコマンドは、メッセイジを &dquot;professor@bigschool.edu&dquot; に
&dquot;data set for run &num;2&dquot; という題で送信します。
そのメッセイジの本文にはファイル &dquot;&tilde;/run2.dat&dquot;
の内容が入ります。

<sect1>設定コマンド<label id="commands" >
<p>
以下が、Mutt の理解するコマンドです。

<itemize>
<item>
<tt><ref id="account-hook" name="account-hook"></tt> <em/パターン/　<em/コマンド/
<item>
<tt><ref id="alias" name="alias"></tt> <em/キー/　<em/アドレス/ &lsqb; , <em/アドレス/, ... &rsqb;
<item>
<tt><ref id="alias" name="unalias"></tt> &lsqb; * | <em/キー/ ... &rsqb;
<item>
<tt><ref id="alternates" name="alternates"></tt> <em/正規表現/ &lsqb; <em/正規表現/ ... &rsqb;
<item>
<tt><ref id="alternates" name="unalternates"></tt> &lsqb; * | <em/正規表現/ ... &rsqb;
<item>
<tt><ref id="alternative_order" name="alternative&lowbar;order"></tt> <em/MIME/ &lsqb; <em/MIME/ ... &rsqb;
<item>
<tt><ref id="alternative_order" name="unalternative&lowbar;order"></tt> <em/MIME/ &lsqb; <em/MIME/ ... &rsqb;
<item>
<tt><ref id="auto_view" name="auto&lowbar;view"></tt> <em/MIME/ &lsqb; <em/MIME/ ... &rsqb;
<item>
<tt><ref id="auto_view" name="unauto&lowbar;view"></tt> <em/MIME/ &lsqb; <em/MIME/ ... &rsqb;
<item>
<tt><ref id="bind" name="bind"></tt> <em/使う場面/　<em/キー/　<em/関数/
<item>
<tt><ref id="charset-hook" name="charset-hook"></tt> <em/別名/　<em/文字セット/
<item>
<tt><ref id="color" name="color"></tt> <em/対象/　<em/前景/　<em/背景/ &lsqb; <em/正規表現/ &rsqb;
<item>
<tt><ref id="color" name="uncolor"></tt> <em/index/ <em/パターン/ &lsqb; <em/パターン/ ... &rsqb;
<item>
<tt><ref id="exec" name="exec"></tt> <em/関数/ &lsqb; <em/関数/ ... &rsqb;
<item>
<tt><ref id="fcc-hook" name="fcc-hook"></tt> <em/パターン/　<em/メイルボックス/
<item>
<tt><ref id="fcc-save-hook" name="fcc-save-hook"></tt> <em/パターン/　<em/メイルボックス/
<item>
<tt><ref id="folder-hook" name="folder-hook"></tt> <em/パターン/　<em/コマンド/
<item>
<tt><ref id="hdr_order" name="hdr&lowbar;order"></tt> <em/ヘッダ/ &lsqb; <em/ヘッダ/ ... &rsqb;
<item>
<tt><ref id="hdr_order" name="unhdr&lowbar;order"></tt> <em/ヘッダ/ &lsqb; <em/ヘッダ/ ... &rsqb;
<item>
<tt><ref id="charset-hook" name="iconv-hook"></tt> <em/文字セット/　<em/ロウカル文字セット/
<item>
<tt><ref id="ignore" name="ignore"></tt> <em/パターン/ &lsqb; <em/パターン/ ... &rsqb;
<item>
<tt><ref id="ignore" name="unignore"></tt> <em/パターン/ &lsqb; <em/パターン/ ... &rsqb;
<item>
<tt><ref id="lists" name="lists"></tt> <em/正規表現/ &lsqb; <em/正規表現/ ... &rsqb;
<item>
<tt><ref id="lists" name="unlists"></tt> <em/正規表現/ &lsqb; <em/正規表現/ ... &rsqb;
<item>
<tt><ref id="macro" name="macro"></tt> <em/メニュー/　<em/キー/　<em/操作内容/ &lsqb; <em/説明/ &rsqb;
<item>
<tt><ref id="mailboxes" name="mailboxes"></tt> <em/ファイル名/ &lsqb; <em/ファイル名/ ... &rsqb;
<item>
<tt><ref id="mbox-hook" name="mbox-hook"></tt> <em/パターン/　<em/メイルボックス/
<item>
<tt><ref id="message-hook" name="message-hook"></tt> <em/パターン/　<em/コマンド/
<item>
<tt><ref id="mime_lookup" name="mime&lowbar;lookup"></tt> <em/MIME/ &lsqb; <em/MIME/ ... &rsqb;
<item>
<tt><ref id="mime_lookup" name="unmime&lowbar;lookup"></tt> <em/MIME/ &lsqb; <em/MIME/ ... &rsqb;
<item>
<tt><ref id="color" name="mono"></tt> <em/属性/ &lsqb; <em/正規表現/ &rsqb;
<item>
<tt><ref id="color" name="unmono"></tt> <em/index/ <em/パターン/ &lsqb; <em/パターン/ ... &rsqb;
<item>
<tt><ref id="my_hdr" name="my&lowbar;hdr"></tt> <em/文字列/
<item>
<tt><ref id="my_hdr" name="unmy&lowbar;hdr"></tt> <em/フィールド/ &lsqb; <em/フィールド/ ... &rsqb;
<item>
<tt><ref id="crypt-hook" name="crypt-hook"></tt> <em/パターン/　<em/鍵ID/
<item>
<tt><ref id="push" name="push"></tt> <em/文字列/
<item>
<tt><ref id="set" name="reset"></tt> <em/変数/ &lsqb;<em/変数/ ... &rsqb;
<item>
<tt><ref id="save-hook" name="save-hook"></tt> <em/正規表現/　<em/ファイル名/
<item>
<tt><ref id="score-command" name="score"></tt> <em/パターン/　<em/値/
<item>
<tt><ref id="score-command" name="unscore"></tt> <em/パターン/ &lsqb; <em/パターン/ ... &rsqb;
<item>
<tt><ref id="send-hook" name="send-hook"></tt> <em/正規表現/　<em/コマンド/
<item>
<tt><ref id="set" name="set"></tt> &lsqb;no|inv&rsqb;<em/変数/&lsqb;=<em/値/&rsqb; &lsqb; <em/変数/ ... &rsqb;
<item>
<tt><ref id="set" name="unset"></tt> <em/変数/ &lsqb;<em/変数/ ... &rsqb;
<item>
<tt><ref id="source" name="source"></tt> <em/ファイル名/
<item>
<tt><ref id="lists" name="subscribe"></tt> <em/アドレス/ &lsqb; <em/アドレス/ ... &rsqb;
<item>
<tt><ref id="lists" name="unsubscribe"></tt> <em/アドレス/ &lsqb; <em/アドレス/ ... &rsqb;
<item>
<tt><ref id="set" name="toggle"></tt> <em/変数/ &lsqb;<em/変数/ ... &rsqb;
<item>
<tt><ref id="unhook" name="unhook"></tt> <em/フック/
</itemize>

<sect1>設定変数<label id="variables">
<p>


<sect2>abort&lowbar;nosubject<label id="abort_nosubject">
<p>
Type: quadoption<newline>
Default: ask-yes

<p>
<em>yes</em> に設定されていると、メッセイジ作成時の題名入力に対して
題が与えられなかったときに、作成が中止される。
<em>no</em> に設定されていると、題がなくても中止されない。


<sect2>abort&lowbar;unmodified<label id="abort_unmodified">
<p>
Type: quadoption<newline>
Default: yes

<p>
<em>yes</em> に設定されていると、メッセイジ本文の編集後に
ファイルへの変更がなければ作成を自動終了する (このチェックは
そのファイルの<em>最初の</em>編集後にのみ発生する)。
<em>no</em> に設定されていると、どんなときも作成が中止されない。


<sect2>alias&lowbar;file<label id="alias_file">
<p>
Type: path<newline>
Default: &dquot;&tilde;/.muttrc&dquot;

<p>
<ref id="create-alias" name="create-alias"> 関数で作成された
エイリアスを保存するデフォルトファイル。
<p>
<bf>Note:</bf> Mutt will not automatically source this file; you must
explicitly use the ``<ref id="source" name="source">'' command for it to be executed.


<sect2>alias&lowbar;format<label id="alias_format">
<p>
Type: string<newline>
Default: &dquot;&percnt;4n &percnt;2f &percnt;t &percnt;-10a   &percnt;r&dquot;

<p>
Specifies the format of the data displayed for the `alias' menu.  The
following printf(3)-style sequences are available:
<p>

<descrip>
<tag>&percnt;a </tag>alias name
<tag>&percnt;f </tag>flags - currently, a &dquot;d&dquot; for an alias marked for deletion
<tag>&percnt;n </tag>index number
<tag>&percnt;r </tag>address which alias expands to
<tag>&percnt;t </tag>character which indicates if the alias is tagged for inclusion
</descrip>


<sect2>allow&lowbar;8bit<label id="allow_8bit">
<p>
Type: boolean<newline>
Default: yes

<p>
Controls whether 8-bit data is converted to 7-bit using either Quoted-
Printable or Base64 encoding when sending mail.


<sect2>allow&lowbar;ansi<label id="allow_ansi">
<p>
Type: boolean<newline>
Default: no

<p>
Controls whether ANSI color codes in messages (and color tags in 
rich text messages) are to be interpreted.
Messages containing these codes are rare, but if this option is set,
their text will be colored accordingly. Note that this may override
your color choices, and even present a security problem, since a
message could include a line like &dquot;&lsqb;-- PGP output follows ...&dquot; and
give it the same color as your attachment color.


<sect2>arrow&lowbar;cursor<label id="arrow_cursor">
<p>
Type: boolean<newline>
Default: no

<p>
When set, an arrow (``-&gt;'') will be used to indicate the current entry
in menus instead of highlighting the whole line.  On slow network or modem
links this will make response faster because there is less that has to
be redrawn on the screen when moving to the next or previous entries
in the menu.


<sect2>ascii&lowbar;chars<label id="ascii_chars">
<p>
Type: boolean<newline>
Default: no

<p>
If set, Mutt will use plain ASCII characters when displaying thread
and attachment trees, instead of the default <em>ACS</em> characters.


<sect2>askbcc<label id="askbcc">
<p>
Type: boolean<newline>
Default: no

<p>
If set, Mutt will prompt you for blind-carbon-copy (Bcc) recipients
before editing an outgoing message.


<sect2>askcc<label id="askcc">
<p>
Type: boolean<newline>
Default: no

<p>
If set, Mutt will prompt you for carbon-copy (Cc) recipients before
editing the body of an outgoing message.


<sect2>attach&lowbar;format<label id="attach_format">
<p>
Type: string<newline>
Default: &dquot;&percnt;u&percnt;D&percnt;I &percnt;t&percnt;4n &percnt;T&percnt;.40d&percnt;&gt; &lsqb;&percnt;.7m/&percnt;.10M, &percnt;.6e&percnt;?C?, &percnt;C?, &percnt;s&rsqb; &dquot;

<p>
This variable describes the format of the `attachment' menu.  The
following printf-style sequences are understood:
<p>

<descrip>
<tag>&percnt;C  </tag>charset
<tag>&percnt;c  </tag>reqiures charset conversion (n or c)
<tag>&percnt;D  </tag>deleted flag
<tag>&percnt;d  </tag>description
<tag>&percnt;e  </tag>MIME content-transfer-encoding
<tag>&percnt;f  </tag>filename
<tag>&percnt;I  </tag>disposition (I=inline, A=attachment)
<tag>&percnt;m  </tag>major MIME type
<tag>&percnt;M  </tag>MIME subtype
<tag>&percnt;n  </tag>attachment number
<tag>&percnt;s  </tag>size
<tag>&percnt;t  </tag>tagged flag
<tag>&percnt;T  </tag>graphic tree characters
<tag>&percnt;u  </tag>unlink (=to delete) flag
<tag>&percnt;&gt;X </tag>right justify the rest of the string and pad with character &dquot;X&dquot;
<tag>&percnt;|X </tag>pad to the end of the line with character &dquot;X&dquot;
</descrip>


<sect2>attach&lowbar;sep<label id="attach_sep">
<p>
Type: string<newline>
Default: &dquot;&bsol;n&dquot;

<p>
The separator to add between attachments when operating (saving,
printing, piping, etc) on a list of tagged attachments.


<sect2>attach&lowbar;split<label id="attach_split">
<p>
Type: boolean<newline>
Default: yes

<p>
If this variable is unset, when operating (saving, printing, piping,
etc) on a list of tagged attachments, Mutt will concatenate the
attachments and will operate on them as a single attachment. The
``<ref id="attach_sep" name="&dollar;attach&lowbar;sep">'' separator is added after each attachment. When set,
Mutt will operate on the attachments one by one.


<sect2>attribution<label id="attribution">
<p>
Type: string<newline>
Default: &dquot;On &percnt;d, &percnt;n wrote:&dquot;

<p>
This is the string that will precede a message which has been included
in a reply.  For a full listing of defined printf()-like sequences see
the section on ``<ref id="index_format" name="&dollar;index&lowbar;format">''.


<sect2>autoedit<label id="autoedit">
<p>
Type: boolean<newline>
Default: no

<p>
When set along with ``<ref id="edit_headers" name="&dollar;edit&lowbar;headers">'', Mutt will skip the initial
send-menu and allow you to immediately begin editing the body of your
message.  The send-menu may still be accessed once you have finished
editing the body of your message.
<p>
Also see ``<ref id="fast_reply" name="&dollar;fast&lowbar;reply">''.


<sect2>auto&lowbar;tag<label id="auto_tag">
<p>
Type: boolean<newline>
Default: no

<p>
When set, functions in the <em>index</em> menu which affect a message
will be applied to all tagged messages (if there are any).  When
unset, you must first use the tag-prefix function (default: &dquot;;&dquot;) to
make the next function apply to all tagged messages.


<sect2>beep<label id="beep">
<p>
Type: boolean<newline>
Default: yes

<p>
When this variable is set, mutt will beep when an error occurs.


<sect2>beep&lowbar;new<label id="beep_new">
<p>
Type: boolean<newline>
Default: no

<p>
When this variable is set, mutt will beep whenever it prints a message
notifying you of new mail.  This is independent of the setting of the
``<ref id="beep" name="&dollar;beep">'' variable.


<sect2>bounce<label id="bounce">
<p>
Type: quadoption<newline>
Default: ask-yes

<p>
Controls whether you will be asked to confirm bouncing messages.
If set to <em>yes</em> you don't get asked if you want to bounce a
message. Setting this variable to <em>no</em> is not generally useful,
and thus not recommended, because you are unable to bounce messages.


<sect2>bounce&lowbar;delivered<label id="bounce_delivered">
<p>
Type: boolean<newline>
Default: yes

<p>
When this variable is set, mutt will include Delivered-To headers when
bouncing messages.  Postfix users may wish to unset this variable.


<sect2>charset<label id="charset">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
Character set your terminal uses to display and enter textual data.


<sect2>check&lowbar;new<label id="check_new">
<p>
Type: boolean<newline>
Default: yes

<p>
<bf>Note:</bf> this option only affects <em>maildir</em> and <em>MH</em> style
mailboxes.
<p>
When <em>set</em>, Mutt will check for new mail delivered while the
mailbox is open.  Especially with MH mailboxes, this operation can
take quite some time since it involves scanning the directory and
checking each file to see if it has already been looked at.  If
<em>check&lowbar;new</em> is <em>unset</em>, no check for new mail is performed
while the mailbox is open.


<sect2>collapse&lowbar;unread<label id="collapse_unread">
<p>
Type: boolean<newline>
Default: yes

<p>
When <em>unset</em>, Mutt will not collapse a thread if it contains any
unread messages.


<sect2>uncollapse&lowbar;jump<label id="uncollapse_jump">
<p>
Type: boolean<newline>
Default: no

<p>
When <em>set</em>, Mutt will jump to the next unread message, if any,
when the current thread is <em>un</em>collapsed.


<sect2>compose&lowbar;format<label id="compose_format">
<p>
Type: string<newline>
Default: &dquot;-- Mutt: Compose  &lsqb;Approx. msg size: &percnt;l   Atts: &percnt;a&rsqb;&percnt;&gt;-&dquot;

<p>
Controls the format of the status line displayed in the &bsol;fCompose
menu.  This string is similar to ``<ref id="status_format" name="&dollar;status&lowbar;format">'', but has its own
set of printf()-like sequences:
<p>

<descrip>
<tag>&percnt;a </tag>total number of attachments 
<tag>&percnt;h </tag>local hostname
<tag>&percnt;l </tag>approximate size (in bytes) of the current message
<tag>&percnt;v </tag>Mutt version string
</descrip>

<p>
See the text describing the ``<ref id="status_format" name="&dollar;status&lowbar;format">'' option for more 
information on how to set ``<ref id="compose_format" name="&dollar;compose&lowbar;format">''.


<sect2>confirmappend<label id="confirmappend">
<p>
Type: boolean<newline>
Default: yes

<p>
When set, Mutt will prompt for confirmation when appending messages to
an existing mailbox.


<sect2>confirmcreate<label id="confirmcreate">
<p>
Type: boolean<newline>
Default: yes

<p>
When set, Mutt will prompt for confirmation when saving messages to a
mailbox which does not yet exist before creating it.


<sect2>connect&lowbar;timeout<label id="connect_timeout">
<p>
Type: number<newline>
Default: 30

<p>
Causes Mutt to timeout a network connection (for IMAP or POP) after this
many seconds if the connection is not able to be established.  A negative
value causes Mutt to wait indefinitely for the connection to succeed.


<sect2>content&lowbar;type<label id="content_type">
<p>
Type: string<newline>
Default: &dquot;text/plain&dquot;

<p>
Sets the default Content-Type for the body of newly composed messages.


<sect2>copy<label id="copy">
<p>
Type: quadoption<newline>
Default: yes

<p>
This variable controls whether or not copies of your outgoing messages
will be saved for later references.  Also see ``<ref id="record" name="&dollar;record">'',
``<ref id="save_name" name="&dollar;save&lowbar;name">'', ``<ref id="force_name" name="&dollar;force&lowbar;name">'' and ``<ref id="fcc-hook" name="fcc-hook">''.


<sect2>crypt&lowbar;autopgp<label id="crypt_autopgp">
<p>
Type: boolean<newline>
Default: yes

<p>
This variable controls whether or not mutt may automatically enable
PGP encryption/signing for messages.  See also ``<ref id="crypt_autoencrypt" name="&dollar;crypt&lowbar;autoencrypt">'',
``<ref id="crypt_replyencrypt" name="&dollar;crypt&lowbar;replyencrypt">'',
``<ref id="crypt_autosign" name="&dollar;crypt&lowbar;autosign">'', ``<ref id="crypt_replysign" name="&dollar;crypt&lowbar;replysign">'' and ``<ref id="smime_is_default" name="&dollar;smime&lowbar;is&lowbar;default">''.


<sect2>crypt&lowbar;autosmime<label id="crypt_autosmime">
<p>
Type: boolean<newline>
Default: yes

<p>
This variable controls whether or not mutt may automatically enable
S/MIME encryption/signing for messages. See also ``<ref id="crypt_autoencrypt" name="&dollar;crypt&lowbar;autoencrypt">'',
``<ref id="crypt_replyencrypt" name="&dollar;crypt&lowbar;replyencrypt">'',
``<ref id="crypt_autosign" name="&dollar;crypt&lowbar;autosign">'', ``<ref id="crypt_replysign" name="&dollar;crypt&lowbar;replysign">'' and ``<ref id="smime_is_default" name="&dollar;smime&lowbar;is&lowbar;default">''.


<sect2>date&lowbar;format<label id="date_format">
<p>
Type: string<newline>
Default: &dquot;!&percnt;a, &percnt;b &percnt;d, &percnt;Y at &percnt;I:&percnt;M:&percnt;S&percnt;p &percnt;Z&dquot;

<p>
This variable controls the format of the date printed by the ``&percnt;d''
sequence in ``<ref id="index_format" name="&dollar;index&lowbar;format">''.  This is passed to the <em>strftime</em>
call to process the date. See the man page for <em>strftime(3)</em> for
the proper syntax.
<p>
Unless the first character in the string is a bang (``!''), the month
and week day names are expanded according to the locale specified in
the variable ``<ref id="locale" name="&dollar;locale">''. If the first character in the string is a
bang, the bang is discarded, and the month and week day names in the
rest of the string are expanded in the <em>C</em> locale (that is in US
English).


<sect2>default&lowbar;hook<label id="default_hook">
<p>
Type: string<newline>
Default: &dquot;&tilde;f &percnt;s !&tilde;P | (&tilde;P &tilde;C &percnt;s)&dquot;

<p>
This variable controls how send-hooks, message-hooks, save-hooks,
and fcc-hooks will
be interpreted if they are specified with only a simple regexp,
instead of a matching pattern.  The hooks are expanded when they are
declared, so a hook will be interpreted according to the value of this
variable at the time the hook is declared.  The default value matches
if the message is either from a user matching the regular expression
given, or if it is from you (if the from address matches
``alternates'') and is to or cc'ed to a user matching the given
regular expression.


<sect2>delete<label id="delete">
<p>
Type: quadoption<newline>
Default: ask-yes

<p>
Controls whether or not messages are really deleted when closing or
synchronizing a mailbox.  If set to <em>yes</em>, messages marked for
deleting will automatically be purged without prompting.  If set to
<em>no</em>, messages marked for deletion will be kept in the mailbox.


<sect2>delete&lowbar;untag<label id="delete_untag">
<p>
Type: boolean<newline>
Default: yes

<p>
If this option is <em>set</em>, mutt will untag messages when marking them
for deletion.  This applies when you either explicitly delete a message,
or when you save it to another folder.


<sect2>digest&lowbar;collapse<label id="digest_collapse">
<p>
Type: boolean<newline>
Default: yes

<p>
If this option is <em>set</em>, mutt's revattach menu will not show the subparts of
individual messages in a digest.  To see these subparts, press 'v' on that menu.


<sect2>display&lowbar;filter<label id="display_filter">
<p>
Type: path<newline>
Default: &dquot;&dquot;

<p>
When set, specifies a command used to filter messages.  When a message
is viewed it is passed as standard input to <ref id="display_filter" name="&dollar;display&lowbar;filter">, and the
filtered message is read from the standard output.


<sect2>dotlock&lowbar;program<label id="dotlock_program">
<p>
Type: path<newline>
Default: &dquot;/usr/local/bin/mutt&lowbar;dotlock&dquot;

<p>
Contains the path of the mutt&lowbar;dotlock (8) binary to be used by
mutt.


<sect2>dsn&lowbar;notify<label id="dsn_notify">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
<bf>Note:</bf> you should not enable this unless you are using Sendmail
8.8.x or greater.
<p>
This variable sets the request for when notification is returned.  The
string consists of a comma separated list (no spaces!) of one or more
of the following: <em>never</em>, to never request notification,
<em>failure</em>, to request notification on transmission failure,
<em>delay</em>, to be notified of message delays, <em>success</em>, to be
notified of successful transmission.
<p>
Example: set dsn&lowbar;notify=&dquot;failure,delay&dquot;


<sect2>dsn&lowbar;return<label id="dsn_return">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
<bf>Note:</bf> you should not enable this unless you are using Sendmail
8.8.x or greater.
<p>
This variable controls how much of your message is returned in DSN
messages.  It may be set to either <em>hdrs</em> to return just the
message header, or <em>full</em> to return the full message.
<p>
Example: set dsn&lowbar;return=hdrs


<sect2>duplicate&lowbar;threads<label id="duplicate_threads">
<p>
Type: boolean<newline>
Default: yes

<p>
This variable controls whether mutt, when sorting by threads, threads
messages with the same message-id together.  If it is set, it will indicate
that it thinks they are duplicates of each other with an equals sign
in the thread diagram.


<sect2>edit&lowbar;headers<label id="edit_headers">
<p>
Type: boolean<newline>
Default: no

<p>
This option allows you to edit the header of your outgoing messages
along with the body of your message.


<sect2>editor<label id="editor">
<p>
Type: path<newline>
Default: &dquot;&dquot;

<p>
This variable specifies which editor is used by mutt.
It defaults to the value of the VISUAL, or EDITOR, environment
variable, or to the string &dquot;vi&dquot; if neither of those are set.


<sect2>encode&lowbar;from<label id="encode_from">
<p>
Type: boolean<newline>
Default: no

<p>
When <em>set</em>, mutt will quoted-printable encode messages when
they contain the string &dquot;From &dquot; in the beginning of a line.
Useful to avoid the tampering certain mail delivery and transport
agents tend to do with messages.


<sect2>envelope&lowbar;from<label id="envelope_from">
<p>
Type: boolean<newline>
Default: no

<p>
When <em>set</em>, mutt will try to derive the message's <em>envelope</em>
sender from the &dquot;From:&dquot; header.  Note that this information is passed 
to sendmail command using the &dquot;-f&dquot; command line switch, so don't set this
option if you are using that switch in <ref id="sendmail" name="&dollar;sendmail"> yourself,
or if the sendmail on your machine doesn't support that command
line switch.


<sect2>escape<label id="escape">
<p>
Type: string<newline>
Default: &dquot;&tilde;&dquot;

<p>
Escape character to use for functions in the builtin editor.


<sect2>fast&lowbar;reply<label id="fast_reply">
<p>
Type: boolean<newline>
Default: no

<p>
When set, the initial prompt for recipients and subject are skipped
when replying to messages, and the initial prompt for subject is
skipped when forwarding messages.
<p>
<bf>Note:</bf> this variable has no effect when the ``<ref id="autoedit" name="&dollar;autoedit">''
variable is set.


<sect2>fcc&lowbar;attach<label id="fcc_attach">
<p>
Type: boolean<newline>
Default: yes

<p>
This variable controls whether or not attachments on outgoing messages
are saved along with the main body of your message.


<sect2>fcc&lowbar;clear<label id="fcc_clear">
<p>
Type: boolean<newline>
Default: no

<p>
When this variable is set, FCCs will be stored unencrypted and
unsigned, even when the actual message is encrypted and/or
signed.
(PGP only)


<sect2>folder<label id="folder">
<p>
Type: path<newline>
Default: &dquot;&tilde;/Mail&dquot;

<p>
Specifies the default location of your mailboxes.  A `+' or `=' at the
beginning of a pathname will be expanded to the value of this
variable.  Note that if you change this variable from the default
value you need to make sure that the assignment occurs <em>before</em>
you use `+' or `=' for any other variables since expansion takes place
during the `set' command.


<sect2>folder&lowbar;format<label id="folder_format">
<p>
Type: string<newline>
Default: &dquot;&percnt;2C &percnt;t &percnt;N &percnt;F &percnt;2l &percnt;-8.8u &percnt;-8.8g &percnt;8s &percnt;d &percnt;f&dquot;

<p>
This variable allows you to customize the file browser display to your
personal taste.  This string is similar to ``<ref id="index_format" name="&dollar;index&lowbar;format">'', but has
its own set of printf()-like sequences:
<p>

<descrip>
<tag>&percnt;C  </tag>current file number
<tag>&percnt;d  </tag>date/time folder was last modified
<tag>&percnt;f  </tag>filename
<tag>&percnt;F  </tag>file permissions
<tag>&percnt;g  </tag>group name (or numeric gid, if missing)
<tag>&percnt;l  </tag>number of hard links
<tag>&percnt;N  </tag>N if folder has new mail, blank otherwise
<tag>&percnt;s  </tag>size in bytes
<tag>&percnt;t  </tag>* if the file is tagged, blank otherwise
<tag>&percnt;u  </tag>owner name (or numeric uid, if missing)
<tag>&percnt;&gt;X </tag>right justify the rest of the string and pad with character &dquot;X&dquot;
<tag>&percnt;|X </tag>pad to the end of the line with character &dquot;X&dquot;
</descrip>


<sect2>followup&lowbar;to<label id="followup_to">
<p>
Type: boolean<newline>
Default: yes

<p>
Controls whether or not the <em>Mail-Followup-To</em> header field is
generated when sending mail.  When <em>set</em>, Mutt will generate this
field when you are replying to a known mailing list, specified with
the ``subscribe'' or ``<ref id="lists" name="lists">'' commands.
<p>
This field has two purposes.  First, preventing you from
receiving duplicate copies of replies to messages which you send
to mailing lists, and second, ensuring that you do get a reply
separately for any messages sent to known lists to which you are
not subscribed.  The header will contain only the list's address
for subscribed lists, and both the list address and your own
email address for unsubscribed lists.  Without this header, a
group reply to your message sent to a subscribed list will be
sent to both the list and your address, resulting in two copies
of the same email for you.


<sect2>force&lowbar;name<label id="force_name">
<p>
Type: boolean<newline>
Default: no

<p>
This variable is similar to ``<ref id="save_name" name="&dollar;save&lowbar;name">'', except that Mutt will
store a copy of your outgoing message by the username of the address
you are sending to even if that mailbox does not exist.
<p>
Also see the ``<ref id="record" name="&dollar;record">'' variable.


<sect2>forward&lowbar;decode<label id="forward_decode">
<p>
Type: boolean<newline>
Default: yes

<p>
Controls the decoding of complex MIME messages into text/plain when
forwarding a message.  The message header is also RFC2047 decoded.
This variable is only used, if ``<ref id="mime_forward" name="&dollar;mime&lowbar;forward">'' is <em>unset</em>,
otherwise ``<ref id="mime_forward_decode" name="&dollar;mime&lowbar;forward&lowbar;decode">'' is used instead.


<sect2>forward&lowbar;edit<label id="forward_edit">
<p>
Type: quadoption<newline>
Default: yes

<p>
This quadoption controls whether or not the user is automatically
placed in the editor when forwarding messages.  For those who always want
to forward with no modification, use a setting of ``no''.


<sect2>forward&lowbar;format<label id="forward_format">
<p>
Type: string<newline>
Default: &dquot;&lsqb;&percnt;a: &percnt;s&rsqb;&dquot;

<p>
This variable controls the default subject when forwarding a message.
It uses the same format sequences as the ``<ref id="index_format" name="&dollar;index&lowbar;format">'' variable.


<sect2>forward&lowbar;quote<label id="forward_quote">
<p>
Type: boolean<newline>
Default: no

<p>
When <em>set</em> forwarded messages included in the main body of the
message (when ``<ref id="mime_forward" name="&dollar;mime&lowbar;forward">'' is <em>unset</em>) will be quoted using
``<ref id="indent_string" name="&dollar;indent&lowbar;string">''.


<sect2>from<label id="from">
<p>
Type: e-mail address<newline>
Default: &dquot;&dquot;

<p>
When set, this variable contains a default from address.  It
can be overridden using my&lowbar;hdr (including from send-hooks) and
``<ref id="reverse_name" name="&dollar;reverse&lowbar;name">''.  This variable is ignored if ``<ref id="use_from" name="&dollar;use&lowbar;from">''
is unset.
<p>
Defaults to the contents of the environment variable EMAIL.


<sect2>gecos&lowbar;mask<label id="gecos_mask">
<p>
Type: regular expression<newline>
Default: &dquot;^&lsqb;^,&rsqb;*&dquot;

<p>
A regular expression used by mutt to parse the GECOS field of a password
entry when expanding the alias.  By default the regular expression is set
to &dquot;^&lsqb;^,&rsqb;*&dquot; which will return the string up to the first &dquot;,&dquot; encountered.
If the GECOS field contains a string like &dquot;lastname, firstname&dquot; then you
should set the gecos&lowbar;mask=&dquot;.*&dquot;.
<p>
This can be useful if you see the following behavior: you address a e-mail
to user ID stevef whose full name is Steve Franklin.  If mutt expands 
stevef to &dquot;Franklin&dquot; stevef@foo.bar then you should set the gecos&lowbar;mask to
a regular expression that will match the whole name so mutt will expand
&dquot;Franklin&dquot; to &dquot;Franklin, Steve&dquot;.


<sect2>hdrs<label id="hdrs">
<p>
Type: boolean<newline>
Default: yes

<p>
When unset, the header fields normally added by the ``<ref id="my_hdr" name="my&lowbar;hdr">''
command are not created.  This variable <em>must</em> be unset before
composing a new message or replying in order to take effect.  If set,
the user defined header fields are added to every new message.


<sect2>header<label id="header">
<p>
Type: boolean<newline>
Default: no

<p>
When set, this variable causes Mutt to include the header
of the message you are replying to into the edit buffer.
The ``<ref id="weed" name="&dollar;weed">'' setting applies.


<sect2>help<label id="help">
<p>
Type: boolean<newline>
Default: yes

<p>
When set, help lines describing the bindings for the major functions
provided by each menu are displayed on the first line of the screen.
<p>
<bf>Note:</bf> The binding will not be displayed correctly if the
function is bound to a sequence rather than a single keystroke.  Also,
the help line may not be updated if a binding is changed while Mutt is
running.  Since this variable is primarily aimed at new users, neither
of these should present a major problem.


<sect2>hidden&lowbar;host<label id="hidden_host">
<p>
Type: boolean<newline>
Default: no

<p>
When set, mutt will skip the host name part of ``<ref id="hostname" name="&dollar;hostname">'' variable
when adding the domain part to addresses.  This variable does not
affect the generation of Message-IDs, and it will not lead to the 
cut-off of first-level domains.


<sect2>hide&lowbar;limited<label id="hide_limited">
<p>
Type: boolean<newline>
Default: no

<p>
When set, mutt will not show the presence of messages that are hidden
by limiting, in the thread tree.


<sect2>hide&lowbar;missing<label id="hide_missing">
<p>
Type: boolean<newline>
Default: yes

<p>
When set, mutt will not show the presence of missing messages in the
thread tree.


<sect2>hide&lowbar;top&lowbar;limited<label id="hide_top_limited">
<p>
Type: boolean<newline>
Default: no

<p>
When set, mutt will not show the presence of messages that are hidden
by limiting, at the top of threads in the thread tree.  Note that when
<ref id="hide_missing" name="&dollar;hide&lowbar;missing"> is set, this option will have no effect.


<sect2>hide&lowbar;top&lowbar;missing<label id="hide_top_missing">
<p>
Type: boolean<newline>
Default: yes

<p>
When set, mutt will not show the presence of missing messages at the
top of threads in the thread tree.  Note that when <ref id="hide_limited" name="&dollar;hide&lowbar;limited"> is
set, this option will have no effect.


<sect2>history<label id="history">
<p>
Type: number<newline>
Default: 10

<p>
This variable controls the size (in number of strings remembered) of
the string history buffer. The buffer is cleared each time the
variable is set.


<sect2>honor&lowbar;followup&lowbar;to<label id="honor_followup_to">
<p>
Type: quadoption<newline>
Default: yes

<p>
This variable controls whether or not a Mail-Followup-To header is
honored when group-replying to a message.


<sect2>hostname<label id="hostname">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
Specifies the hostname to use after the ``@'' in local e-mail
addresses.  This overrides the compile time definition obtained from
/etc/resolv.conf.


<sect2>ignore&lowbar;list&lowbar;reply&lowbar;to<label id="ignore_list_reply_to">
<p>
Type: boolean<newline>
Default: no

<p>
Affects the behaviour of the <em>reply</em> function when replying to
messages from mailing lists.  When set, if the ``Reply-To:'' field is
set to the same value as the ``To:'' field, Mutt assumes that the
``Reply-To:'' field was set by the mailing list to automate responses
to the list, and will ignore this field.  To direct a response to the
mailing list when this option is set, use the <em>list-reply</em>
function; <em>group-reply</em> will reply to both the sender and the
list.


<sect2>imap&lowbar;authenticators<label id="imap_authenticators">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This is a colon-delimited list of authentication methods mutt may
attempt to use to log in to an IMAP server, in the order mutt should
try them.  Authentication methods are either 'login' or the right
side of an IMAP 'AUTH=xxx' capability string, eg 'digest-md5',
'gssapi' or 'cram-md5'. This parameter is case-insensitive. If this
parameter is unset (the default) mutt will try all available methods,
in order from most-secure to least-secure.
<p>
Example: set imap&lowbar;authenticators=&dquot;gssapi:cram-md5:login&dquot;
<p>
<bf>Note:</bf> Mutt will only fall back to other authentication methods if
the previous methods are unavailable. If a method is available but
authentication fails, mutt will not connect to the IMAP server.


<sect2>imap&lowbar;delim&lowbar;chars<label id="imap_delim_chars">
<p>
Type: string<newline>
Default: &dquot;/.&dquot;

<p>
This contains the list of characters which you would like to treat
as folder separators for displaying IMAP paths. In particular it
helps in using the '=' shortcut for your <em>folder</em> variable.


<sect2>imap&lowbar;force&lowbar;ssl<label id="imap_force_ssl">
<p>
Type: boolean<newline>
Default: no

<p>
If this variable is set, Mutt will always use SSL when
connecting to IMAP servers.


<sect2>imap&lowbar;home&lowbar;namespace<label id="imap_home_namespace">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
You normally want to see your personal folders alongside
your INBOX in the IMAP browser. If you see something else, you may set
this variable to the IMAP path to your folders.


<sect2>imap&lowbar;keepalive<label id="imap_keepalive">
<p>
Type: number<newline>
Default: 900

<p>
This variable specifies the maximum amount of time in seconds that mutt
will wait before polling open IMAP connections, to prevent the server
from closing them before mutt has finished with them. The default is
well within the RFC-specified minimum amount of time (30 minutes) before
a server is allowed to do this, but in practice the RFC does get
violated every now and then. Reduce this number if you find yourself
getting disconnected from your IMAP server due to inactivity.


<sect2>imap&lowbar;list&lowbar;subscribed<label id="imap_list_subscribed">
<p>
Type: boolean<newline>
Default: no

<p>
This variable configures whether IMAP folder browsing will look for
only subscribed folders or all folders.  This can be toggled in the
IMAP browser with the <em>toggle-subscribed</em> function.


<sect2>imap&lowbar;pass<label id="imap_pass">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
Specifies the password for your IMAP account.  If unset, Mutt will
prompt you for your password when you invoke the fetch-mail function.
<bf>Warning</bf>: you should only use this option when you are on a
fairly secure machine, because the superuser can read your muttrc even
if you are the only one who can read the file.


<sect2>imap&lowbar;passive<label id="imap_passive">
<p>
Type: boolean<newline>
Default: yes

<p>
When set, mutt will not open new IMAP connections to check for new
mail.  Mutt will only check for new mail over existing IMAP
connections.  This is useful if you don't want to be prompted to
user/password pairs on mutt invocation, or if opening the connection
is slow.


<sect2>imap&lowbar;peek<label id="imap_peek">
<p>
Type: boolean<newline>
Default: yes

<p>
If set, mutt will avoid implicitly marking your mail as read whenever
you fetch a message from the server. This is generally a good thing,
but can make closing an IMAP folder somewhat slower. This option
exists to appease speed freaks.


<sect2>imap&lowbar;servernoise<label id="imap_servernoise">
<p>
Type: boolean<newline>
Default: yes

<p>
When set, mutt will display warning messages from the IMAP
server as error messages. Since these messages are often
harmless, or generated due to configuration problems on the
server which are out of the users' hands, you may wish to suppress
them at some point.


<sect2>imap&lowbar;user<label id="imap_user">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
Your login name on the IMAP server.
<p>
This variable defaults to your user name on the local machine.


<sect2>implicit&lowbar;autoview<label id="implicit_autoview">
<p>
Type: boolean<newline>
Default: no

<p>
If set to ``yes'', mutt will look for a mailcap entry with the
copiousoutput flag set for <em>every</em> MIME attachment it doesn't have
an internal viewer defined for.  If such an entry is found, mutt will
use the viewer defined in that entry to convert the body part to text
form.


<sect2>include<label id="include">
<p>
Type: quadoption<newline>
Default: ask-yes

<p>
Controls whether or not a copy of the message(s) you are replying to
is included in your reply.


<sect2>indent&lowbar;string<label id="indent_string">
<p>
Type: string<newline>
Default: &dquot;&gt; &dquot;

<p>
Specifies the string to prepend to each line of text quoted in a
message to which you are replying.  You are strongly encouraged not to
change this value, as it tends to agitate the more fanatical netizens.


<sect2>index&lowbar;format<label id="index_format">
<p>
Type: string<newline>
Default: &dquot;&percnt;4C &percnt;Z &percnt;{&percnt;b &percnt;d} &percnt;-15.15L (&percnt;?l?&percnt;4l&amp;&percnt;4c?) &percnt;s&dquot;

<p>
This variable allows you to customize the message index display to
your personal taste.
<p>
``Format strings'' are similar to the strings used in the ``C''
function printf to format output (see the man page for more detail).
The following sequences are defined in Mutt:
<p>

<descrip>
<tag>&percnt;a </tag>address of the author
<tag>&percnt;A </tag>reply-to address (if present; otherwise: address of author)
<tag>&percnt;b </tag>filename of the original message folder (think mailBox)
<tag>&percnt;B </tag>the list to which the letter was sent, or else the folder name (&percnt;b).
<tag>&percnt;c </tag>number of characters (bytes) in the message
<tag>&percnt;C </tag>current message number
<tag>&percnt;d </tag>date and time of the message in the format specified by
``date&lowbar;format'' converted to sender's time zone
<tag>&percnt;D </tag>date and time of the message in the format specified by
``date&lowbar;format'' converted to the local time zone
<tag>&percnt;e </tag>current message number in thread
<tag>&percnt;E </tag>number of messages in current thread
<tag>&percnt;f </tag>entire From: line (address + real name)
<tag>&percnt;F </tag>author name, or recipient name if the message is from you
<tag>&percnt;i </tag>message-id of the current message
<tag>&percnt;l </tag>number of lines in the message (does not work with maildir,
mh, and possibly IMAP folders)
<tag>&percnt;L </tag>If an address in the To or CC header field matches an address
defined by the users ``subscribe'' command, this displays
&dquot;To &lt;list-name&gt;&dquot;, otherwise the same as &percnt;F.
<tag>&percnt;m </tag>total number of message in the mailbox
<tag>&percnt;M </tag>number of hidden messages if the thread is collapsed.
<tag>&percnt;N </tag>message score
<tag>&percnt;n </tag>author's real name (or address if missing)
<tag>&percnt;O </tag>(&lowbar;O&lowbar;riginal save folder)  Where mutt would formerly have
stashed the message: list name or recipient name if no list
<tag>&percnt;s </tag>subject of the message
<tag>&percnt;S </tag>status of the message (N/D/d/!/r/*)
<tag>&percnt;t </tag>`to:' field (recipients)
<tag>&percnt;T </tag>the appropriate character from the <ref id="to_chars" name="&dollar;to&lowbar;chars"> string
<tag>&percnt;u </tag>user (login) name of the author
<tag>&percnt;v </tag>first name of the author, or the recipient if the message is from you
<tag>&percnt;y </tag>`x-label:' field, if present
<tag>&percnt;Y </tag>`x-label' field, if present, and (1) not at part of a thread tree,
(2) at the top of a thread, or (3) `x-label' is different from
preceding message's `x-label'.
<tag>&percnt;Z </tag>message status flags
<tag>&percnt;{fmt} </tag>the date and time of the message is converted to sender's
time zone, and ``fmt'' is expanded by the library function
``strftime''; a leading bang disables locales
<tag>&percnt;&lsqb;fmt&rsqb; </tag>the date and time of the message is converted to the local
time zone, and ``fmt'' is expanded by the library function
``strftime''; a leading bang disables locales
<tag>&percnt;(fmt) </tag>the local date and time when the message was received.
``fmt'' is expanded by the library function ``strftime'';
a leading bang disables locales
<tag>&percnt;&lt;fmt&gt; </tag>the current local time. ``fmt'' is expanded by the library
function ``strftime''; a leading bang disables locales.
<tag>&percnt;&gt;X    </tag>right justify the rest of the string and pad with character &dquot;X&dquot;
<tag>&percnt;|X    </tag>pad to the end of the line with character &dquot;X&dquot;
</descrip>

<p>
See also: ``<ref id="to_chars" name="&dollar;to&lowbar;chars">''.


<sect2>ispell<label id="ispell">
<p>
Type: path<newline>
Default: &dquot;/usr/bin/ispell&dquot;

<p>
How to invoke ispell (GNU's spell-checking software).


<sect2>keep&lowbar;flagged<label id="keep_flagged">
<p>
Type: boolean<newline>
Default: no

<p>
If set, read messages marked as flagged will not be moved
from your spool mailbox to your ``<ref id="mbox" name="&dollar;mbox">'' mailbox, or as a result of
a ``<ref id="mbox-hook" name="mbox-hook">'' command.


<sect2>locale<label id="locale">
<p>
Type: string<newline>
Default: &dquot;C&dquot;

<p>
The locale used by <em>strftime(3)</em> to format dates. Legal values are
the strings your system accepts for the locale variable <em>LC&lowbar;TIME</em>.


<sect2>mail&lowbar;check<label id="mail_check">
<p>
Type: number<newline>
Default: 5

<p>
This variable configures how often (in seconds) mutt should look for
new mail.


<sect2>mailcap&lowbar;path<label id="mailcap_path">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This variable specifies which files to consult when attempting to
display MIME bodies not directly supported by Mutt.


<sect2>mailcap&lowbar;sanitize<label id="mailcap_sanitize">
<p>
Type: boolean<newline>
Default: yes

<p>
If set, mutt will restrict possible characters in mailcap &percnt; expandos
to a well-defined set of safe characters.  This is the safe setting,
but we are not sure it doesn't break some more advanced MIME stuff.
<p>
<bf>DON'T CHANGE THIS SETTING UNLESS YOU ARE REALLY SURE WHAT YOU ARE
DOING!</bf>


<sect2>maildir&lowbar;trash<label id="maildir_trash">
<p>
Type: boolean<newline>
Default: no

<p>
If set, messages marked as deleted will be saved with the maildir
(T)rashed flag instead of unlinked.  <bf>NOTE:</bf> this only applies
to maildir-style mailboxes.  Setting it will have no effect on other
mailbox types.


<sect2>mark&lowbar;old<label id="mark_old">
<p>
Type: boolean<newline>
Default: yes

<p>
Controls whether or not mutt marks <em>new</em> <bf>unread</bf>
messages as <em>old</em> if you exit a mailbox without reading them.
With this option set, the next time you start mutt, the messages
will show up with an &dquot;O&dquot; next to them in the index menu,
indicating that they are old.


<sect2>markers<label id="markers">
<p>
Type: boolean<newline>
Default: yes

<p>
Controls the display of wrapped lines in the internal pager. If set, a
``+'' marker is displayed at the beginning of wrapped lines. Also see
the ``<ref id="smart_wrap" name="&dollar;smart&lowbar;wrap">'' variable.


<sect2>mask<label id="mask">
<p>
Type: regular expression<newline>
Default: &dquot;!^&bsol;.&lsqb;^.&rsqb;&dquot;

<p>
A regular expression used in the file browser, optionally preceded by
the <em>not</em> operator ``!''.  Only files whose names match this mask
will be shown. The match is always case-sensitive.


<sect2>mbox<label id="mbox">
<p>
Type: path<newline>
Default: &dquot;&tilde;/mbox&dquot;

<p>
This specifies the folder into which read mail in your ``<ref id="spoolfile" name="&dollar;spoolfile">''
folder will be appended.


<sect2>mbox&lowbar;type<label id="mbox_type">
<p>
Type: folder magic<newline>
Default: mbox

<p>
The default mailbox type used when creating new folders. May be any of
mbox, MMDF, MH and Maildir.


<sect2>metoo<label id="metoo">
<p>
Type: boolean<newline>
Default: no

<p>
If unset, Mutt will remove your address (see the ``alternates''
command) from the list of recipients when replying to a message.


<sect2>menu&lowbar;scroll<label id="menu_scroll">
<p>
Type: boolean<newline>
Default: no

<p>
When <em>set</em>, menus will be scrolled up or down one line when you
attempt to move across a screen boundary.  If <em>unset</em>, the screen
is cleared and the next or previous page of the menu is displayed
(useful for slow links to avoid many redraws).


<sect2>meta&lowbar;key<label id="meta_key">
<p>
Type: boolean<newline>
Default: no

<p>
If set, forces Mutt to interpret keystrokes with the high bit (bit 8)
set as if the user had pressed the ESC key and whatever key remains
after having the high bit removed.  For example, if the key pressed
has an ASCII value of 0xf4, then this is treated as if the user had
pressed ESC then ``x''.  This is because the result of removing the
high bit from ``0xf4'' is ``0x74'', which is the ASCII character
``x''.


<sect2>mh&lowbar;purge<label id="mh_purge">
<p>
Type: boolean<newline>
Default: no

<p>
When unset, mutt will mimic mh's behaviour and rename deleted messages
to <em>,&lt;old file name&gt;</em> in mh folders instead of really deleting
them.  If the variable is set, the message files will simply be
deleted.


<sect2>mh&lowbar;seq&lowbar;flagged<label id="mh_seq_flagged">
<p>
Type: string<newline>
Default: &dquot;flagged&dquot;

<p>
The name of the MH sequence used for flagged messages.


<sect2>mh&lowbar;seq&lowbar;replied<label id="mh_seq_replied">
<p>
Type: string<newline>
Default: &dquot;replied&dquot;

<p>
The name of the MH sequence used to tag replied messages.


<sect2>mh&lowbar;seq&lowbar;unseen<label id="mh_seq_unseen">
<p>
Type: string<newline>
Default: &dquot;unseen&dquot;

<p>
The name of the MH sequence used for unseen messages.


<sect2>mime&lowbar;forward<label id="mime_forward">
<p>
Type: quadoption<newline>
Default: no

<p>
When set, the message you are forwarding will be attached as a
separate MIME part instead of included in the main body of the
message.  This is useful for forwarding MIME messages so the receiver
can properly view the message as it was delivered to you. If you like
to switch between MIME and not MIME from mail to mail, set this
variable to ask-no or ask-yes.
<p>
Also see ``<ref id="forward_decode" name="&dollar;forward&lowbar;decode">'' and ``<ref id="mime_forward_decode" name="&dollar;mime&lowbar;forward&lowbar;decode">''.


<sect2>mime&lowbar;forward&lowbar;decode<label id="mime_forward_decode">
<p>
Type: boolean<newline>
Default: no

<p>
Controls the decoding of complex MIME messages into text/plain when
forwarding a message while ``<ref id="mime_forward" name="&dollar;mime&lowbar;forward">'' is <em>set</em>. Otherwise
``<ref id="forward_decode" name="&dollar;forward&lowbar;decode">'' is used instead.


<sect2>mime&lowbar;forward&lowbar;rest<label id="mime_forward_rest">
<p>
Type: quadoption<newline>
Default: yes

<p>
When forwarding multiple attachments of a MIME message from the recvattach
menu, attachments which cannot be decoded in a reasonable manner will
be attached to the newly composed message if this option is set.


<sect2>mix&lowbar;entry&lowbar;format<label id="mix_entry_format">
<p>
Type: string<newline>
Default: &dquot;&percnt;4n &percnt;c &percnt;-16s &percnt;a&dquot;

<p>
This variable describes the format of a remailer line on the mixmaster
chain selection screen.  The following printf-like sequences are 
supported:
<p>

<descrip>
<tag>&percnt;n </tag>The running number on the menu.
<tag>&percnt;c </tag>Remailer capabilities.
<tag>&percnt;s </tag>The remailer's short name.
<tag>&percnt;a </tag>The remailer's e-mail address.
</descrip>


<sect2>mixmaster<label id="mixmaster">
<p>
Type: path<newline>
Default: &dquot;mixmaster&dquot;

<p>
This variable contains the path to the Mixmaster binary on your
system.  It is used with various sets of parameters to gather the
list of known remailers, and to finally send a message through the
mixmaster chain.


<sect2>move<label id="move">
<p>
Type: quadoption<newline>
Default: ask-no

<p>
Controls whether you will be asked to confirm moving read messages
from your spool mailbox to your ``<ref id="mbox" name="&dollar;mbox">'' mailbox, or as a result of
a ``<ref id="mbox-hook" name="mbox-hook">'' command.


<sect2>message&lowbar;format<label id="message_format">
<p>
Type: string<newline>
Default: &dquot;&percnt;s&dquot;

<p>
This is the string displayed in the ``attachment'' menu for
attachments of type message/rfc822.  For a full listing of defined
printf()-like sequences see the section on ``<ref id="index_format" name="&dollar;index&lowbar;format">''.


<sect2>narrow&lowbar;tree<label id="narrow_tree">
<p>
Type: boolean<newline>
Default: no

<p>
This variable, when set, makes the thread tree narrower, allowing
deeper threads to fit on the screen.


<sect2>pager<label id="pager">
<p>
Type: path<newline>
Default: &dquot;builtin&dquot;

<p>
This variable specifies which pager you would like to use to view
messages.  builtin means to use the builtin pager, otherwise this
variable should specify the pathname of the external pager you would
like to use.
<p>
Using an external pager may have some disadvantages: Additional
keystrokes are necessary because you can't call mutt functions
directly from the pager, and screen resizes cause lines longer than
the screen width to be badly formatted in the help menu.


<sect2>pager&lowbar;context<label id="pager_context">
<p>
Type: number<newline>
Default: 0

<p>
This variable controls the number of lines of context that are given
when displaying the next or previous page in the internal pager.  By
default, Mutt will display the line after the last one on the screen
at the top of the next page (0 lines of context).


<sect2>pager&lowbar;format<label id="pager_format">
<p>
Type: string<newline>
Default: &dquot;-&percnt;Z- &percnt;C/&percnt;m: &percnt;-20.20n   &percnt;s&dquot;

<p>
This variable controls the format of the one-line message ``status''
displayed before each message in either the internal or an external
pager.  The valid sequences are listed in the ``<ref id="index_format" name="&dollar;index&lowbar;format">''
section.


<sect2>pager&lowbar;index&lowbar;lines<label id="pager_index_lines">
<p>
Type: number<newline>
Default: 0

<p>
Determines the number of lines of a mini-index which is shown when in
the pager.  The current message, unless near the top or bottom of the
folder, will be roughly one third of the way down this mini-index,
giving the reader the context of a few messages before and after the
message.  This is useful, for example, to determine how many messages
remain to be read in the current thread.  One of the lines is reserved
for the status bar from the index, so a <em>pager&lowbar;index&lowbar;lines</em> of 6
will only show 5 lines of the actual index.  A value of 0 results in
no index being shown.  If the number of messages in the current folder
is less than <em>pager&lowbar;index&lowbar;lines</em>, then the index will only use as
many lines as it needs.


<sect2>pager&lowbar;stop<label id="pager_stop">
<p>
Type: boolean<newline>
Default: no

<p>
When set, the internal-pager will <bf>not</bf> move to the next message
when you are at the end of a message and invoke the <em>next-page</em>
function.


<sect2>crypt&lowbar;autosign<label id="crypt_autosign">
<p>
Type: boolean<newline>
Default: no

<p>
Setting this variable will cause Mutt to always attempt to
cryptographically sign outgoing messages.  This can be overridden
by use of the <em>pgp-menu</em>, when signing is not required or
encryption is requested as well. If ``<ref id="smime_is_default" name="&dollar;smime&lowbar;is&lowbar;default">'' is set,
then OpenSSL is used instead to create S/MIME messages and settings can
be overridden by use of the <em>smime-menu</em>.
(Crypto only)


<sect2>crypt&lowbar;autoencrypt<label id="crypt_autoencrypt">
<p>
Type: boolean<newline>
Default: no

<p>
Setting this variable will cause Mutt to always attempt to PGP
encrypt outgoing messages.  This is probably only useful in
connection to the <em>send-hook</em> command.  It can be overridden
by use of the <em>pgp-menu</em>, when encryption is not required or
signing is requested as well.  IF ``<ref id="smime_is_default" name="&dollar;smime&lowbar;is&lowbar;default">'' is set,
then OpenSSL is used instead to create S/MIME messages and
settings can be overridden by use of the <em>smime-menu</em>.
(Crypto only)


<sect2>pgp&lowbar;ignore&lowbar;subkeys<label id="pgp_ignore_subkeys">
<p>
Type: boolean<newline>
Default: yes

<p>
Setting this variable will cause Mutt to ignore OpenPGP subkeys. Instead,
the principal key will inherit the subkeys' capabilities.  Unset this
if you want to play interesting key selection games.
(PGP only)


<sect2>crypt&lowbar;replyencrypt<label id="crypt_replyencrypt">
<p>
Type: boolean<newline>
Default: yes

<p>
If set, automatically PGP or OpenSSL encrypt replies to messages which are
encrypted.
(Crypto only)


<sect2>crypt&lowbar;replysign<label id="crypt_replysign">
<p>
Type: boolean<newline>
Default: no

<p>
If set, automatically PGP or OpenSSL sign replies to messages which are
signed.
<p>
<bf>Note:</bf> this does not work on messages that are encrypted
<bf>and</bf> signed!
(Crypto only)


<sect2>crypt&lowbar;replysignencrypted<label id="crypt_replysignencrypted">
<p>
Type: boolean<newline>
Default: no

<p>
If set, automatically PGP or OpenSSL sign replies to messages
which are encrypted. This makes sense in combination with
``<ref id="crypt_replyencrypt" name="&dollar;crypt&lowbar;replyencrypt">'', because it allows you to sign all
messages which are automatically encrypted.  This works around
the problem noted in ``<ref id="crypt_replysign" name="&dollar;crypt&lowbar;replysign">'', that mutt is not able
to find out whether an encrypted message is also signed.
(Crypto only)


<sect2>crypt&lowbar;timestamp<label id="crypt_timestamp">
<p>
Type: boolean<newline>
Default: yes

<p>
If set, mutt will include a time stamp in the lines surrounding
PGP or S/MIME output, so spoofing such lines is more difficult.
If you are using colors to mark these lines, and rely on these,
you may unset this setting.
(Crypto only)


<sect2>pgp&lowbar;use&lowbar;gpg&lowbar;agent<label id="pgp_use_gpg_agent">
<p>
Type: boolean<newline>
Default: no

<p>
If set, mutt will use a possibly-running gpg-agent process.
(PGP only)


<sect2>crypt&lowbar;verify&lowbar;sig<label id="crypt_verify_sig">
<p>
Type: quadoption<newline>
Default: yes

<p>
If ``yes'', always attempt to verify PGP or S/MIME signatures.
If ``ask'', ask whether or not to verify the signature. 
If ``no'', never attempt to verify cryptographic signatures.
(Crypto only)


<sect2>smime&lowbar;is&lowbar;default<label id="smime_is_default">
<p>
Type: boolean<newline>
Default: no

<p>
The default behaviour of mutt is to use PGP on all auto-sign/encryption
operations. To override and to use OpenSSL instead this must be set.
However, this has no effect while replying, since mutt will automatically 
select the same application that was used to sign/encrypt the original
message.  (Note that this variable can be overridden by unsetting <ref id="crypt_autosmime" name="&dollar;crypt&lowbar;autosmime">.)
(S/MIME only)


<sect2>smime&lowbar;ask&lowbar;cert&lowbar;label<label id="smime_ask_cert_label">
<p>
Type: boolean<newline>
Default: yes

<p>
This flag controls whether you want to be asked to enter a label
for a certificate about to be added to the database or not. It is
set by default.
(S/MIME only)


<sect2>smime&lowbar;decrypt&lowbar;use&lowbar;default&lowbar;key<label id="smime_decrypt_use_default_key">
<p>
Type: boolean<newline>
Default: yes

<p>
If set (default) this tells mutt to use the default key for decryption. Otherwise,
if manage multiple certificate-key-pairs, mutt will try to use the mailbox-address
to determine the key to use. It will ask you to supply a key, if it can't find one.
(S/MIME only)


<sect2>pgp&lowbar;entry&lowbar;format<label id="pgp_entry_format">
<p>
Type: string<newline>
Default: &dquot;&percnt;4n &percnt;t&percnt;f &percnt;4l/0x&percnt;k &percnt;-4a &percnt;2c &percnt;u&dquot;

<p>
This variable allows you to customize the PGP key selection menu to
your personal taste. This string is similar to ``<ref id="index_format" name="&dollar;index&lowbar;format">'', but
has its own set of printf()-like sequences:
<p>

<descrip>
<tag>&percnt;n     </tag>number
<tag>&percnt;k     </tag>key id
<tag>&percnt;u     </tag>user id
<tag>&percnt;a     </tag>algorithm
<tag>&percnt;l     </tag>key length
<tag>&percnt;f     </tag>flags
<tag>&percnt;c     </tag>capabilities
<tag>&percnt;t     </tag>trust/validity of the key-uid association
<tag>&percnt;&lsqb;&lt;s&gt;&rsqb; </tag>date of the key where &lt;s&gt; is an strftime(3) expression
</descrip>

<p>
(PGP only)


<sect2>pgp&lowbar;good&lowbar;sign<label id="pgp_good_sign">
<p>
Type: regular expression<newline>
Default: &dquot;&dquot;

<p>
If you assign a text to this variable, then a PGP signature is only
considered verified if the output from <ref id="pgp_verify_command" name="&dollar;pgp&lowbar;verify&lowbar;command"> contains
the text. Use this variable if the exit code from the command is 0
even for bad signatures.
(PGP only)


<sect2>pgp&lowbar;check&lowbar;exit<label id="pgp_check_exit">
<p>
Type: boolean<newline>
Default: yes

<p>
If set, mutt will check the exit code of the PGP subprocess when
signing or encrypting.  A non-zero exit code means that the
subprocess failed.
(PGP only)


<sect2>pgp&lowbar;long&lowbar;ids<label id="pgp_long_ids">
<p>
Type: boolean<newline>
Default: no

<p>
If set, use 64 bit PGP key IDs. Unset uses the normal 32 bit Key IDs.
(PGP only)


<sect2>pgp&lowbar;retainable&lowbar;sigs<label id="pgp_retainable_sigs">
<p>
Type: boolean<newline>
Default: no

<p>
If set, signed and encrypted messages will consist of nested
multipart/signed and multipart/encrypted body parts.
<p>
This is useful for applications like encrypted and signed mailing
lists, where the outer layer (multipart/encrypted) can be easily
removed, while the inner multipart/signed part is retained.
(PGP only)


<sect2>pgp&lowbar;show&lowbar;unusable<label id="pgp_show_unusable">
<p>
Type: boolean<newline>
Default: yes

<p>
If set, mutt will display non-usable keys on the PGP key selection
menu.  This includes keys which have been revoked, have expired, or
have been marked as ``disabled'' by the user.
(PGP only)


<sect2>pgp&lowbar;sign&lowbar;as<label id="pgp_sign_as">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
If you have more than one key pair, this option allows you to specify
which of your private keys to use.  It is recommended that you use the
keyid form to specify your key (e.g., ``0x00112233'').
(PGP only)


<sect2>pgp&lowbar;strict&lowbar;enc<label id="pgp_strict_enc">
<p>
Type: boolean<newline>
Default: yes

<p>
If set, Mutt will automatically encode PGP/MIME signed messages as
<em>quoted-printable</em>.  Please note that unsetting this variable may
lead to problems with non-verifyable PGP signatures, so only change
this if you know what you are doing.
(PGP only)


<sect2>pgp&lowbar;timeout<label id="pgp_timeout">
<p>
Type: number<newline>
Default: 300

<p>
The number of seconds after which a cached passphrase will expire if
not used.
(PGP only)


<sect2>pgp&lowbar;sort&lowbar;keys<label id="pgp_sort_keys">
<p>
Type: sort order<newline>
Default: address

<p>
Specifies how the entries in the `pgp keys' menu are sorted. The
following are legal values:
<p>

<descrip>
<tag>address </tag>sort alphabetically by user id
<tag>keyid   </tag>sort alphabetically by key id
<tag>date    </tag>sort by key creation date
<tag>trust   </tag>sort by the trust of the key
</descrip>

<p>
If you prefer reverse order of the above values, prefix it with
`reverse-'.
(PGP only)


<sect2>pgp&lowbar;create&lowbar;traditional<label id="pgp_create_traditional">
<p>
Type: quadoption<newline>
Default: no

<p>
This option controls whether Mutt generates old-style inline PGP
encrypted or signed messages.
<p>
Note that PGP/MIME will be used automatically for messages which have
a character set different from us-ascii, or which consist of more than
a single MIME part.
<p>
Also note that using the old-style PGP message format is <bf>strongly</bf>
<bf>deprecated</bf>.
(PGP only)


<sect2>pgp&lowbar;auto&lowbar;traditional<label id="pgp_auto_traditional">
<p>
Type: boolean<newline>
Default: no

<p>
This option causes Mutt to generate an old-style inline PGP
encrypted or signed message when replying to an old-style
message, and a PGP/MIME message when replying to a PGP/MIME
message.  Note that this option is only meaningful when using
``<ref id="crypt_replyencrypt" name="&dollar;crypt&lowbar;replyencrypt">'', ``<ref id="crypt_replysign" name="&dollar;crypt&lowbar;replysign">'', or
``<ref id="crypt_replysignencrypted" name="&dollar;crypt&lowbar;replysignencrypted">''.
<p>
Also note that PGP/MIME will be used automatically for messages
which have a character set different from us-ascii, or which
consist of more than a single MIME part.
<p>
This option overrides ``<ref id="pgp_create_traditional" name="&dollar;pgp&lowbar;create&lowbar;traditional">''
(PGP only)


<sect2>pgp&lowbar;decode&lowbar;command<label id="pgp_decode_command">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This format strings specifies a command which is used to decode 
application/pgp attachments.
<p>
The PGP command formats have their own set of printf-like sequences:
<p>

<descrip>
<tag>&percnt;p </tag>Expands to PGPPASSFD=0 when a pass phrase is needed, to an empty
string otherwise. Note: This may be used with a &percnt;? construct.
<tag>&percnt;f </tag>Expands to the name of a file containing a message.
<tag>&percnt;s </tag>Expands to the name of a file containing the signature part
           of a multipart/signed attachment when verifying it.
<tag>&percnt;a </tag>The value of <ref id="pgp_sign_as" name="&dollar;pgp&lowbar;sign&lowbar;as">.
<tag>&percnt;r </tag>One or more key IDs.
</descrip>

<p>
For examples on how to configure these formats for the various versions
of PGP which are floating around, see the pgp*.rc and gpg.rc files in
the samples/ subdirectory which has been installed on your system
alongside the documentation.
(PGP only)


<sect2>pgp&lowbar;getkeys&lowbar;command<label id="pgp_getkeys_command">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This command is invoked whenever mutt will need public key information.
&percnt;r is the only printf-like sequence used with this format.
(PGP only)


<sect2>pgp&lowbar;verify&lowbar;command<label id="pgp_verify_command">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This command is used to verify PGP signatures.
(PGP only)


<sect2>pgp&lowbar;decrypt&lowbar;command<label id="pgp_decrypt_command">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This command is used to decrypt a PGP encrypted message.
(PGP only)


<sect2>pgp&lowbar;clearsign&lowbar;command<label id="pgp_clearsign_command">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This format is used to create a old-style &dquot;clearsigned&dquot; PGP
message.  Note that the use of this format is <bf>strongly</bf>
<bf>deprecated</bf>.
(PGP only)


<sect2>pgp&lowbar;sign&lowbar;command<label id="pgp_sign_command">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This command is used to create the detached PGP signature for a 
multipart/signed PGP/MIME body part.
(PGP only)


<sect2>pgp&lowbar;encrypt&lowbar;sign&lowbar;command<label id="pgp_encrypt_sign_command">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This command is used to both sign and encrypt a body part.
(PGP only)


<sect2>pgp&lowbar;encrypt&lowbar;only&lowbar;command<label id="pgp_encrypt_only_command">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This command is used to encrypt a body part without signing it.
(PGP only)


<sect2>pgp&lowbar;import&lowbar;command<label id="pgp_import_command">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This command is used to import a key from a message into 
the user's public key ring.
(PGP only)


<sect2>pgp&lowbar;export&lowbar;command<label id="pgp_export_command">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This command is used to export a public key from the user's
key ring.
(PGP only)


<sect2>pgp&lowbar;verify&lowbar;key&lowbar;command<label id="pgp_verify_key_command">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This command is used to verify key information from the key selection
menu.
(PGP only)


<sect2>pgp&lowbar;list&lowbar;secring&lowbar;command<label id="pgp_list_secring_command">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This command is used to list the secret key ring's contents.  The
output format must be analogous to the one used by 
gpg --list-keys --with-colons.
<p>
This format is also generated by the pgpring utility which comes 
with mutt.
(PGP only)


<sect2>pgp&lowbar;list&lowbar;pubring&lowbar;command<label id="pgp_list_pubring_command">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This command is used to list the public key ring's contents.  The
output format must be analogous to the one used by 
gpg --list-keys --with-colons.
<p>
This format is also generated by the pgpring utility which comes 
with mutt.
(PGP only)


<sect2>forward&lowbar;decrypt<label id="forward_decrypt">
<p>
Type: boolean<newline>
Default: yes

<p>
Controls the handling of encrypted messages when forwarding a message.
When set, the outer layer of encryption is stripped off.  This
variable is only used if ``<ref id="mime_forward" name="&dollar;mime&lowbar;forward">'' is <em>set</em> and
``<ref id="mime_forward_decode" name="&dollar;mime&lowbar;forward&lowbar;decode">'' is <em>unset</em>.
(PGP only)


<sect2>smime&lowbar;timeout<label id="smime_timeout">
<p>
Type: number<newline>
Default: 300

<p>
The number of seconds after which a cached passphrase will expire if
not used.
(S/MIME only)


<sect2>smime&lowbar;encrypt&lowbar;with<label id="smime_encrypt_with">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This sets the algorithm that should be used for encryption.
Valid choices are &dquot;des&dquot;, &dquot;des3&dquot;, &dquot;rc2-40&dquot;, &dquot;rc2-64&dquot;, &dquot;rc2-128&dquot;.
If unset &dquot;3des&dquot; (TripleDES) is used.
(S/MIME only)


<sect2>smime&lowbar;keys<label id="smime_keys">
<p>
Type: path<newline>
Default: &dquot;&dquot;

<p>
Since there is no pubring/secring as with PGP, mutt has to handle
storage ad retrieval of keys/certs by itself. This is very basic right now,
and stores keys and certificates in two different directories, both
named as the hash-value retrieved from OpenSSL. There is an index file
which contains mailbox-address keyid pair, and which can be manually
edited. This one points to the location of the private keys.
(S/MIME only)


<sect2>smime&lowbar;ca&lowbar;location<label id="smime_ca_location">
<p>
Type: path<newline>
Default: &dquot;&dquot;

<p>
This variable contains the name of either a directory, or a file which
contains trusted certificates for use with OpenSSL.
(S/MIME only)


<sect2>smime&lowbar;certificates<label id="smime_certificates">
<p>
Type: path<newline>
Default: &dquot;&dquot;

<p>
Since there is no pubring/secring as with PGP, mutt has to handle
storage and retrieval of keys by itself. This is very basic right
now, and keys and certificates are stored in two different
directories, both named as the hash-value retrieved from
OpenSSL. There is an index file which contains mailbox-address
keyid pairs, and which can be manually edited. This one points to
the location of the certificates.
(S/MIME only)


<sect2>smime&lowbar;decrypt&lowbar;command<label id="smime_decrypt_command">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This format string specifies a command which is used to decrypt
application/x-pkcs7-mime attachments.
<p>
The OpenSSL command formats have their own set of printf-like sequences
similar to PGP's:
<p>

<descrip>
<tag>&percnt;f </tag>Expands to the name of a file containing a message.
<tag>&percnt;s </tag>Expands to the name of a file containing the signature part
           of a multipart/signed attachment when verifying it.
<tag>&percnt;k </tag>The key-pair specified with <ref id="smime_default_key" name="&dollar;smime&lowbar;default&lowbar;key">
<tag>&percnt;c </tag>One or more certificate IDs.
<tag>&percnt;a </tag>The algorithm used for encryption.
<tag>&percnt;C </tag>CA location:  Depending on whether <ref id="smime_ca_location" name="&dollar;smime&lowbar;ca&lowbar;location">
           points to a directory or file, this expands to 
           &dquot;-CApath <ref id="smime_ca_location" name="&dollar;smime&lowbar;ca&lowbar;location">&dquot; or &dquot;-CAfile <ref id="smime_ca_location" name="&dollar;smime&lowbar;ca&lowbar;location">&dquot;.
</descrip>

<p>
For examples on how to configure these formats, see the smime.rc in
the samples/ subdirectory which has been installed on your system
alongside the documentation.
(S/MIME only)


<sect2>smime&lowbar;verify&lowbar;command<label id="smime_verify_command">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This command is used to verify S/MIME signatures of type multipart/signed.
(S/MIME only)


<sect2>smime&lowbar;verify&lowbar;opaque&lowbar;command<label id="smime_verify_opaque_command">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This command is used to verify S/MIME signatures of type
application/x-pkcs7-mime.
(S/MIME only)


<sect2>smime&lowbar;sign&lowbar;command<label id="smime_sign_command">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This command is used to created S/MIME signatures of type
multipart/signed, which can be read by all mail clients.
(S/MIME only)


<sect2>smime&lowbar;sign&lowbar;opaque&lowbar;command<label id="smime_sign_opaque_command">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This command is used to created S/MIME signatures of type
application/x-pkcs7-signature, which can only be handled by mail
clients supporting the S/MIME extension.
(S/MIME only)


<sect2>smime&lowbar;encrypt&lowbar;command<label id="smime_encrypt_command">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This command is used to create encrypted S/MIME messages.
(S/MIME only)


<sect2>smime&lowbar;pk7out&lowbar;command<label id="smime_pk7out_command">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This command is used to extract PKCS7 structures of S/MIME signatures,
in order to extract the public X509 certificate(s).
(S/MIME only)


<sect2>smime&lowbar;get&lowbar;cert&lowbar;command<label id="smime_get_cert_command">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This command is used to extract X509 certificates from a PKCS7 structure.
(S/MIME only)


<sect2>smime&lowbar;get&lowbar;signer&lowbar;cert&lowbar;command<label id="smime_get_signer_cert_command">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This command is used to extract only the signers X509 certificate from a S/MIME
signature, so that the certificate's owner may get compared to the email's 
'From'-field.
(S/MIME only)


<sect2>smime&lowbar;import&lowbar;cert&lowbar;command<label id="smime_import_cert_command">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This command is used to import a certificate via smime&lowbar;keys.
(S/MIME only)


<sect2>smime&lowbar;get&lowbar;cert&lowbar;email&lowbar;command<label id="smime_get_cert_email_command">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This command is used to extract the mail address(es) used for storing
X509 certificates, and for verification purposes (to check whether the
certificate was issued for the sender's mailbox).
(S/MIME only)


<sect2>smime&lowbar;default&lowbar;key<label id="smime_default_key">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This is the default key-pair to use for signing. This must be set to the
keyid (the hash-value that OpenSSL generates) to work properly
(S/MIME only)


<sect2>ssl&lowbar;starttls<label id="ssl_starttls">
<p>
Type: quadoption<newline>
Default: yes

<p>
If set (the default), mutt will attempt to use STARTTLS on servers
advertising the capability. When unset, mutt will not attempt to
use STARTTLS regardless of the server's capabilities.


<sect2>certificate&lowbar;file<label id="certificate_file">
<p>
Type: path<newline>
Default: &dquot;&dquot;

<p>
This variable specifies the file where the certificates you trust
are saved. When an unknown certificate is encountered, you are asked
if you accept it or not. If you accept it, the certificate can also 
be saved in this file and further connections are automatically 
accepted.
<p>
You can also manually add CA certificates in this file. Any server
certificate that is signed with one of these CA certificates are 
also automatically accepted.
<p>
Example: set certificate&lowbar;file=&tilde;/.mutt/certificates


<sect2>ssl&lowbar;usesystemcerts<label id="ssl_usesystemcerts">
<p>
Type: boolean<newline>
Default: yes

<p>
If set to <em>yes</em>, mutt will use CA certificates in the
system-wide certificate store when checking if server certificate 
is signed by a trusted CA.


<sect2>entropy&lowbar;file<label id="entropy_file">
<p>
Type: path<newline>
Default: &dquot;&dquot;

<p>
The file which includes random data that is used to initialize SSL
library functions.


<sect2>ssl&lowbar;use&lowbar;sslv2<label id="ssl_use_sslv2">
<p>
Type: boolean<newline>
Default: yes

<p>
This variables specifies whether to attempt to use SSLv2 in the
SSL authentication process.


<sect2>ssl&lowbar;use&lowbar;sslv3<label id="ssl_use_sslv3">
<p>
Type: boolean<newline>
Default: yes

<p>
This variables specifies whether to attempt to use SSLv3 in the
SSL authentication process.


<sect2>ssl&lowbar;use&lowbar;tlsv1<label id="ssl_use_tlsv1">
<p>
Type: boolean<newline>
Default: yes

<p>
This variables specifies whether to attempt to use TLSv1 in the
SSL authentication process.


<sect2>pipe&lowbar;split<label id="pipe_split">
<p>
Type: boolean<newline>
Default: no

<p>
Used in connection with the <em>pipe-message</em> command and the ``tag-
prefix'' operator.  If this variable is unset, when piping a list of
tagged messages Mutt will concatenate the messages and will pipe them
as a single folder.  When set, Mutt will pipe the messages one by one.
In both cases the messages are piped in the current sorted order,
and the ``<ref id="pipe_sep" name="&dollar;pipe&lowbar;sep">'' separator is added after each message.


<sect2>pipe&lowbar;decode<label id="pipe_decode">
<p>
Type: boolean<newline>
Default: no

<p>
Used in connection with the <em>pipe-message</em> command.  When unset,
Mutt will pipe the messages without any preprocessing. When set, Mutt
will weed headers and will attempt to PGP/MIME decode the messages
first.


<sect2>pipe&lowbar;sep<label id="pipe_sep">
<p>
Type: string<newline>
Default: &dquot;&bsol;n&dquot;

<p>
The separator to add between messages when piping a list of tagged
messages to an external Unix command.


<sect2>pop&lowbar;authenticators<label id="pop_authenticators">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This is a colon-delimited list of authentication methods mutt may
attempt to use to log in to an POP server, in the order mutt should
try them.  Authentication methods are either 'user', 'apop' or any
SASL mechanism, eg 'digest-md5', 'gssapi' or 'cram-md5'.
This parameter is case-insensitive. If this parameter is unset
(the default) mutt will try all available methods, in order from
most-secure to least-secure.
<p>
Example: set pop&lowbar;authenticators=&dquot;digest-md5:apop:user&dquot;


<sect2>pop&lowbar;auth&lowbar;try&lowbar;all<label id="pop_auth_try_all">
<p>
Type: boolean<newline>
Default: yes

<p>
If set, Mutt will try all available methods. When unset, Mutt will
only fall back to other authentication methods if the previous
methods are unavailable. If a method is available but authentication
fails, Mutt will not connect to the POP server.


<sect2>pop&lowbar;checkinterval<label id="pop_checkinterval">
<p>
Type: number<newline>
Default: 60

<p>
This variable configures how often (in seconds) POP should look for
new mail.


<sect2>pop&lowbar;delete<label id="pop_delete">
<p>
Type: quadoption<newline>
Default: ask-no

<p>
If set, Mutt will delete successfully downloaded messages from the POP
server when using the fetch-mail function.  When unset, Mutt will
download messages but also leave them on the POP server.


<sect2>pop&lowbar;host<label id="pop_host">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
The name of your POP server for the fetch-mail function.  You
can also specify an alternative port, username and password, ie:
<p>
&lsqb;pop&lsqb;s&rsqb;://&rsqb;&lsqb;username&lsqb;:password&rsqb;@&rsqb;popserver&lsqb;:port&rsqb;


<sect2>pop&lowbar;last<label id="pop_last">
<p>
Type: boolean<newline>
Default: no

<p>
If this variable is set, mutt will try to use the &dquot;LAST&dquot; POP command
for retrieving only unread messages from the POP server when using
the fetch-mail function.


<sect2>pop&lowbar;reconnect<label id="pop_reconnect">
<p>
Type: quadoption<newline>
Default: ask-yes

<p>
Controls whether or not Mutt will try to reconnect to POP server when
connection lost.


<sect2>pop&lowbar;user<label id="pop_user">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
Your login name on the POP server.
<p>
This variable defaults to your user name on the local machine.


<sect2>pop&lowbar;pass<label id="pop_pass">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
Specifies the password for your POP account.  If unset, Mutt will
prompt you for your password when you open POP mailbox.
<bf>Warning</bf>: you should only use this option when you are on a
fairly secure machine, because the superuser can read your muttrc
even if you are the only one who can read the file.


<sect2>post&lowbar;indent&lowbar;string<label id="post_indent_string">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
Similar to the ``<ref id="attribution" name="&dollar;attribution">'' variable, Mutt will append this
string after the inclusion of a message which is being replied to.


<sect2>postpone<label id="postpone">
<p>
Type: quadoption<newline>
Default: ask-yes

<p>
Controls whether or not messages are saved in the ``<ref id="postponed" name="&dollar;postponed">''
mailbox when you elect not to send immediately.


<sect2>postponed<label id="postponed">
<p>
Type: path<newline>
Default: &dquot;&tilde;/postponed&dquot;

<p>
Mutt allows you to indefinitely ``<ref id="postpone" name="postpone"> sending a message'' which
you are editing.  When you choose to postpone a message, Mutt saves it
in the mailbox specified by this variable.  Also see the ``<ref id="postpone" name="&dollar;postpone">''
variable.


<sect2>preconnect<label id="preconnect">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
If set, a shell command to be executed if mutt fails to establish
a connection to the server. This is useful for setting up secure
connections, e.g. with ssh(1). If the command returns a  nonzero
status, mutt gives up opening the server. Example:
<p>
preconnect=&dquot;ssh -f -q -L 1234:mailhost.net:143 mailhost.net
sleep 20 &lt; /dev/null &gt; /dev/null&dquot;
<p>
Mailbox 'foo' on mailhost.net can now be reached
as '{localhost:1234}foo'.
<p>
NOTE: For this example to work, you must be able to log in to the
remote machine without having to enter a password.


<sect2>print<label id="print">
<p>
Type: quadoption<newline>
Default: ask-no

<p>
Controls whether or not Mutt asks for confirmation before printing.
This is useful for people (like me) who accidentally hit ``p'' often.


<sect2>print&lowbar;command<label id="print_command">
<p>
Type: path<newline>
Default: &dquot;lpr&dquot;

<p>
This specifies the command pipe that should be used to print messages.


<sect2>print&lowbar;decode<label id="print_decode">
<p>
Type: boolean<newline>
Default: yes

<p>
Used in connection with the print-message command.  If this
option is set, the message is decoded before it is passed to the
external command specified by <ref id="print_command" name="&dollar;print&lowbar;command">.  If this option
is unset, no processing will be applied to the message when
printing it.  The latter setting may be useful if you are using
some advanced printer filter which is able to properly format
e-mail messages for printing.


<sect2>print&lowbar;split<label id="print_split">
<p>
Type: boolean<newline>
Default: no

<p>
Used in connection with the print-message command.  If this option
is set, the command specified by <ref id="print_command" name="&dollar;print&lowbar;command"> is executed once for
each message which is to be printed.  If this option is unset, 
the command specified by <ref id="print_command" name="&dollar;print&lowbar;command"> is executed only once, and
all the messages are concatenated, with a form feed as the message
separator.
<p>
Those who use the <bf>enscript</bf>(1) program's mail-printing mode will
most likely want to set this option.


<sect2>prompt&lowbar;after<label id="prompt_after">
<p>
Type: boolean<newline>
Default: yes

<p>
If you use an <em>external</em> ``<ref id="pager" name="&dollar;pager">'', setting this variable will
cause Mutt to prompt you for a command when the pager exits rather
than returning to the index menu.  If unset, Mutt will return to the
index menu when the external pager exits.


<sect2>query&lowbar;command<label id="query_command">
<p>
Type: path<newline>
Default: &dquot;&dquot;

<p>
This specifies the command that mutt will use to make external address
queries.  The string should contain a &percnt;s, which will be substituted
with the query string the user types.  See ``<ref id="query" name="query">'' for more
information.


<sect2>quit<label id="quit">
<p>
Type: quadoption<newline>
Default: yes

<p>
This variable controls whether ``quit'' and ``exit'' actually quit
from mutt.  If it set to yes, they do quit, if it is set to no, they
have no effect, and if it is set to ask-yes or ask-no, you are
prompted for confirmation when you try to quit.


<sect2>quote&lowbar;regexp<label id="quote_regexp">
<p>
Type: regular expression<newline>
Default: &dquot;^(&lsqb; &bsol;t&rsqb;*&lsqb;|&gt;:}#&rsqb;)+&dquot;

<p>
A regular expression used in the internal-pager to determine quoted
sections of text in the body of a message.
<p>
<bf>Note:</bf> In order to use the <em>quoted</em><bf>x</bf> patterns in the
internal pager, you need to set this to a regular expression that
matches <em>exactly</em> the quote characters at the beginning of quoted
lines.


<sect2>read&lowbar;inc<label id="read_inc">
<p>
Type: number<newline>
Default: 10

<p>
If set to a value greater than 0, Mutt will display which message it
is currently on when reading a mailbox.  The message is printed after
<em>read&lowbar;inc</em> messages have been read (e.g., if set to 25, Mutt will
print a message when it reads message 25, and then again when it gets
to message 50).  This variable is meant to indicate progress when
reading large mailboxes which may take some time.
When set to 0, only a single message will appear before the reading
the mailbox.
<p>
Also see the ``<ref id="write_inc" name="&dollar;write&lowbar;inc">'' variable.


<sect2>read&lowbar;only<label id="read_only">
<p>
Type: boolean<newline>
Default: no

<p>
If set, all folders are opened in read-only mode.


<sect2>realname<label id="realname">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
This variable specifies what &dquot;real&dquot; or &dquot;personal&dquot; name should be used
when sending messages.
<p>
By default, this is the GECOS field from /etc/passwd.  Note that this
variable will <em>not</em> be used when the user has set a real name
in the <ref id="from" name="&dollar;from"> variable.


<sect2>recall<label id="recall">
<p>
Type: quadoption<newline>
Default: ask-yes

<p>
Controls whether or not you are prompted to recall postponed messages
when composing a new message.  Also see ``<ref id="postponed" name="&dollar;postponed">''.
<p>
Setting this variable to ``yes'' is not generally useful, and thus not
recommended.


<sect2>record<label id="record">
<p>
Type: path<newline>
Default: &dquot;&dquot;

<p>
This specifies the file into which your outgoing messages should be
appended.  (This is meant as the primary method for saving a copy of
your messages, but another way to do this is using the ``<ref id="my_hdr" name="my&lowbar;hdr">''
command to create a <em>Bcc:</em> field with your email address in it.)
<p>
The value of <em><ref id="record" name="&dollar;record"></em> is overridden by the ``<ref id="force_name" name="&dollar;force&lowbar;name">'' and
``<ref id="save_name" name="&dollar;save&lowbar;name">'' variables, and the ``<ref id="fcc-hook" name="fcc-hook">'' command.


<sect2>reply&lowbar;regexp<label id="reply_regexp">
<p>
Type: regular expression<newline>
Default: &dquot;^(re(&lsqb;&bsol;&lsqb;0-9&bsol;&rsqb;+&rsqb;)*|aw):&lsqb; &bsol;t&rsqb;*&dquot;

<p>
A regular expression used to recognize reply messages when threading
and replying. The default value corresponds to the English &dquot;Re:&dquot; and
the German &dquot;Aw:&dquot;.


<sect2>reply&lowbar;self<label id="reply_self">
<p>
Type: boolean<newline>
Default: no

<p>
If unset and you are replying to a message sent by you, Mutt will
assume that you want to reply to the recipients of that message rather
than to yourself.


<sect2>reply&lowbar;to<label id="reply_to">
<p>
Type: quadoption<newline>
Default: ask-yes

<p>
If set, Mutt will ask you if you want to use the address listed in the
Reply-To: header field when replying to a message.  If you answer no,
it will use the address in the From: header field instead.  This
option is useful for reading a mailing list that sets the Reply-To:
header field to the list address and you want to send a private
message to the author of a message.


<sect2>resolve<label id="resolve">
<p>
Type: boolean<newline>
Default: yes

<p>
When set, the cursor will be automatically advanced to the next
(possibly undeleted) message whenever a command that modifies the
current message is executed.


<sect2>reverse&lowbar;alias<label id="reverse_alias">
<p>
Type: boolean<newline>
Default: no

<p>
This variable controls whether or not Mutt will display the &dquot;personal&dquot;
name from your aliases in the index menu if it finds an alias that
matches the message's sender.  For example, if you have the following
alias:
<p>

<tscreen><verb>
alias juser abd30425@somewhere.net (Joe User)

</verb></tscreen><p>
and then you receive mail which contains the following header:
<p>

<tscreen><verb>
From: abd30425@somewhere.net

</verb></tscreen><p>
It would be displayed in the index menu as ``Joe User'' instead of
``abd30425@somewhere.net.''  This is useful when the person's e-mail
address is not human friendly (like CompuServe addresses).


<sect2>reverse&lowbar;name<label id="reverse_name">
<p>
Type: boolean<newline>
Default: no

<p>
It may sometimes arrive that you receive mail to a certain machine,
move the messages to another machine, and reply to some the messages
from there.  If this variable is set, the default <em>From:</em> line of
the reply messages is built using the address where you received the
messages you are replying to.  If the variable is unset, the
<em>From:</em> line will use your address on the current machine.


<sect2>reverse&lowbar;realname<label id="reverse_realname">
<p>
Type: boolean<newline>
Default: yes

<p>
This variable fine-tunes the behaviour of the <ref id="reverse_name" name="reverse&lowbar;name"> feature.
When it is set, mutt will use the address from incoming messages as-is,
possibly including eventual real names.  When it is unset, mutt will
override any such real names with the setting of the <ref id="realname" name="realname"> variable.


<sect2>rfc2047&lowbar;parameters<label id="rfc2047_parameters">
<p>
Type: boolean<newline>
Default: no

<p>
When this variable is set, Mutt will decode RFC-2047-encoded MIME 
parameters. You want to set this variable when mutt suggests you
to save attachments to files named like this: 
=?iso-8859-1?Q?file=5F=E4=5F991116=2Ezip?=
<p>
When this variable is set interactively, the change doesn't have
the desired effect before you have changed folders.
<p>
Note that this use of RFC 2047's encoding is explicitly,
prohibited by the standard, but nevertheless encountered in the
wild.
Also note that setting this parameter will <em>not</em> have the effect 
that mutt <em>generates</em> this kind of encoding.  Instead, mutt will
unconditionally use the encoding specified in RFC 2231.


<sect2>save&lowbar;address<label id="save_address">
<p>
Type: boolean<newline>
Default: no

<p>
If set, mutt will take the sender's full address when choosing a
default folder for saving a mail. If ``<ref id="save_name" name="&dollar;save&lowbar;name">'' or ``<ref id="force_name" name="&dollar;force&lowbar;name">''
is set too, the selection of the fcc folder will be changed as well.


<sect2>save&lowbar;empty<label id="save_empty">
<p>
Type: boolean<newline>
Default: yes

<p>
When unset, mailboxes which contain no saved messages will be removed
when closed (the exception is ``<ref id="spoolfile" name="&dollar;spoolfile">'' which is never removed).
If set, mailboxes are never removed.
<p>
<bf>Note:</bf> This only applies to mbox and MMDF folders, Mutt does not
delete MH and Maildir directories.


<sect2>save&lowbar;name<label id="save_name">
<p>
Type: boolean<newline>
Default: no

<p>
This variable controls how copies of outgoing messages are saved.
When set, a check is made to see if a mailbox specified by the
recipient address exists (this is done by searching for a mailbox in
the ``<ref id="folder" name="&dollar;folder">'' directory with the <em>username</em> part of the
recipient address).  If the mailbox exists, the outgoing message will
be saved to that mailbox, otherwise the message is saved to the
``<ref id="record" name="&dollar;record">'' mailbox.
<p>
Also see the ``<ref id="force_name" name="&dollar;force&lowbar;name">'' variable.


<sect2>score<label id="score">
<p>
Type: boolean<newline>
Default: yes

<p>
When this variable is <em>unset</em>, scoring is turned off.  This can
be useful to selectively disable scoring for certain folders when the
``<ref id="score_threshold_delete" name="&dollar;score&lowbar;threshold&lowbar;delete">'' variable and friends are used.


<sect2>score&lowbar;threshold&lowbar;delete<label id="score_threshold_delete">
<p>
Type: number<newline>
Default: -1

<p>
Messages which have been assigned a score equal to or lower than the value
of this variable are automatically marked for deletion by mutt.  Since
mutt scores are always greater than or equal to zero, the default setting
of this variable will never mark a message for deletion.


<sect2>score&lowbar;threshold&lowbar;flag<label id="score_threshold_flag">
<p>
Type: number<newline>
Default: 9999

<p>
Messages which have been assigned a score greater than or equal to this 
variable's value are automatically marked &dquot;flagged&dquot;.


<sect2>score&lowbar;threshold&lowbar;read<label id="score_threshold_read">
<p>
Type: number<newline>
Default: -1

<p>
Messages which have been assigned a score equal to or lower than the value
of this variable are automatically marked as read by mutt.  Since
mutt scores are always greater than or equal to zero, the default setting
of this variable will never mark a message read.


<sect2>send&lowbar;charset<label id="send_charset">
<p>
Type: string<newline>
Default: &dquot;us-ascii:iso-8859-1:utf-8&dquot;

<p>
A list of character sets for outgoing messages. Mutt will use the
first character set into which the text can be converted exactly.
If your ``<ref id="charset" name="&dollar;charset">'' is not iso-8859-1 and recipients may not
understand UTF-8, it is advisable to include in the list an
appropriate widely used standard character set (such as
iso-8859-2, koi8-r or iso-2022-jp) either instead of or after
&dquot;iso-8859-1&dquot;.


<sect2>sendmail<label id="sendmail">
<p>
Type: path<newline>
Default: &dquot;/usr/sbin/sendmail -oem -oi&dquot;

<p>
Specifies the program and arguments used to deliver mail sent by Mutt.
Mutt expects that the specified program interprets additional
arguments as recipient addresses.


<sect2>sendmail&lowbar;wait<label id="sendmail_wait">
<p>
Type: number<newline>
Default: 0

<p>
Specifies the number of seconds to wait for the ``<ref id="sendmail" name="&dollar;sendmail">'' process
to finish before giving up and putting delivery in the background.
<p>
Mutt interprets the value of this variable as follows:

<descrip>
<tag>&gt;0 </tag>number of seconds to wait for sendmail to finish before continuing
<tag>0  </tag>wait forever for sendmail to finish
<tag>&lt;0 </tag>always put sendmail in the background without waiting
</descrip>

<p>
Note that if you specify a value other than 0, the output of the child
process will be put in a temporary file.  If there is some error, you
will be informed as to where to find the output.


<sect2>shell<label id="shell">
<p>
Type: path<newline>
Default: &dquot;&dquot;

<p>
Command to use when spawning a subshell.  By default, the user's login
shell from /etc/passwd is used.


<sect2>sig&lowbar;dashes<label id="sig_dashes">
<p>
Type: boolean<newline>
Default: yes

<p>
If set, a line containing ``-- '' will be inserted before your
``<ref id="signature" name="&dollar;signature">''.  It is <bf>strongly</bf> recommended that you not unset
this variable unless your ``signature'' contains just your name.  The
reason for this is because many software packages use ``-- &bsol;n'' to
detect your signature.  For example, Mutt has the ability to highlight
the signature in a different color in the builtin pager.


<sect2>sig&lowbar;on&lowbar;top<label id="sig_on_top">
<p>
Type: boolean<newline>
Default: no

<p>
If set, the signature will be included before any quoted or forwarded
text.  It is <bf>strongly</bf> recommended that you do not set this variable
unless you really know what you are doing, and are prepared to take
some heat from netiquette guardians.


<sect2>signature<label id="signature">
<p>
Type: path<newline>
Default: &dquot;&tilde;/.signature&dquot;

<p>
Specifies the filename of your signature, which is appended to all
outgoing messages.   If the filename ends with a pipe (``|''), it is
assumed that filename is a shell command and input should be read from
its stdout.


<sect2>simple&lowbar;search<label id="simple_search">
<p>
Type: string<newline>
Default: &dquot;&tilde;f &percnt;s | &tilde;s &percnt;s&dquot;

<p>
Specifies how Mutt should expand a simple search into a real search
pattern.  A simple search is one that does not contain any of the &tilde;
operators.  See ``<ref id="patterns" name="patterns">'' for more information on search patterns.
<p>
For example, if you simply type joe at a search or limit prompt, Mutt
will automatically expand it to the value specified by this variable.
For the default value it would be:
<p>
&tilde;f joe | &tilde;s joe


<sect2>smart&lowbar;wrap<label id="smart_wrap">
<p>
Type: boolean<newline>
Default: yes

<p>
Controls the display of lines longer than the screen width in the
internal pager. If set, long lines are wrapped at a word boundary.  If
unset, lines are simply wrapped at the screen edge. Also see the
``<ref id="markers" name="&dollar;markers">'' variable.


<sect2>smileys<label id="smileys">
<p>
Type: regular expression<newline>
Default: &dquot;(&gt;From )|(:&lsqb;-^&rsqb;?&lsqb;&rsqb;&lsqb;)(&gt;&lt;}{|/DP&rsqb;)&dquot;

<p>
The <em>pager</em> uses this variable to catch some common false
positives of ``<ref id="quote_regexp" name="&dollar;quote&lowbar;regexp">'', most notably smileys in the beginning
of a line


<sect2>sleep&lowbar;time<label id="sleep_time">
<p>
Type: number<newline>
Default: 1

<p>
Specifies time, in seconds, to pause while displaying certain informational
messages, while moving from folder to folder and after expunging
messages from the current folder.  The default is to pause one second, so 
a value of zero for this option suppresses the pause.


<sect2>sort<label id="sort">
<p>
Type: sort order<newline>
Default: date

<p>
Specifies how to sort messages in the <em>index</em> menu.  Valid values
are:
<p>

<tscreen><verb>
   date or date-sent
   date-received
   from
   mailbox-order (unsorted)
   score
   size
   subject
   threads
   to

</verb></tscreen><p>
You may optionally use the reverse- prefix to specify reverse sorting
order (example: set sort=reverse-date-sent).


<sect2>sort&lowbar;alias<label id="sort_alias">
<p>
Type: sort order<newline>
Default: alias

<p>
Specifies how the entries in the `alias' menu are sorted.  The
following are legal values:
<p>

<tscreen><verb>
   address (sort alphabetically by email address)
   alias (sort alphabetically by alias name)
   unsorted (leave in order specified in .muttrc)

</verb></tscreen>

<sect2>sort&lowbar;aux<label id="sort_aux">
<p>
Type: sort order<newline>
Default: date

<p>
When sorting by threads, this variable controls how threads are sorted
in relation to other threads, and how the branches of the thread trees
are sorted.  This can be set to any value that ``<ref id="sort" name="&dollar;sort">'' can, except
threads (in that case, mutt will just use date-sent).  You can also
specify the last- prefix in addition to the reverse- prefix, but last-
must come after reverse-.  The last- prefix causes messages to be
sorted against its siblings by which has the last descendant, using
the rest of sort&lowbar;aux as an ordering.  For instance, set sort&lowbar;aux=last-
date-received would mean that if a new message is received in a
thread, that thread becomes the last one displayed (or the first, if
you have set sort=reverse-threads.) Note: For reversed ``<ref id="sort" name="&dollar;sort">''
order <ref id="sort_aux" name="&dollar;sort&lowbar;aux"> is reversed again (which is not the right thing to do,
but kept to not break any existing configuration setting).


<sect2>sort&lowbar;browser<label id="sort_browser">
<p>
Type: sort order<newline>
Default: subject

<p>
Specifies how to sort entries in the file browser.  By default, the
entries are sorted alphabetically.  Valid values:
<p>

<tscreen><verb>
   alpha (alphabetically)
   date
   size
   unsorted

</verb></tscreen><p>
You may optionally use the reverse- prefix to specify reverse sorting
order (example: set sort&lowbar;browser=reverse-date).


<sect2>sort&lowbar;re<label id="sort_re">
<p>
Type: boolean<newline>
Default: yes

<p>
This variable is only useful when sorting by threads with
``<ref id="strict_threads" name="&dollar;strict&lowbar;threads">'' unset.  In that case, it changes the heuristic
mutt uses to thread messages by subject.  With sort&lowbar;re set, mutt will
only attach a message as the child of another message by subject if
the subject of the child message starts with a substring matching the
setting of ``<ref id="reply_regexp" name="&dollar;reply&lowbar;regexp">''.  With sort&lowbar;re unset, mutt will attach
the message whether or not this is the case, as long as the
non-``<ref id="reply_regexp" name="&dollar;reply&lowbar;regexp">'' parts of both messages are identical.


<sect2>spoolfile<label id="spoolfile">
<p>
Type: path<newline>
Default: &dquot;&dquot;

<p>
If your spool mailbox is in a non-default place where Mutt cannot find
it, you can specify its location with this variable.  Mutt will
automatically set this variable to the value of the environment
variable &dollar;MAIL if it is not set.


<sect2>status&lowbar;chars<label id="status_chars">
<p>
Type: string<newline>
Default: &dquot;-*&percnt;A&dquot;

<p>
Controls the characters used by the &dquot;&percnt;r&dquot; indicator in
``<ref id="status_format" name="&dollar;status&lowbar;format">''. The first character is used when the mailbox is
unchanged. The second is used when the mailbox has been changed, and
it needs to be resynchronized. The third is used if the mailbox is in
read-only mode, or if the mailbox will not be written when exiting
that mailbox (You can toggle whether to write changes to a mailbox
with the toggle-write operation, bound by default to &dquot;&percnt;&dquot;). The fourth
is used to indicate that the current folder has been opened in attach-
message mode (Certain operations like composing a new mail, replying,
forwarding, etc. are not permitted in this mode).


<sect2>status&lowbar;format<label id="status_format">
<p>
Type: string<newline>
Default: &dquot;-&percnt;r-Mutt: &percnt;f &lsqb;Msgs:&percnt;?M?&percnt;M/?&percnt;m&percnt;?n? New:&percnt;n?&percnt;?o? Old:&percnt;o?&percnt;?d? Del:&percnt;d?&percnt;?F? Flag:&percnt;F?&percnt;?t? Tag:&percnt;t?&percnt;?p? Post:&percnt;p?&percnt;?b? Inc:&percnt;b?&percnt;?l? &percnt;l?&rsqb;---(&percnt;s/&percnt;S)-&percnt;&gt;-(&percnt;P)---&dquot;

<p>
Controls the format of the status line displayed in the <em>index</em>
menu.  This string is similar to ``<ref id="index_format" name="&dollar;index&lowbar;format">'', but has its own
set of printf()-like sequences:
<p>

<descrip>
<tag>&percnt;b  </tag>number of mailboxes with new mail *
<tag>&percnt;d  </tag>number of deleted messages *
<tag>&percnt;f  </tag>the full pathname of the current mailbox
<tag>&percnt;F  </tag>number of flagged messages *
<tag>&percnt;h  </tag>local hostname
<tag>&percnt;l  </tag>size (in bytes) of the current mailbox *
<tag>&percnt;L  </tag>size (in bytes) of the messages shown 
(i.e., which match the current limit) *
<tag>&percnt;m  </tag>the number of messages in the mailbox *
<tag>&percnt;M  </tag>the number of messages shown (i.e., which match the current limit) *
<tag>&percnt;n  </tag>number of new messages in the mailbox *
<tag>&percnt;o  </tag>number of old unread messages
<tag>&percnt;p  </tag>number of postponed messages *
<tag>&percnt;P  </tag>percentage of the way through the index
<tag>&percnt;r  </tag>modified/read-only/won't-write/attach-message indicator,
according to <ref id="status_chars" name="&dollar;status&lowbar;chars">
<tag>&percnt;s  </tag>current sorting mode (<ref id="sort" name="&dollar;sort">)
<tag>&percnt;S  </tag>current aux sorting method (<ref id="sort_aux" name="&dollar;sort&lowbar;aux">)
<tag>&percnt;t  </tag>number of tagged messages *
<tag>&percnt;u  </tag>number of unread messages *
<tag>&percnt;v  </tag>Mutt version string
<tag>&percnt;V  </tag>currently active limit pattern, if any *
<tag>&percnt;&gt;X </tag>right justify the rest of the string and pad with &dquot;X&dquot;
<tag>&percnt;|X </tag>pad to the end of the line with &dquot;X&dquot;
</descrip>

<p>
* = can be optionally printed if nonzero
<p>
Some of the above sequences can be used to optionally print a string
if their value is nonzero.  For example, you may only want to see the
number of flagged messages if such messages exist, since zero is not
particularly meaningful.  To optionally print a string based upon one
of the above sequences, the following construct is used
<p>
&percnt;?&lt;sequence&lowbar;char&gt;?&lt;optional&lowbar;string&gt;?
<p>
where <em>sequence&lowbar;char</em> is a character from the table above, and
<em>optional&lowbar;string</em> is the string you would like printed if
<em>status&lowbar;char</em> is nonzero.  <em>optional&lowbar;string</em> <bf>may</bf> contain
other sequence as well as normal text, but you may <bf>not</bf> nest
optional strings.
<p>
Here is an example illustrating how to optionally print the number of
new messages in a mailbox:
&percnt;?n?&percnt;n new messages.?
<p>
Additionally you can switch between two strings, the first one, if a
value is zero, the second one, if the value is nonzero, by using the
following construct:
&percnt;?&lt;sequence&lowbar;char&gt;?&lt;if&lowbar;string&gt;&amp;&lt;else&lowbar;string&gt;?
<p>
You can additionally force the result of any printf-like sequence to
be lowercase by prefixing the sequence character with an underscore
(&lowbar;) sign.  For example, if you want to display the local hostname in
lowercase, you would use:
&percnt;&lowbar;h
<p>
If you prefix the sequence character with a colon (:) character, mutt
will replace any dots in the expansion by underscores. This might be helpful 
with IMAP folders that don't like dots in folder names.


<sect2>status&lowbar;on&lowbar;top<label id="status_on_top">
<p>
Type: boolean<newline>
Default: no

<p>
Setting this variable causes the ``status bar'' to be displayed on
the first line of the screen rather than near the bottom.


<sect2>strict&lowbar;threads<label id="strict_threads">
<p>
Type: boolean<newline>
Default: no

<p>
If set, threading will only make use of the ``In-Reply-To'' and
``References'' fields when you ``<ref id="sort" name="&dollar;sort">'' by message threads.  By
default, messages with the same subject are grouped together in
``pseudo threads.''  This may not always be desirable, such as in a
personal mailbox where you might have several unrelated messages with
the subject ``hi'' which will get grouped together.


<sect2>suspend<label id="suspend">
<p>
Type: boolean<newline>
Default: yes

<p>
When <em>unset</em>, mutt won't stop when the user presses the terminal's
<em>susp</em> key, usually ``control-Z''. This is useful if you run mutt
inside an xterm using a command like xterm -e mutt.


<sect2>text&lowbar;flowed<label id="text_flowed">
<p>
Type: boolean<newline>
Default: no

<p>
When set, mutt will generate text/plain; format=flowed attachments.
This format is easier to handle for some mailing software, and generally
just looks like ordinary text.  To actually make use of this format's 
features, you'll need support in your editor.
<p>
Note that <ref id="indent_string" name="&dollar;indent&lowbar;string"> is ignored when this option is set.


<sect2>thread&lowbar;received<label id="thread_received">
<p>
Type: boolean<newline>
Default: no

<p>
When set, mutt uses the date received rather than the date sent
to thread messages by subject.


<sect2>thorough&lowbar;search<label id="thorough_search">
<p>
Type: boolean<newline>
Default: no

<p>
Affects the <em>&tilde;b</em> and <em>&tilde;h</em> search operations described in
section ``<ref id="patterns" name="patterns">'' above.  If set, the headers and attachments of
messages to be searched are decoded before searching.  If unset,
messages are searched as they appear in the folder.


<sect2>tilde<label id="tilde">
<p>
Type: boolean<newline>
Default: no

<p>
When set, the internal-pager will pad blank lines to the bottom of the
screen with a tilde (&tilde;).


<sect2>timeout<label id="timeout">
<p>
Type: number<newline>
Default: 600

<p>
This variable controls the <em>number of seconds</em> Mutt will wait
for a key to be pressed in the main menu before timing out and
checking for new mail.  A value of zero or less will cause Mutt
to never time out.


<sect2>tmpdir<label id="tmpdir">
<p>
Type: path<newline>
Default: &dquot;&dquot;

<p>
This variable allows you to specify where Mutt will place its
temporary files needed for displaying and composing messages.  If
this variable is not set, the environment variable TMPDIR is
used.  If TMPDIR is not set then &dquot;/tmp&dquot; is used.


<sect2>to&lowbar;chars<label id="to_chars">
<p>
Type: string<newline>
Default: &dquot; +TCFL&dquot;

<p>
Controls the character used to indicate mail addressed to you.  The
first character is the one used when the mail is NOT addressed to your
address (default: space).  The second is used when you are the only
recipient of the message (default: +).  The third is when your address
appears in the TO header field, but you are not the only recipient of
the message (default: T).  The fourth character is used when your
address is specified in the CC header field, but you are not the only
recipient.  The fifth character is used to indicate mail that was sent
by <em>you</em>.  The sixth character is used to indicate when a mail
was sent to a mailing-list you subscribe to (default: L).


<sect2>tunnel<label id="tunnel">
<p>
Type: string<newline>
Default: &dquot;&dquot;

<p>
Setting this variable will cause mutt to open a pipe to a command
instead of a raw socket. You may be able to use this to set up
preauthenticated connections to your IMAP/POP3 server. Example:
<p>
tunnel=&dquot;ssh -q mailhost.net /usr/local/libexec/imapd&dquot;
<p>
NOTE: For this example to work you must be able to log in to the remote
machine without having to enter a password.


<sect2>use&lowbar;8bitmime<label id="use_8bitmime">
<p>
Type: boolean<newline>
Default: no

<p>
<bf>Warning:</bf> do not set this variable unless you are using a version
of sendmail which supports the -B8BITMIME flag (such as sendmail
8.8.x) or you may not be able to send mail.
<p>
When <em>set</em>, Mutt will invoke ``<ref id="sendmail" name="&dollar;sendmail">'' with the -B8BITMIME
flag when sending 8-bit messages to enable ESMTP negotiation.


<sect2>use&lowbar;domain<label id="use_domain">
<p>
Type: boolean<newline>
Default: yes

<p>
When set, Mutt will qualify all local addresses (ones without the
@host portion) with the value of ``<ref id="hostname" name="&dollar;hostname">''.  If <em>unset</em>, no
addresses will be qualified.


<sect2>use&lowbar;from<label id="use_from">
<p>
Type: boolean<newline>
Default: yes

<p>
When <em>set</em>, Mutt will generate the `From:' header field when
sending messages.  If <em>unset</em>, no `From:' header field will be
generated unless the user explicitly sets one using the ``<ref id="my_hdr" name="my&lowbar;hdr">''
command.


<sect2>use&lowbar;ipv6<label id="use_ipv6">
<p>
Type: boolean<newline>
Default: yes

<p>
When <em>set</em>, Mutt will look for IPv6 addresses of hosts it tries to
contact.  If this option is unset, Mutt will restrict itself to IPv4 addresses.
Normally, the default should work.


<sect2>user&lowbar;agent<label id="user_agent">
<p>
Type: boolean<newline>
Default: yes

<p>
When <em>set</em>, mutt will add a &dquot;User-Agent&dquot; header to outgoing
messages, indicating which version of mutt was used for composing
them.


<sect2>visual<label id="visual">
<p>
Type: path<newline>
Default: &dquot;&dquot;

<p>
Specifies the visual editor to invoke when the <em>&tilde;v</em> command is
given in the builtin editor.


<sect2>wait&lowbar;key<label id="wait_key">
<p>
Type: boolean<newline>
Default: yes

<p>
Controls whether Mutt will ask you to press a key after <em>shell-
escape</em>, <em>pipe-message</em>, <em>pipe-entry</em>, <em>print-message</em>,
and <em>print-entry</em> commands.
<p>
It is also used when viewing attachments with ``<ref id="auto_view" name="auto&lowbar;view">'', provided
that the corresponding mailcap entry has a <em>needsterminal</em> flag,
and the external program is interactive.
<p>
When set, Mutt will always ask for a key. When unset, Mutt will wait
for a key only if the external command returned a non-zero status.


<sect2>weed<label id="weed">
<p>
Type: boolean<newline>
Default: yes

<p>
When set, mutt will weed headers when when displaying, forwarding,
printing, or replying to messages.


<sect2>wrap&lowbar;search<label id="wrap_search">
<p>
Type: boolean<newline>
Default: yes

<p>
Controls whether searches wrap around the end of the mailbox.
<p>
When set, searches will wrap around the first (or last) message. When
unset, searches will not wrap.


<sect2>wrapmargin<label id="wrapmargin">
<p>
Type: number<newline>
Default: 0

<p>
Controls the size of the margin remaining at the right side of
the terminal when mutt's pager does smart wrapping.


<sect2>write&lowbar;inc<label id="write_inc">
<p>
Type: number<newline>
Default: 10

<p>
When writing a mailbox, a message will be printed every
<em>write&lowbar;inc</em> messages to indicate progress.  If set to 0, only a
single message will be displayed before writing a mailbox.
<p>
Also see the ``<ref id="read_inc" name="&dollar;read&lowbar;inc">'' variable.


<sect2>write&lowbar;bcc<label id="write_bcc">
<p>
Type: boolean<newline>
Default: yes

<p>
Controls whether mutt writes out the Bcc header when preparing
messages to be sent.  Exim users may wish to use this.


<sect1>Functions<label id="functions">
<p>
The following is the list of available functions listed by the mapping
in which they are available.  The default key setting is given, and an
explanation of what the function does.  The key bindings of these
functions can be changed with the <ref name="bind" id="bind">
command.

<sect2>generic
<p>

The <em/generic/ menu is not a real menu, but specifies common functions
(such as movement) available in all menus except for <em/pager/ and
<em/editor/.  Changing settings for this menu will affect the default
bindings for all menus (except as noted).

<verb>
bottom-page                L   move to the bottom of the page
current-bottom     not bound   move current entry to bottom of page
current-middle     not bound   move current entry to middle of page
current-top        not bound   move current entry to top of page
enter-command              :   enter a muttrc command
exit                       q   exit this menu
first-entry                =   move to the first entry
half-down                  ]   scroll down 1/2 page
half-up                    [   scroll up 1/2 page
help                       ?   this screen
jump                  number   jump to an index number
last-entry                 *   move to the last entry
middle-page                M   move to the middle of the page
next-entry                 j   move to the next entry
next-line                  >   scroll down one line
next-page                  z   move to the next page
previous-entry             k   move to the previous entry
previous-line              <   scroll up one line
previous-page              Z   move to the previous page
refresh                   ^L   clear and redraw the screen
search                     /   search for a regular expression
search-next                n   search for next match
search-opposite    not bound   search for next match in opposite direction
search-reverse         ESC /   search backwards for a regular expression
select-entry             RET   select the current entry
shell-escape               !   run a program in a subshell
tag-entry                  t   toggle the tag on the current entry
tag-prefix                 ;   apply next command to tagged entries
top-page                   H   move to the top of the page
</verb>
<sect2>index
<p>
<verb>
bounce-message             b   remail a message to another user
change-folder              c   open a different folder
change-folder-readonly ESC c   open a different folder in read only mode
check-traditional-pgp  ESC P   check for classic pgp
clear-flag                 W   clear a status flag from a message
copy-message               C   copy a message to a file/mailbox
create-alias               a   create an alias from a message sender
decode-copy            ESC C   decode a message and copy it to a file/mailbox
decode-save            ESC s   decode a message and save it to a file/mailbox
delete-message             d   delete the current entry
delete-pattern             D   delete messages matching a pattern
delete-subthread       ESC d   delete all messages in subthread
delete-thread             ^D   delete all messages in thread
display-address            @   display full address of sender
display-toggle-weed        h   display message and toggle header weeding
display-message          RET   display a message
edit                       e   edit the current message
edit-type                 ^E   edit the current message's Content-Type
exit                       x   exit without saving changes
extract-keys              ^K   extract PGP public keys
fetch-mail                 G   retrieve mail from POP server
flag-message               F   toggle a message's 'important' flag
forget-passphrase         ^F   wipe PGP passphrase from memory
forward-message            f   forward a message with comments
group-reply                g   reply to all recipients
limit                      l   show only messages matching a pattern
list-reply                 L   reply to specified mailing list
mail                       m   compose a new mail message
mail-key               ESC k   mail a PGP public key
next-new                 TAB   jump to the next new message
next-subthread         ESC n   jump to the next subthread
next-thread               ^N   jump to the next thread
next-undeleted             j   move to the next undeleted message
next-unread        not bound   jump to the next unread message
parent-message             P   jump to parent message in thread
pipe-message               |   pipe message/attachment to a shell command
previous-new         ESC TAB   jump to the previous new message
previous-page              Z   move to the previous page
previous-subthread     ESC p   jump to previous subthread
previous-thread           ^P   jump to previous thread
previous-undeleted         k   move to the last undelete message
previous-unread    not bound   jump to the previous unread message
print-message              p   print the current entry
query                      Q   query external program for addresses
quit                       q   save changes to mailbox and quit
read-subthread         ESC r   mark the current subthread as read
read-thread               ^R   mark the current thread as read
recall-message             R   recall a postponed message
reply                      r   reply to a message
resend-message         ESC e   resend message and preserve MIME structure
save-message               s   save message/attachment to a file
set-flag                   w   set a status flag on a message
show-version               V   show the Mutt version number and date
show-limit             ESC l   show currently active limit pattern, if any
sort-mailbox               o   sort messages
sort-reverse               O   sort messages in reverse order
sync-mailbox               $   save changes to mailbox
tag-pattern                T   tag messages matching a pattern
tag-thread             ESC t   tag/untag all messages in the current thread
toggle-new                 N   toggle a message's 'new' flag
toggle-write               %   toggle whether the mailbox will be rewritten
undelete-message           u   undelete the current entry
undelete-pattern           U   undelete messages matching a pattern
undelete-subthread     ESC u   undelete all messages in subthread
undelete-thread           ^U   undelete all messages in thread
untag-pattern             ^T   untag messages matching a pattern
view-attachments           v   show MIME attachments
</verb>
<sect2>pager
<p>
<verb>
bottom             not bound   jump to the bottom of the message
bounce-message             b   remail a message to another user
change-folder              c   open a different folder
change-folder-readonly ESC c   open a different folder in read only mode
check-traditional-pgp  ESC P   check for classic pgp
copy-message               C   copy a message to a file/mailbox
create-alias               a   create an alias from a message sender
decode-copy            ESC C   decode a message and copy it to a file/mailbox
decode-save            ESC s   decode a message and save it to a file/mailbox
delete-message             d   delete the current entry
delete-subthread       ESC d   delete all messages in subthread
delete-thread             ^D   delete all messages in thread
display-address            @   display full address of sender
display-toggle-weed        h   display message and toggle header weeding
edit                       e   edit the current message
edit-type                 ^E   edit the current message's Content-Type
enter-command              :   enter a muttrc command
exit                       i   return to the main-menu
extract-keys              ^K   extract PGP public keys
flag-message               F   toggle a message's 'important' flag
forget-passphrase         ^F   wipe PGP passphrase from memory
forward-message            f   forward a message with comments
group-reply                g   reply to all recipients
half-up            not bound   move up one-half page
half-down          not bound   move down one-half page
help                       ?   this screen
list-reply                 L   reply to specified mailing list
mail                       m   compose a new mail message
mail-key               ESC k   mail a PGP public key
mark-as-new                N   toggle a message's 'new' flag
next-line                RET   scroll down one line
next-entry                 J   move to the next entry
next-new                 TAB   jump to the next new message
next-page                      move to the next page
next-subthread         ESC n   jump to the next subthread
next-thread               ^N   jump to the next thread
next-undeleted             j   move to the next undeleted message
next-unread        not bound   jump to the next unread message
parent-message             P   jump to parent message in thread
pipe-message               |   pipe message/attachment to a shell command
previous-line      BackSpace   scroll up one line
previous-entry             K   move to the previous entry
previous-new       not bound   jump to the previous new message
previous-page              -   move to the previous page
previous-subthread     ESC p   jump to previous subthread
previous-thread           ^P   jump to previous thread
previous-undeleted         k   move to the last undelete message
previous-unread    not bound   jump to the previous unread message
print-message              p   print the current entry
quit                       Q   save changes to mailbox and quit
read-subthread         ESC r   mark the current subthread as read
read-thread               ^R   mark the current thread as read
recall-message             R   recall a postponed message
redraw-screen             ^L   clear and redraw the screen
reply                      r   reply to a message
save-message               s   save message/attachment to a file
search                     /   search for a regular expression
search-next                n   search for next match
search-opposite    not bound   search for next match in opposite direction
search-reverse         ESC /   search backwards for a regular expression
search-toggle              \   toggle search pattern coloring
shell-escape               !   invoke a command in a subshell
show-version               V   show the Mutt version number and date
skip-quoted                S   skip beyond quoted text
sync-mailbox               $   save changes to mailbox
tag-message                t   tag a message
toggle-quoted              T   toggle display of quoted text
top                        ^   jump to the top of the message
undelete-message           u   undelete the current entry
undelete-subthread     ESC u   undelete all messages in subthread
undelete-thread           ^U   undelete all messages in thread
view-attachments           v   show MIME attachments
</verb>
<sect2>alias
<p>
<verb>
search                     /   search for a regular expression
search-next                n   search for next match
search-reverse         ESC /   search backwards for a regular expression
</verb>
<sect2>query
<p>
<verb>
create-alias               a   create an alias from a message sender
mail                       m   compose a new mail message
query                      Q   query external program for addresses
query-append               A   append new query results to current results
search                     /   search for a regular expression
search-next                n   search for next match
search-opposite    not bound   search for next match in opposite direction
search-reverse         ESC /   search backwards for a regular expression
</verb>
<sect2>attach
<p>
<verb>
bounce-message             b   remail a message to another user
collapse-parts             v   toggle display of subparts
delete-entry               d   delete the current entry
display-toggle-weed        h   display message and toggle header weeding
edit-type                 ^E   edit the current entry's Content-Type
extract-keys              ^K   extract PGP public keys
forward-message            f   forward a message with comments
group-reply                g   reply to all recipients
list-reply                 L   reply to specified mailing list
pipe-entry                 |   pipe message/attachment to a shell command
print-entry                p   print the current entry
reply                      r   reply to a message
resend-message         ESC e   resend message and preserve MIME structure
save-entry                 s   save message/attachment to a file
undelete-entry             u   undelete the current entry
view-attach              RET   view attachment using mailcap entry if necessary
view-mailcap               m   force viewing of attachment using mailcap
view-text                  T   view attachment as text
</verb>
<sect2>compose
<p>
<verb>
attach-file                a   attach a file(s) to this message
attach-message             A   attach message(s) to this message
attach-key             ESC k   attach a PGP public key
copy-file                  C   save message/attachment to a file
detach-file                D   delete the current entry
display-toggle-weed        h   display message and toggle header weeding
edit-bcc                   b   edit the BCC list
edit-cc                    c   edit the CC list
edit-description           d   edit attachment description
edit-encoding             ^E   edit attachment transfer-encoding
edit-fcc                   f   enter a file to save a copy of this message in
edit-from              ESC f   edit the from: field
edit-file               ^X e   edit the file to be attached
edit-headers               E   edit the message with headers
edit                       e   edit the message
edit-mime                  m   edit attachment using mailcap entry
edit-reply-to              r   edit the Reply-To field
edit-subject               s   edit the subject of this message
edit-to                    t   edit the TO list
edit-type                 ^T   edit attachment type
filter-entry               F   filter attachment through a shell command
forget-passphrase         ^F   wipe PGP passphrase from memory
ispell                     i   run ispell on the message
new-mime                   n   compose new attachment using mailcap entry
pgp-menu                   p   show PGP options
pipe-entry                 |   pipe message/attachment to a shell command
postpone-message           P   save this message to send later
print-entry                l   print the current entry
rename-file                R   rename/move an attached file
send-message               y   send the message
toggle-unlink              u   toggle whether to delete file after sending it
view-attach              RET   view attachment using mailcap entry if necessary
write-fcc		   w   write the message to a folder
</verb>
<sect2>postpone
<p>
<verb>
delete-entry               d   delete the current entry
undelete-entry             u   undelete the current entry
</verb>
<sect2>browser
<p>
<verb>
change-dir                 c   change directories
check-new                TAB   check mailboxes for new mail
enter-mask                 m   enter a file mask
search                     /   search for a regular expression
search-next                n   search for next match
search-reverse         ESC /   search backwards for a regular expression
select-new                 N   select a new file in this directory
sort                       o   sort messages
sort-reverse               O   sort messages in reverse order
toggle-mailboxes         TAB   toggle whether to browse mailboxes or all files
view-file              SPACE   view file
subscribe                  s   subscribe to current mailbox (IMAP Only)
unsubscribe                u   unsubscribe to current mailbox (IMAP Only)
toggle-subscribed          T   toggle view all/subscribed mailboxes (IMAP Only)
</verb>
<sect2>pgp
<p>
<verb>
view-name                  %   view the key's user id
verify-key                 c   verify a PGP public key
</verb>
<sect2>editor
<p>
<verb>
backspace          BackSpace   delete the char in front of the cursor
backward-char             ^B   move the cursor one character to the left
backward-word          ESC b   move the cursor to the previous word
bol                       ^A   jump to the beginning of the line
buffy-cycle            Space   cycle among incoming mailboxes
capitalize-word        ESC c   uppercase the first character in the word
complete                 TAB   complete filename or alias
complete-query            ^T   complete address with query
delete-char               ^D   delete the char under the cursor
downcase-word          ESC l   lowercase all characters in current word
eol                       ^E   jump to the end of the line
forward-char              ^F   move the cursor one character to the right
forward-word           ESC f   move the cursor to the next word
history-down       not bound   scroll down through the history list
history-up         not bound   scroll up through the history list
kill-eol                  ^K   delete chars from cursor to end of line
kill-eow               ESC d   delete chars from cursor to end of word
kill-line                 ^U   delete all chars on the line
kill-word                 ^W   delete the word in front of the cursor
quote-char                ^V   quote the next typed key
transpose-chars    not bound   transpose character under cursor with previous
upcase-word            ESC u   uppercase all characters in current word
</verb>

<sect>Miscellany
<p>

<sect1>Acknowledgements
<p>
Kari Hurtta
<htmlurl url="mailto:kari.hurtta@fmi.fi" name="&lt;kari.hurtta@fmi.fi&gt;">
co-developed the original MIME parsing code back in the ELM-ME days.

The following people have been very helpful to the development of Mutt:

Vikas Agnihotri <htmlurl url="mailto:vikasa@writeme.com" name="&lt;vikasa@writeme.com&gt;">,<newline>
Francois Berjon <htmlurl url="mailto:Francois.Berjon@aar.alcatel-alsthom.fr" name="&lt;Francois.Berjon@aar.alcatel-alsthom.fr&gt;">,<newline>
Aric Blumer <htmlurl url="mailto:aric@fore.com" name="&lt;aric@fore.com&gt;">,<newline>
John Capo <htmlurl url="mailto:jc@irbs.com" name="&lt;jc@irbs.com&gt;">,<newline>
David Champion <htmlurl url="mailto:dgc@uchicago.edu" name="&lt;dgc@uchicago.edu">,<newline>
Brendan Cully <htmlurl url="mailto:brendan@kublai.com" name="&lt;brendan@kublai.com&gt">,<newline>
Liviu Daia <htmlurl url="mailto:daia@stoilow.imar.ro" name="&lt;daia@stoilow.imar.ro&gt;">,<newline>
Thomas E. Dickey <htmlurl url="mailto:dickey@herndon4.his.com" name="&lt;dickey@herndon4.his.com&gt;">,<newline>
David DeSimone <htmlurl url="mailto:fox@convex.hp.com" name="&lt;fox@convex.hp.com&gt;">,<newline>
Nickolay N. Dudorov <htmlurl url="mailto:nnd@wint.itfs.nsk.su" name="&lt;nnd@wint.itfs.nsk.su&gt;">,<newline>
Ruslan Ermilov <htmlurl url="mailto:ru@freebsd.org" name="&lt;ru@freebsd.org&gt;">,<newline>
Edmund Grimley Evans <htmlurl url="mailto:edmundo@rano.org" name="&lt;edmundo@rano.org">,<newline>
Michael Finken <htmlurl url="mailto:finken@conware.de" name="&lt;finken@conware.de&gt;">,<newline>
Sven Guckes <htmlurl url="mailto:guckes@math.fu-berlin.de" name="&lt;guckes@math.fu-berlin.de&gt;">,<newline>
Lars Hecking <htmlurl url="mailto:lhecking@nmrc.ie" name="&lt;lhecking@nmrc.ie&gt;">,<newline>
Mark Holloman <htmlurl url="mailto:holloman@nando.net" name="&lt;holloman@nando.net&gt;">,<newline>
Andreas Holzmann <htmlurl url="mailto:holzmann@fmi.uni-passau.de" name="&lt;holzmann@fmi.uni-passau.de&gt;">,<newline>
Marco d'Itri <htmlurl url="mailto:md@linux.it" name="&lt;md@linux.it&gt;">,<newline>
Bjoern Jacke <htmlurl url="mailto:bjacke@suse.com" name="&lt;bjacke@suse.com&gt;">,<newline>
Byrial Jensen <htmlurl url="mailto:byrial@image.dk" name="&lt;byrial@image.dk&gt;">,<newline>
David Jeske <htmlurl url="mailto:jeske@igcom.net" name="&lt;jeske@igcom.net&gt;">,<newline>
Christophe Kalt <htmlurl url="mailto:kalt@hugo.int-evry.fr" name="&lt;kalt@hugo.int-evry.fr&gt;">,<newline>
Tommi Komulainen <htmlurl url="mailto:Tommi.Komulainen@iki.fi" name="&lt;Tommi.Komulainen@iki.fi&gt;">,<newline>
Felix von Leitner (a.k.a ``Fefe'') <htmlurl url="mailto:leitner@math.fu-berlin.de" name="&lt;leitner@math.fu-berlin.de&gt;">,<newline>
Brandon Long <htmlurl url="mailto:blong@fiction.net" name="&lt;blong@fiction.net&gt;">,<newline>
Jimmy Makela <htmlurl url="mailto:jmy@flashback.net" name="&lt;jmy@flashback.net&gt;">,<newline>
Lars Marowsky-Bree <htmlurl url="mailto:lmb@pointer.in-minden.de" name="&lt;lmb@pointer.in-minden.de&gt;">,<newline>
Thomas ``Mike'' Michlmayr <htmlurl url="mailto:mike@cosy.sbg.ac.at" name="&lt;mike@cosy.sbg.ac.at&gt;">,<newline>
Andrew W. Nosenko <htmlurl url="mailto:awn@bcs.zp.ua" name="&lt;awn@bcs.zp.ua&gt;">,<newline>
David O'Brien <htmlurl url="mailto:obrien@Nuxi.cs.ucdavis.edu" name="&lt;obrien@Nuxi.cs.ucdavis.edu&gt;">,<newline>
Clint Olsen <htmlurl url="mailto:olsenc@ichips.intel.com" name="&lt;olsenc@ichips.intel.com&gt;">,<newline>
Park Myeong Seok <htmlurl url="mailto:pms@romance.kaist.ac.kr" name="&lt;pms@romance.kaist.ac.kr&gt;">,<newline>
Thomas Parmelan <htmlurl url="mailto:tom@ankh.fr.eu.org" name="&lt;tom@ankh.fr.eu.org&gt;">,<newline>
Ollivier Robert <htmlurl url="mailto:roberto@keltia.freenix.fr" name="&lt;roberto@keltia.freenix.fr&gt;">,<newline>
Thomas Roessler <htmlurl url="mailto:roessler@does-not-exist.org" name="&lt;roessler@does-not-exist.org&gt;">,<newline>
Roland Rosenfeld <htmlurl url="roland@spinnaker.de" name="&lt;roland@spinnaker.de&gt;">,<newline>
TAKIZAWA Takashi <htmlurl url="taki@luna.email.ne.jp" name="&lt;taki@luna.email.ne.jp&gt;">,<newline>
Allain Thivillon <htmlurl url="mailto:Allain.Thivillon@alma.fr" name="&lt;Allain.Thivillon@alma.fr&gt;">,<newline>
Gero Treuner <htmlurl url="mailto:gero@faveve.uni-stuttgart.de" name="&lt;gero@faveve.uni-stuttgart.de&gt;">,<newline>
Vsevolod Volkov <htmlurl url="mailto:vvv@lucky.net" name="&lt;vvv@lucky.net&gt;">,<newline>
Ken Weinert <htmlurl url="mailto:kenw@ihs.com" name="&lt;kenw@ihs.com&gt;">

<sect1>About this document
<p>
This document was written in SGML, and then rendered using the
<htmlurl url="http://www.sgmltools.org/" name="sgml-tools"> package.

</article>
